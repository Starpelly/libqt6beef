#pragma once
#ifndef SRCC_LIBQUNDOVIEW_H
#define SRCC_LIBQUNDOVIEW_H

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>

#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

#include "qtlibc.h"

#ifdef __cplusplus
extern "C" {
#endif

#ifdef __cplusplus
#if defined(WORKAROUND_INNER_CLASS_DEFINITION_QMetaObject__Connection)
typedef QMetaObject::Connection QMetaObject__Connection;
#endif
#else
typedef struct QAbstractItemDelegate QAbstractItemDelegate;
typedef struct QAbstractItemModel QAbstractItemModel;
typedef struct QAbstractItemView QAbstractItemView;
typedef struct QAbstractScrollArea QAbstractScrollArea;
typedef struct QAction QAction;
typedef struct QActionEvent QActionEvent;
typedef struct QAnyStringView QAnyStringView;
typedef struct QBackingStore QBackingStore;
typedef struct QBindingStorage QBindingStorage;
typedef struct QBitmap QBitmap;
typedef struct QChildEvent QChildEvent;
typedef struct QCloseEvent QCloseEvent;
typedef struct QContextMenuEvent QContextMenuEvent;
typedef struct QCursor QCursor;
typedef struct QDragEnterEvent QDragEnterEvent;
typedef struct QDragLeaveEvent QDragLeaveEvent;
typedef struct QDragMoveEvent QDragMoveEvent;
typedef struct QDropEvent QDropEvent;
typedef struct QEnterEvent QEnterEvent;
typedef struct QEvent QEvent;
typedef struct QFocusEvent QFocusEvent;
typedef struct QFont QFont;
typedef struct QFontInfo QFontInfo;
typedef struct QFontMetrics QFontMetrics;
typedef struct QFrame QFrame;
typedef struct QGraphicsEffect QGraphicsEffect;
typedef struct QGraphicsProxyWidget QGraphicsProxyWidget;
typedef struct QHideEvent QHideEvent;
typedef struct QIcon QIcon;
typedef struct QInputMethodEvent QInputMethodEvent;
typedef struct QItemSelection QItemSelection;
typedef struct QItemSelectionModel QItemSelectionModel;
typedef struct QKeyEvent QKeyEvent;
typedef struct QKeySequence QKeySequence;
typedef struct QLayout QLayout;
typedef struct QListView QListView;
typedef struct QLocale QLocale;
typedef struct QMargins QMargins;
typedef struct QMetaMethod QMetaMethod;
typedef struct QMetaObject QMetaObject;
typedef struct QMetaObject__Connection QMetaObject__Connection;
typedef struct QModelIndex QModelIndex;
typedef struct QMouseEvent QMouseEvent;
typedef struct QMoveEvent QMoveEvent;
typedef struct QObject QObject;
typedef struct QPaintDevice QPaintDevice;
typedef struct QPaintEngine QPaintEngine;
typedef struct QPaintEvent QPaintEvent;
typedef struct QPainter QPainter;
typedef struct QPalette QPalette;
typedef struct QPixmap QPixmap;
typedef struct QPoint QPoint;
typedef struct QPointF QPointF;
typedef struct QRect QRect;
typedef struct QRegion QRegion;
typedef struct QResizeEvent QResizeEvent;
typedef struct QScreen QScreen;
typedef struct QScrollBar QScrollBar;
typedef struct QShowEvent QShowEvent;
typedef struct QSize QSize;
typedef struct QSizePolicy QSizePolicy;
typedef struct QStyle QStyle;
typedef struct QStyleOptionFrame QStyleOptionFrame;
typedef struct QStyleOptionViewItem QStyleOptionViewItem;
typedef struct QTabletEvent QTabletEvent;
typedef struct QThread QThread;
typedef struct QTimerEvent QTimerEvent;
typedef struct QUndoGroup QUndoGroup;
typedef struct QUndoStack QUndoStack;
typedef struct QUndoView QUndoView;
typedef struct QVariant QVariant;
typedef struct QWheelEvent QWheelEvent;
typedef struct QWidget QWidget;
typedef struct QWindow QWindow;
#endif

QTLIBC_API QUndoView* QUndoView_new(QWidget* parent);
QTLIBC_API QUndoView* QUndoView_new2();
QTLIBC_API QUndoView* QUndoView_new3(QUndoStack* stack);
QTLIBC_API QUndoView* QUndoView_new4(QUndoGroup* group);
QTLIBC_API QUndoView* QUndoView_new5(QUndoStack* stack, QWidget* parent);
QTLIBC_API QUndoView* QUndoView_new6(QUndoGroup* group, QWidget* parent);
QTLIBC_API QMetaObject* QUndoView_MetaObject(const QUndoView* self);
QTLIBC_API void* QUndoView_Metacast(QUndoView* self, const char* param1);
QTLIBC_API int QUndoView_Metacall(QUndoView* self, int param1, int param2, void** param3);
QTLIBC_API void QUndoView_OnMetacall(QUndoView* self, intptr_t slot);
QTLIBC_API int QUndoView_QBaseMetacall(QUndoView* self, int param1, int param2, void** param3);
QTLIBC_API libqt_string QUndoView_Tr(const char* s);
QTLIBC_API QUndoStack* QUndoView_Stack(const QUndoView* self);
QTLIBC_API QUndoGroup* QUndoView_Group(const QUndoView* self);
QTLIBC_API void QUndoView_SetEmptyLabel(QUndoView* self, libqt_string label);
QTLIBC_API libqt_string QUndoView_EmptyLabel(const QUndoView* self);
QTLIBC_API void QUndoView_SetCleanIcon(QUndoView* self, QIcon* icon);
QTLIBC_API QIcon* QUndoView_CleanIcon(const QUndoView* self);
QTLIBC_API void QUndoView_SetStack(QUndoView* self, QUndoStack* stack);
QTLIBC_API void QUndoView_SetGroup(QUndoView* self, QUndoGroup* group);
QTLIBC_API libqt_string QUndoView_Tr2(const char* s, const char* c);
QTLIBC_API libqt_string QUndoView_Tr3(const char* s, const char* c, int n);
QTLIBC_API QRect* QUndoView_VisualRect(const QUndoView* self, QModelIndex* index);
QTLIBC_API void QUndoView_OnVisualRect(const QUndoView* self, intptr_t slot);
QTLIBC_API QRect* QUndoView_QBaseVisualRect(const QUndoView* self, QModelIndex* index);
QTLIBC_API void QUndoView_ScrollTo(QUndoView* self, QModelIndex* index, int hint);
QTLIBC_API void QUndoView_OnScrollTo(QUndoView* self, intptr_t slot);
QTLIBC_API void QUndoView_QBaseScrollTo(QUndoView* self, QModelIndex* index, int hint);
QTLIBC_API QModelIndex* QUndoView_IndexAt(const QUndoView* self, QPoint* p);
QTLIBC_API void QUndoView_OnIndexAt(const QUndoView* self, intptr_t slot);
QTLIBC_API QModelIndex* QUndoView_QBaseIndexAt(const QUndoView* self, QPoint* p);
QTLIBC_API void QUndoView_DoItemsLayout(QUndoView* self);
QTLIBC_API void QUndoView_OnDoItemsLayout(QUndoView* self, intptr_t slot);
QTLIBC_API void QUndoView_QBaseDoItemsLayout(QUndoView* self);
QTLIBC_API void QUndoView_Reset(QUndoView* self);
QTLIBC_API void QUndoView_OnReset(QUndoView* self, intptr_t slot);
QTLIBC_API void QUndoView_QBaseReset(QUndoView* self);
QTLIBC_API void QUndoView_SetRootIndex(QUndoView* self, QModelIndex* index);
QTLIBC_API void QUndoView_OnSetRootIndex(QUndoView* self, intptr_t slot);
QTLIBC_API void QUndoView_QBaseSetRootIndex(QUndoView* self, QModelIndex* index);
QTLIBC_API bool QUndoView_Event(QUndoView* self, QEvent* e);
QTLIBC_API void QUndoView_OnEvent(QUndoView* self, intptr_t slot);
QTLIBC_API bool QUndoView_QBaseEvent(QUndoView* self, QEvent* e);
QTLIBC_API void QUndoView_ScrollContentsBy(QUndoView* self, int dx, int dy);
QTLIBC_API void QUndoView_OnScrollContentsBy(QUndoView* self, intptr_t slot);
QTLIBC_API void QUndoView_QBaseScrollContentsBy(QUndoView* self, int dx, int dy);
QTLIBC_API void QUndoView_DataChanged(QUndoView* self, QModelIndex* topLeft, QModelIndex* bottomRight, libqt_list /* of int */ roles);
QTLIBC_API void QUndoView_OnDataChanged(QUndoView* self, intptr_t slot);
QTLIBC_API void QUndoView_QBaseDataChanged(QUndoView* self, QModelIndex* topLeft, QModelIndex* bottomRight, libqt_list /* of int */ roles);
QTLIBC_API void QUndoView_RowsInserted(QUndoView* self, QModelIndex* parent, int start, int end);
QTLIBC_API void QUndoView_OnRowsInserted(QUndoView* self, intptr_t slot);
QTLIBC_API void QUndoView_QBaseRowsInserted(QUndoView* self, QModelIndex* parent, int start, int end);
QTLIBC_API void QUndoView_RowsAboutToBeRemoved(QUndoView* self, QModelIndex* parent, int start, int end);
QTLIBC_API void QUndoView_OnRowsAboutToBeRemoved(QUndoView* self, intptr_t slot);
QTLIBC_API void QUndoView_QBaseRowsAboutToBeRemoved(QUndoView* self, QModelIndex* parent, int start, int end);
QTLIBC_API void QUndoView_MouseMoveEvent(QUndoView* self, QMouseEvent* e);
QTLIBC_API void QUndoView_OnMouseMoveEvent(QUndoView* self, intptr_t slot);
QTLIBC_API void QUndoView_QBaseMouseMoveEvent(QUndoView* self, QMouseEvent* e);
QTLIBC_API void QUndoView_MouseReleaseEvent(QUndoView* self, QMouseEvent* e);
QTLIBC_API void QUndoView_OnMouseReleaseEvent(QUndoView* self, intptr_t slot);
QTLIBC_API void QUndoView_QBaseMouseReleaseEvent(QUndoView* self, QMouseEvent* e);
QTLIBC_API void QUndoView_WheelEvent(QUndoView* self, QWheelEvent* e);
QTLIBC_API void QUndoView_OnWheelEvent(QUndoView* self, intptr_t slot);
QTLIBC_API void QUndoView_QBaseWheelEvent(QUndoView* self, QWheelEvent* e);
QTLIBC_API void QUndoView_TimerEvent(QUndoView* self, QTimerEvent* e);
QTLIBC_API void QUndoView_OnTimerEvent(QUndoView* self, intptr_t slot);
QTLIBC_API void QUndoView_QBaseTimerEvent(QUndoView* self, QTimerEvent* e);
QTLIBC_API void QUndoView_ResizeEvent(QUndoView* self, QResizeEvent* e);
QTLIBC_API void QUndoView_OnResizeEvent(QUndoView* self, intptr_t slot);
QTLIBC_API void QUndoView_QBaseResizeEvent(QUndoView* self, QResizeEvent* e);
QTLIBC_API void QUndoView_DragMoveEvent(QUndoView* self, QDragMoveEvent* e);
QTLIBC_API void QUndoView_OnDragMoveEvent(QUndoView* self, intptr_t slot);
QTLIBC_API void QUndoView_QBaseDragMoveEvent(QUndoView* self, QDragMoveEvent* e);
QTLIBC_API void QUndoView_DragLeaveEvent(QUndoView* self, QDragLeaveEvent* e);
QTLIBC_API void QUndoView_OnDragLeaveEvent(QUndoView* self, intptr_t slot);
QTLIBC_API void QUndoView_QBaseDragLeaveEvent(QUndoView* self, QDragLeaveEvent* e);
QTLIBC_API void QUndoView_DropEvent(QUndoView* self, QDropEvent* e);
QTLIBC_API void QUndoView_OnDropEvent(QUndoView* self, intptr_t slot);
QTLIBC_API void QUndoView_QBaseDropEvent(QUndoView* self, QDropEvent* e);
QTLIBC_API void QUndoView_StartDrag(QUndoView* self, int supportedActions);
QTLIBC_API void QUndoView_OnStartDrag(QUndoView* self, intptr_t slot);
QTLIBC_API void QUndoView_QBaseStartDrag(QUndoView* self, int supportedActions);
QTLIBC_API void QUndoView_PaintEvent(QUndoView* self, QPaintEvent* e);
QTLIBC_API void QUndoView_OnPaintEvent(QUndoView* self, intptr_t slot);
QTLIBC_API void QUndoView_QBasePaintEvent(QUndoView* self, QPaintEvent* e);
QTLIBC_API QModelIndex* QUndoView_MoveCursor(QUndoView* self, int cursorAction, int modifiers);
QTLIBC_API void QUndoView_OnMoveCursor(QUndoView* self, intptr_t slot);
QTLIBC_API QModelIndex* QUndoView_QBaseMoveCursor(QUndoView* self, int cursorAction, int modifiers);
QTLIBC_API void QUndoView_SetSelection(QUndoView* self, QRect* rect, int command);
QTLIBC_API void QUndoView_OnSetSelection(QUndoView* self, intptr_t slot);
QTLIBC_API void QUndoView_QBaseSetSelection(QUndoView* self, QRect* rect, int command);
QTLIBC_API void QUndoView_UpdateGeometries(QUndoView* self);
QTLIBC_API void QUndoView_OnUpdateGeometries(QUndoView* self, intptr_t slot);
QTLIBC_API void QUndoView_QBaseUpdateGeometries(QUndoView* self);
QTLIBC_API void QUndoView_SelectionChanged(QUndoView* self, QItemSelection* selected, QItemSelection* deselected);
QTLIBC_API void QUndoView_OnSelectionChanged(QUndoView* self, intptr_t slot);
QTLIBC_API void QUndoView_QBaseSelectionChanged(QUndoView* self, QItemSelection* selected, QItemSelection* deselected);
QTLIBC_API void QUndoView_CurrentChanged(QUndoView* self, QModelIndex* current, QModelIndex* previous);
QTLIBC_API void QUndoView_OnCurrentChanged(QUndoView* self, intptr_t slot);
QTLIBC_API void QUndoView_QBaseCurrentChanged(QUndoView* self, QModelIndex* current, QModelIndex* previous);
QTLIBC_API void QUndoView_SetModel(QUndoView* self, QAbstractItemModel* model);
QTLIBC_API void QUndoView_OnSetModel(QUndoView* self, intptr_t slot);
QTLIBC_API void QUndoView_QBaseSetModel(QUndoView* self, QAbstractItemModel* model);
QTLIBC_API void QUndoView_SetSelectionModel(QUndoView* self, QItemSelectionModel* selectionModel);
QTLIBC_API void QUndoView_OnSetSelectionModel(QUndoView* self, intptr_t slot);
QTLIBC_API void QUndoView_QBaseSetSelectionModel(QUndoView* self, QItemSelectionModel* selectionModel);
QTLIBC_API void QUndoView_KeyboardSearch(QUndoView* self, libqt_string search);
QTLIBC_API void QUndoView_OnKeyboardSearch(QUndoView* self, intptr_t slot);
QTLIBC_API void QUndoView_QBaseKeyboardSearch(QUndoView* self, libqt_string search);
QTLIBC_API int QUndoView_SizeHintForRow(const QUndoView* self, int row);
QTLIBC_API void QUndoView_OnSizeHintForRow(const QUndoView* self, intptr_t slot);
QTLIBC_API int QUndoView_QBaseSizeHintForRow(const QUndoView* self, int row);
QTLIBC_API int QUndoView_SizeHintForColumn(const QUndoView* self, int column);
QTLIBC_API void QUndoView_OnSizeHintForColumn(const QUndoView* self, intptr_t slot);
QTLIBC_API int QUndoView_QBaseSizeHintForColumn(const QUndoView* self, int column);
QTLIBC_API QAbstractItemDelegate* QUndoView_ItemDelegateForIndex(const QUndoView* self, QModelIndex* index);
QTLIBC_API void QUndoView_OnItemDelegateForIndex(const QUndoView* self, intptr_t slot);
QTLIBC_API QAbstractItemDelegate* QUndoView_QBaseItemDelegateForIndex(const QUndoView* self, QModelIndex* index);
QTLIBC_API QVariant* QUndoView_InputMethodQuery(const QUndoView* self, int query);
QTLIBC_API void QUndoView_OnInputMethodQuery(const QUndoView* self, intptr_t slot);
QTLIBC_API QVariant* QUndoView_QBaseInputMethodQuery(const QUndoView* self, int query);
QTLIBC_API void QUndoView_SelectAll(QUndoView* self);
QTLIBC_API void QUndoView_OnSelectAll(QUndoView* self, intptr_t slot);
QTLIBC_API void QUndoView_QBaseSelectAll(QUndoView* self);
QTLIBC_API void QUndoView_UpdateEditorData(QUndoView* self);
QTLIBC_API void QUndoView_OnUpdateEditorData(QUndoView* self, intptr_t slot);
QTLIBC_API void QUndoView_QBaseUpdateEditorData(QUndoView* self);
QTLIBC_API void QUndoView_UpdateEditorGeometries(QUndoView* self);
QTLIBC_API void QUndoView_OnUpdateEditorGeometries(QUndoView* self, intptr_t slot);
QTLIBC_API void QUndoView_QBaseUpdateEditorGeometries(QUndoView* self);
QTLIBC_API void QUndoView_VerticalScrollbarAction(QUndoView* self, int action);
QTLIBC_API void QUndoView_OnVerticalScrollbarAction(QUndoView* self, intptr_t slot);
QTLIBC_API void QUndoView_QBaseVerticalScrollbarAction(QUndoView* self, int action);
QTLIBC_API void QUndoView_HorizontalScrollbarAction(QUndoView* self, int action);
QTLIBC_API void QUndoView_OnHorizontalScrollbarAction(QUndoView* self, intptr_t slot);
QTLIBC_API void QUndoView_QBaseHorizontalScrollbarAction(QUndoView* self, int action);
QTLIBC_API void QUndoView_VerticalScrollbarValueChanged(QUndoView* self, int value);
QTLIBC_API void QUndoView_OnVerticalScrollbarValueChanged(QUndoView* self, intptr_t slot);
QTLIBC_API void QUndoView_QBaseVerticalScrollbarValueChanged(QUndoView* self, int value);
QTLIBC_API void QUndoView_HorizontalScrollbarValueChanged(QUndoView* self, int value);
QTLIBC_API void QUndoView_OnHorizontalScrollbarValueChanged(QUndoView* self, intptr_t slot);
QTLIBC_API void QUndoView_QBaseHorizontalScrollbarValueChanged(QUndoView* self, int value);
QTLIBC_API void QUndoView_CloseEditor(QUndoView* self, QWidget* editor, int hint);
QTLIBC_API void QUndoView_OnCloseEditor(QUndoView* self, intptr_t slot);
QTLIBC_API void QUndoView_QBaseCloseEditor(QUndoView* self, QWidget* editor, int hint);
QTLIBC_API void QUndoView_CommitData(QUndoView* self, QWidget* editor);
QTLIBC_API void QUndoView_OnCommitData(QUndoView* self, intptr_t slot);
QTLIBC_API void QUndoView_QBaseCommitData(QUndoView* self, QWidget* editor);
QTLIBC_API void QUndoView_EditorDestroyed(QUndoView* self, QObject* editor);
QTLIBC_API void QUndoView_OnEditorDestroyed(QUndoView* self, intptr_t slot);
QTLIBC_API void QUndoView_QBaseEditorDestroyed(QUndoView* self, QObject* editor);
QTLIBC_API bool QUndoView_Edit2(QUndoView* self, QModelIndex* index, int trigger, QEvent* event);
QTLIBC_API void QUndoView_OnEdit2(QUndoView* self, intptr_t slot);
QTLIBC_API bool QUndoView_QBaseEdit2(QUndoView* self, QModelIndex* index, int trigger, QEvent* event);
QTLIBC_API bool QUndoView_FocusNextPrevChild(QUndoView* self, bool next);
QTLIBC_API void QUndoView_OnFocusNextPrevChild(QUndoView* self, intptr_t slot);
QTLIBC_API bool QUndoView_QBaseFocusNextPrevChild(QUndoView* self, bool next);
QTLIBC_API bool QUndoView_ViewportEvent(QUndoView* self, QEvent* event);
QTLIBC_API void QUndoView_OnViewportEvent(QUndoView* self, intptr_t slot);
QTLIBC_API bool QUndoView_QBaseViewportEvent(QUndoView* self, QEvent* event);
QTLIBC_API void QUndoView_MousePressEvent(QUndoView* self, QMouseEvent* event);
QTLIBC_API void QUndoView_OnMousePressEvent(QUndoView* self, intptr_t slot);
QTLIBC_API void QUndoView_QBaseMousePressEvent(QUndoView* self, QMouseEvent* event);
QTLIBC_API void QUndoView_MouseDoubleClickEvent(QUndoView* self, QMouseEvent* event);
QTLIBC_API void QUndoView_OnMouseDoubleClickEvent(QUndoView* self, intptr_t slot);
QTLIBC_API void QUndoView_QBaseMouseDoubleClickEvent(QUndoView* self, QMouseEvent* event);
QTLIBC_API void QUndoView_DragEnterEvent(QUndoView* self, QDragEnterEvent* event);
QTLIBC_API void QUndoView_OnDragEnterEvent(QUndoView* self, intptr_t slot);
QTLIBC_API void QUndoView_QBaseDragEnterEvent(QUndoView* self, QDragEnterEvent* event);
QTLIBC_API void QUndoView_FocusInEvent(QUndoView* self, QFocusEvent* event);
QTLIBC_API void QUndoView_OnFocusInEvent(QUndoView* self, intptr_t slot);
QTLIBC_API void QUndoView_QBaseFocusInEvent(QUndoView* self, QFocusEvent* event);
QTLIBC_API void QUndoView_FocusOutEvent(QUndoView* self, QFocusEvent* event);
QTLIBC_API void QUndoView_OnFocusOutEvent(QUndoView* self, intptr_t slot);
QTLIBC_API void QUndoView_QBaseFocusOutEvent(QUndoView* self, QFocusEvent* event);
QTLIBC_API void QUndoView_KeyPressEvent(QUndoView* self, QKeyEvent* event);
QTLIBC_API void QUndoView_OnKeyPressEvent(QUndoView* self, intptr_t slot);
QTLIBC_API void QUndoView_QBaseKeyPressEvent(QUndoView* self, QKeyEvent* event);
QTLIBC_API void QUndoView_InputMethodEvent(QUndoView* self, QInputMethodEvent* event);
QTLIBC_API void QUndoView_OnInputMethodEvent(QUndoView* self, intptr_t slot);
QTLIBC_API void QUndoView_QBaseInputMethodEvent(QUndoView* self, QInputMethodEvent* event);
QTLIBC_API bool QUndoView_EventFilter(QUndoView* self, QObject* object, QEvent* event);
QTLIBC_API void QUndoView_OnEventFilter(QUndoView* self, intptr_t slot);
QTLIBC_API bool QUndoView_QBaseEventFilter(QUndoView* self, QObject* object, QEvent* event);
QTLIBC_API QSize* QUndoView_MinimumSizeHint(const QUndoView* self);
QTLIBC_API void QUndoView_OnMinimumSizeHint(const QUndoView* self, intptr_t slot);
QTLIBC_API QSize* QUndoView_QBaseMinimumSizeHint(const QUndoView* self);
QTLIBC_API QSize* QUndoView_SizeHint(const QUndoView* self);
QTLIBC_API void QUndoView_OnSizeHint(const QUndoView* self, intptr_t slot);
QTLIBC_API QSize* QUndoView_QBaseSizeHint(const QUndoView* self);
QTLIBC_API void QUndoView_SetupViewport(QUndoView* self, QWidget* viewport);
QTLIBC_API void QUndoView_OnSetupViewport(QUndoView* self, intptr_t slot);
QTLIBC_API void QUndoView_QBaseSetupViewport(QUndoView* self, QWidget* viewport);
QTLIBC_API void QUndoView_ContextMenuEvent(QUndoView* self, QContextMenuEvent* param1);
QTLIBC_API void QUndoView_OnContextMenuEvent(QUndoView* self, intptr_t slot);
QTLIBC_API void QUndoView_QBaseContextMenuEvent(QUndoView* self, QContextMenuEvent* param1);
QTLIBC_API void QUndoView_ChangeEvent(QUndoView* self, QEvent* param1);
QTLIBC_API void QUndoView_OnChangeEvent(QUndoView* self, intptr_t slot);
QTLIBC_API void QUndoView_QBaseChangeEvent(QUndoView* self, QEvent* param1);
QTLIBC_API int QUndoView_DevType(const QUndoView* self);
QTLIBC_API void QUndoView_OnDevType(const QUndoView* self, intptr_t slot);
QTLIBC_API int QUndoView_QBaseDevType(const QUndoView* self);
QTLIBC_API void QUndoView_SetVisible(QUndoView* self, bool visible);
QTLIBC_API void QUndoView_OnSetVisible(QUndoView* self, intptr_t slot);
QTLIBC_API void QUndoView_QBaseSetVisible(QUndoView* self, bool visible);
QTLIBC_API int QUndoView_HeightForWidth(const QUndoView* self, int param1);
QTLIBC_API void QUndoView_OnHeightForWidth(const QUndoView* self, intptr_t slot);
QTLIBC_API int QUndoView_QBaseHeightForWidth(const QUndoView* self, int param1);
QTLIBC_API bool QUndoView_HasHeightForWidth(const QUndoView* self);
QTLIBC_API void QUndoView_OnHasHeightForWidth(const QUndoView* self, intptr_t slot);
QTLIBC_API bool QUndoView_QBaseHasHeightForWidth(const QUndoView* self);
QTLIBC_API QPaintEngine* QUndoView_PaintEngine(const QUndoView* self);
QTLIBC_API void QUndoView_OnPaintEngine(const QUndoView* self, intptr_t slot);
QTLIBC_API QPaintEngine* QUndoView_QBasePaintEngine(const QUndoView* self);
QTLIBC_API void QUndoView_KeyReleaseEvent(QUndoView* self, QKeyEvent* event);
QTLIBC_API void QUndoView_OnKeyReleaseEvent(QUndoView* self, intptr_t slot);
QTLIBC_API void QUndoView_QBaseKeyReleaseEvent(QUndoView* self, QKeyEvent* event);
QTLIBC_API void QUndoView_EnterEvent(QUndoView* self, QEnterEvent* event);
QTLIBC_API void QUndoView_OnEnterEvent(QUndoView* self, intptr_t slot);
QTLIBC_API void QUndoView_QBaseEnterEvent(QUndoView* self, QEnterEvent* event);
QTLIBC_API void QUndoView_LeaveEvent(QUndoView* self, QEvent* event);
QTLIBC_API void QUndoView_OnLeaveEvent(QUndoView* self, intptr_t slot);
QTLIBC_API void QUndoView_QBaseLeaveEvent(QUndoView* self, QEvent* event);
QTLIBC_API void QUndoView_MoveEvent(QUndoView* self, QMoveEvent* event);
QTLIBC_API void QUndoView_OnMoveEvent(QUndoView* self, intptr_t slot);
QTLIBC_API void QUndoView_QBaseMoveEvent(QUndoView* self, QMoveEvent* event);
QTLIBC_API void QUndoView_CloseEvent(QUndoView* self, QCloseEvent* event);
QTLIBC_API void QUndoView_OnCloseEvent(QUndoView* self, intptr_t slot);
QTLIBC_API void QUndoView_QBaseCloseEvent(QUndoView* self, QCloseEvent* event);
QTLIBC_API void QUndoView_TabletEvent(QUndoView* self, QTabletEvent* event);
QTLIBC_API void QUndoView_OnTabletEvent(QUndoView* self, intptr_t slot);
QTLIBC_API void QUndoView_QBaseTabletEvent(QUndoView* self, QTabletEvent* event);
QTLIBC_API void QUndoView_ActionEvent(QUndoView* self, QActionEvent* event);
QTLIBC_API void QUndoView_OnActionEvent(QUndoView* self, intptr_t slot);
QTLIBC_API void QUndoView_QBaseActionEvent(QUndoView* self, QActionEvent* event);
QTLIBC_API void QUndoView_ShowEvent(QUndoView* self, QShowEvent* event);
QTLIBC_API void QUndoView_OnShowEvent(QUndoView* self, intptr_t slot);
QTLIBC_API void QUndoView_QBaseShowEvent(QUndoView* self, QShowEvent* event);
QTLIBC_API void QUndoView_HideEvent(QUndoView* self, QHideEvent* event);
QTLIBC_API void QUndoView_OnHideEvent(QUndoView* self, intptr_t slot);
QTLIBC_API void QUndoView_QBaseHideEvent(QUndoView* self, QHideEvent* event);
QTLIBC_API bool QUndoView_NativeEvent(QUndoView* self, libqt_string eventType, void* message, intptr_t* result);
QTLIBC_API void QUndoView_OnNativeEvent(QUndoView* self, intptr_t slot);
QTLIBC_API bool QUndoView_QBaseNativeEvent(QUndoView* self, libqt_string eventType, void* message, intptr_t* result);
QTLIBC_API void QUndoView_ChildEvent(QUndoView* self, QChildEvent* event);
QTLIBC_API void QUndoView_OnChildEvent(QUndoView* self, intptr_t slot);
QTLIBC_API void QUndoView_QBaseChildEvent(QUndoView* self, QChildEvent* event);
QTLIBC_API void QUndoView_CustomEvent(QUndoView* self, QEvent* event);
QTLIBC_API void QUndoView_OnCustomEvent(QUndoView* self, intptr_t slot);
QTLIBC_API void QUndoView_QBaseCustomEvent(QUndoView* self, QEvent* event);
QTLIBC_API void QUndoView_ConnectNotify(QUndoView* self, QMetaMethod* signal);
QTLIBC_API void QUndoView_OnConnectNotify(QUndoView* self, intptr_t slot);
QTLIBC_API void QUndoView_QBaseConnectNotify(QUndoView* self, QMetaMethod* signal);
QTLIBC_API void QUndoView_DisconnectNotify(QUndoView* self, QMetaMethod* signal);
QTLIBC_API void QUndoView_OnDisconnectNotify(QUndoView* self, intptr_t slot);
QTLIBC_API void QUndoView_QBaseDisconnectNotify(QUndoView* self, QMetaMethod* signal);
QTLIBC_API void QUndoView_InitViewItemOption(const QUndoView* self, QStyleOptionViewItem* option);
QTLIBC_API void QUndoView_OnInitViewItemOption(const QUndoView* self, intptr_t slot);
QTLIBC_API void QUndoView_QBaseInitViewItemOption(const QUndoView* self, QStyleOptionViewItem* option);
QTLIBC_API int QUndoView_HorizontalOffset(const QUndoView* self);
QTLIBC_API void QUndoView_OnHorizontalOffset(const QUndoView* self, intptr_t slot);
QTLIBC_API int QUndoView_QBaseHorizontalOffset(const QUndoView* self);
QTLIBC_API int QUndoView_VerticalOffset(const QUndoView* self);
QTLIBC_API void QUndoView_OnVerticalOffset(const QUndoView* self, intptr_t slot);
QTLIBC_API int QUndoView_QBaseVerticalOffset(const QUndoView* self);
QTLIBC_API QRegion* QUndoView_VisualRegionForSelection(const QUndoView* self, QItemSelection* selection);
QTLIBC_API void QUndoView_OnVisualRegionForSelection(const QUndoView* self, intptr_t slot);
QTLIBC_API QRegion* QUndoView_QBaseVisualRegionForSelection(const QUndoView* self, QItemSelection* selection);
QTLIBC_API libqt_list /* of QModelIndex* */ QUndoView_SelectedIndexes(const QUndoView* self);
QTLIBC_API void QUndoView_OnSelectedIndexes(const QUndoView* self, intptr_t slot);
QTLIBC_API libqt_list /* of QModelIndex* */ QUndoView_QBaseSelectedIndexes(const QUndoView* self);
QTLIBC_API bool QUndoView_IsIndexHidden(const QUndoView* self, QModelIndex* index);
QTLIBC_API void QUndoView_OnIsIndexHidden(const QUndoView* self, intptr_t slot);
QTLIBC_API bool QUndoView_QBaseIsIndexHidden(const QUndoView* self, QModelIndex* index);
QTLIBC_API QSize* QUndoView_ViewportSizeHint(const QUndoView* self);
QTLIBC_API void QUndoView_OnViewportSizeHint(const QUndoView* self, intptr_t slot);
QTLIBC_API QSize* QUndoView_QBaseViewportSizeHint(const QUndoView* self);
QTLIBC_API int QUndoView_SelectionCommand(const QUndoView* self, QModelIndex* index, QEvent* event);
QTLIBC_API void QUndoView_OnSelectionCommand(const QUndoView* self, intptr_t slot);
QTLIBC_API int QUndoView_QBaseSelectionCommand(const QUndoView* self, QModelIndex* index, QEvent* event);
QTLIBC_API void QUndoView_InitStyleOption(const QUndoView* self, QStyleOptionFrame* option);
QTLIBC_API void QUndoView_OnInitStyleOption(const QUndoView* self, intptr_t slot);
QTLIBC_API void QUndoView_QBaseInitStyleOption(const QUndoView* self, QStyleOptionFrame* option);
QTLIBC_API int QUndoView_Metric(const QUndoView* self, int param1);
QTLIBC_API void QUndoView_OnMetric(const QUndoView* self, intptr_t slot);
QTLIBC_API int QUndoView_QBaseMetric(const QUndoView* self, int param1);
QTLIBC_API void QUndoView_InitPainter(const QUndoView* self, QPainter* painter);
QTLIBC_API void QUndoView_OnInitPainter(const QUndoView* self, intptr_t slot);
QTLIBC_API void QUndoView_QBaseInitPainter(const QUndoView* self, QPainter* painter);
QTLIBC_API QPaintDevice* QUndoView_Redirected(const QUndoView* self, QPoint* offset);
QTLIBC_API void QUndoView_OnRedirected(const QUndoView* self, intptr_t slot);
QTLIBC_API QPaintDevice* QUndoView_QBaseRedirected(const QUndoView* self, QPoint* offset);
QTLIBC_API QPainter* QUndoView_SharedPainter(const QUndoView* self);
QTLIBC_API void QUndoView_OnSharedPainter(const QUndoView* self, intptr_t slot);
QTLIBC_API QPainter* QUndoView_QBaseSharedPainter(const QUndoView* self);
QTLIBC_API void QUndoView_ResizeContents(QUndoView* self, int width, int height);
QTLIBC_API void QUndoView_OnResizeContents(QUndoView* self, intptr_t slot);
QTLIBC_API void QUndoView_QBaseResizeContents(QUndoView* self, int width, int height);
QTLIBC_API QSize* QUndoView_ContentsSize(const QUndoView* self);
QTLIBC_API void QUndoView_OnContentsSize(const QUndoView* self, intptr_t slot);
QTLIBC_API QSize* QUndoView_QBaseContentsSize(const QUndoView* self);
QTLIBC_API QRect* QUndoView_RectForIndex(const QUndoView* self, QModelIndex* index);
QTLIBC_API void QUndoView_OnRectForIndex(const QUndoView* self, intptr_t slot);
QTLIBC_API QRect* QUndoView_QBaseRectForIndex(const QUndoView* self, QModelIndex* index);
QTLIBC_API void QUndoView_SetPositionForIndex(QUndoView* self, QPoint* position, QModelIndex* index);
QTLIBC_API void QUndoView_OnSetPositionForIndex(QUndoView* self, intptr_t slot);
QTLIBC_API void QUndoView_QBaseSetPositionForIndex(QUndoView* self, QPoint* position, QModelIndex* index);
QTLIBC_API int QUndoView_State(const QUndoView* self);
QTLIBC_API void QUndoView_OnState(const QUndoView* self, intptr_t slot);
QTLIBC_API int QUndoView_QBaseState(const QUndoView* self);
QTLIBC_API void QUndoView_SetState(QUndoView* self, int state);
QTLIBC_API void QUndoView_OnSetState(QUndoView* self, intptr_t slot);
QTLIBC_API void QUndoView_QBaseSetState(QUndoView* self, int state);
QTLIBC_API void QUndoView_ScheduleDelayedItemsLayout(QUndoView* self);
QTLIBC_API void QUndoView_OnScheduleDelayedItemsLayout(QUndoView* self, intptr_t slot);
QTLIBC_API void QUndoView_QBaseScheduleDelayedItemsLayout(QUndoView* self);
QTLIBC_API void QUndoView_ExecuteDelayedItemsLayout(QUndoView* self);
QTLIBC_API void QUndoView_OnExecuteDelayedItemsLayout(QUndoView* self, intptr_t slot);
QTLIBC_API void QUndoView_QBaseExecuteDelayedItemsLayout(QUndoView* self);
QTLIBC_API void QUndoView_SetDirtyRegion(QUndoView* self, QRegion* region);
QTLIBC_API void QUndoView_OnSetDirtyRegion(QUndoView* self, intptr_t slot);
QTLIBC_API void QUndoView_QBaseSetDirtyRegion(QUndoView* self, QRegion* region);
QTLIBC_API void QUndoView_ScrollDirtyRegion(QUndoView* self, int dx, int dy);
QTLIBC_API void QUndoView_OnScrollDirtyRegion(QUndoView* self, intptr_t slot);
QTLIBC_API void QUndoView_QBaseScrollDirtyRegion(QUndoView* self, int dx, int dy);
QTLIBC_API QPoint* QUndoView_DirtyRegionOffset(const QUndoView* self);
QTLIBC_API void QUndoView_OnDirtyRegionOffset(const QUndoView* self, intptr_t slot);
QTLIBC_API QPoint* QUndoView_QBaseDirtyRegionOffset(const QUndoView* self);
QTLIBC_API void QUndoView_StartAutoScroll(QUndoView* self);
QTLIBC_API void QUndoView_OnStartAutoScroll(QUndoView* self, intptr_t slot);
QTLIBC_API void QUndoView_QBaseStartAutoScroll(QUndoView* self);
QTLIBC_API void QUndoView_StopAutoScroll(QUndoView* self);
QTLIBC_API void QUndoView_OnStopAutoScroll(QUndoView* self, intptr_t slot);
QTLIBC_API void QUndoView_QBaseStopAutoScroll(QUndoView* self);
QTLIBC_API void QUndoView_DoAutoScroll(QUndoView* self);
QTLIBC_API void QUndoView_OnDoAutoScroll(QUndoView* self, intptr_t slot);
QTLIBC_API void QUndoView_QBaseDoAutoScroll(QUndoView* self);
QTLIBC_API int QUndoView_DropIndicatorPosition(const QUndoView* self);
QTLIBC_API void QUndoView_OnDropIndicatorPosition(const QUndoView* self, intptr_t slot);
QTLIBC_API int QUndoView_QBaseDropIndicatorPosition(const QUndoView* self);
QTLIBC_API void QUndoView_SetViewportMargins(QUndoView* self, int left, int top, int right, int bottom);
QTLIBC_API void QUndoView_OnSetViewportMargins(QUndoView* self, intptr_t slot);
QTLIBC_API void QUndoView_QBaseSetViewportMargins(QUndoView* self, int left, int top, int right, int bottom);
QTLIBC_API QMargins* QUndoView_ViewportMargins(const QUndoView* self);
QTLIBC_API void QUndoView_OnViewportMargins(const QUndoView* self, intptr_t slot);
QTLIBC_API QMargins* QUndoView_QBaseViewportMargins(const QUndoView* self);
QTLIBC_API void QUndoView_DrawFrame(QUndoView* self, QPainter* param1);
QTLIBC_API void QUndoView_OnDrawFrame(QUndoView* self, intptr_t slot);
QTLIBC_API void QUndoView_QBaseDrawFrame(QUndoView* self, QPainter* param1);
QTLIBC_API void QUndoView_UpdateMicroFocus(QUndoView* self);
QTLIBC_API void QUndoView_OnUpdateMicroFocus(QUndoView* self, intptr_t slot);
QTLIBC_API void QUndoView_QBaseUpdateMicroFocus(QUndoView* self);
QTLIBC_API void QUndoView_Create(QUndoView* self);
QTLIBC_API void QUndoView_OnCreate(QUndoView* self, intptr_t slot);
QTLIBC_API void QUndoView_QBaseCreate(QUndoView* self);
QTLIBC_API void QUndoView_Destroy(QUndoView* self);
QTLIBC_API void QUndoView_OnDestroy(QUndoView* self, intptr_t slot);
QTLIBC_API void QUndoView_QBaseDestroy(QUndoView* self);
QTLIBC_API bool QUndoView_FocusNextChild(QUndoView* self);
QTLIBC_API void QUndoView_OnFocusNextChild(QUndoView* self, intptr_t slot);
QTLIBC_API bool QUndoView_QBaseFocusNextChild(QUndoView* self);
QTLIBC_API bool QUndoView_FocusPreviousChild(QUndoView* self);
QTLIBC_API void QUndoView_OnFocusPreviousChild(QUndoView* self, intptr_t slot);
QTLIBC_API bool QUndoView_QBaseFocusPreviousChild(QUndoView* self);
QTLIBC_API QObject* QUndoView_Sender(const QUndoView* self);
QTLIBC_API void QUndoView_OnSender(const QUndoView* self, intptr_t slot);
QTLIBC_API QObject* QUndoView_QBaseSender(const QUndoView* self);
QTLIBC_API int QUndoView_SenderSignalIndex(const QUndoView* self);
QTLIBC_API void QUndoView_OnSenderSignalIndex(const QUndoView* self, intptr_t slot);
QTLIBC_API int QUndoView_QBaseSenderSignalIndex(const QUndoView* self);
QTLIBC_API int QUndoView_Receivers(const QUndoView* self, const char* signal);
QTLIBC_API void QUndoView_OnReceivers(const QUndoView* self, intptr_t slot);
QTLIBC_API int QUndoView_QBaseReceivers(const QUndoView* self, const char* signal);
QTLIBC_API bool QUndoView_IsSignalConnected(const QUndoView* self, QMetaMethod* signal);
QTLIBC_API void QUndoView_OnIsSignalConnected(const QUndoView* self, intptr_t slot);
QTLIBC_API bool QUndoView_QBaseIsSignalConnected(const QUndoView* self, QMetaMethod* signal);
QTLIBC_API void QUndoView_Delete(QUndoView* self);

#ifdef __cplusplus
} /* extern C */
#endif

#endif
