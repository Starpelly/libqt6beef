#pragma once
#ifndef SRC_QTC_LIBQTABLEWIDGET_H
#define SRC_QTC_LIBQTABLEWIDGET_H

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>

#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

#include "qtlibc.h"

#ifdef __cplusplus
extern "C" {
#endif

#ifdef __cplusplus
#if defined(WORKAROUND_INNER_CLASS_DEFINITION_QMetaObject__Connection)
typedef QMetaObject::Connection QMetaObject__Connection;
#endif
#else
typedef struct QAbstractItemDelegate QAbstractItemDelegate;
typedef struct QAbstractItemModel QAbstractItemModel;
typedef struct QAbstractItemView QAbstractItemView;
typedef struct QAbstractScrollArea QAbstractScrollArea;
typedef struct QAction QAction;
typedef struct QActionEvent QActionEvent;
typedef struct QAnyStringView QAnyStringView;
typedef struct QBackingStore QBackingStore;
typedef struct QBindingStorage QBindingStorage;
typedef struct QBitmap QBitmap;
typedef struct QBrush QBrush;
typedef struct QChildEvent QChildEvent;
typedef struct QCloseEvent QCloseEvent;
typedef struct QContextMenuEvent QContextMenuEvent;
typedef struct QCursor QCursor;
typedef struct QDataStream QDataStream;
typedef struct QDragEnterEvent QDragEnterEvent;
typedef struct QDragLeaveEvent QDragLeaveEvent;
typedef struct QDragMoveEvent QDragMoveEvent;
typedef struct QDropEvent QDropEvent;
typedef struct QEnterEvent QEnterEvent;
typedef struct QEvent QEvent;
typedef struct QFocusEvent QFocusEvent;
typedef struct QFont QFont;
typedef struct QFontInfo QFontInfo;
typedef struct QFontMetrics QFontMetrics;
typedef struct QFrame QFrame;
typedef struct QGraphicsEffect QGraphicsEffect;
typedef struct QGraphicsProxyWidget QGraphicsProxyWidget;
typedef struct QHeaderView QHeaderView;
typedef struct QHideEvent QHideEvent;
typedef struct QIcon QIcon;
typedef struct QInputMethodEvent QInputMethodEvent;
typedef struct QItemSelection QItemSelection;
typedef struct QItemSelectionModel QItemSelectionModel;
typedef struct QKeyEvent QKeyEvent;
typedef struct QKeySequence QKeySequence;
typedef struct QLayout QLayout;
typedef struct QLocale QLocale;
typedef struct QMargins QMargins;
typedef struct QMetaMethod QMetaMethod;
typedef struct QMetaObject QMetaObject;
typedef struct QMetaObject__Connection QMetaObject__Connection;
typedef struct QMimeData QMimeData;
typedef struct QModelIndex QModelIndex;
typedef struct QMouseEvent QMouseEvent;
typedef struct QMoveEvent QMoveEvent;
typedef struct QObject QObject;
typedef struct QPaintDevice QPaintDevice;
typedef struct QPaintEngine QPaintEngine;
typedef struct QPaintEvent QPaintEvent;
typedef struct QPainter QPainter;
typedef struct QPalette QPalette;
typedef struct QPixmap QPixmap;
typedef struct QPoint QPoint;
typedef struct QPointF QPointF;
typedef struct QRect QRect;
typedef struct QRegion QRegion;
typedef struct QResizeEvent QResizeEvent;
typedef struct QScreen QScreen;
typedef struct QScrollBar QScrollBar;
typedef struct QShowEvent QShowEvent;
typedef struct QSize QSize;
typedef struct QSizePolicy QSizePolicy;
typedef struct QStyle QStyle;
typedef struct QStyleOptionFrame QStyleOptionFrame;
typedef struct QStyleOptionViewItem QStyleOptionViewItem;
typedef struct QTableView QTableView;
typedef struct QTableWidget QTableWidget;
typedef struct QTableWidgetItem QTableWidgetItem;
typedef struct QTableWidgetSelectionRange QTableWidgetSelectionRange;
typedef struct QTabletEvent QTabletEvent;
typedef struct QThread QThread;
typedef struct QTimerEvent QTimerEvent;
typedef struct QVariant QVariant;
typedef struct QWheelEvent QWheelEvent;
typedef struct QWidget QWidget;
typedef struct QWindow QWindow;
#endif

#ifdef __cplusplus
typedef QTableWidgetItem::ItemType ItemType; // C++ enum
#else
typedef int ItemType; // C ABI enum
#endif

QTLIBC_API QTableWidgetSelectionRange* QTableWidgetSelectionRange_new(QTableWidgetSelectionRange* other);
QTLIBC_API QTableWidgetSelectionRange* QTableWidgetSelectionRange_new2(QTableWidgetSelectionRange* other);
QTLIBC_API QTableWidgetSelectionRange* QTableWidgetSelectionRange_new3();
QTLIBC_API QTableWidgetSelectionRange* QTableWidgetSelectionRange_new4(int top, int left, int bottom, int right);
QTLIBC_API void QTableWidgetSelectionRange_CopyAssign(QTableWidgetSelectionRange* self, QTableWidgetSelectionRange* other);
QTLIBC_API void QTableWidgetSelectionRange_MoveAssign(QTableWidgetSelectionRange* self, QTableWidgetSelectionRange* other);
QTLIBC_API int QTableWidgetSelectionRange_TopRow(const QTableWidgetSelectionRange* self);
QTLIBC_API int QTableWidgetSelectionRange_BottomRow(const QTableWidgetSelectionRange* self);
QTLIBC_API int QTableWidgetSelectionRange_LeftColumn(const QTableWidgetSelectionRange* self);
QTLIBC_API int QTableWidgetSelectionRange_RightColumn(const QTableWidgetSelectionRange* self);
QTLIBC_API int QTableWidgetSelectionRange_RowCount(const QTableWidgetSelectionRange* self);
QTLIBC_API int QTableWidgetSelectionRange_ColumnCount(const QTableWidgetSelectionRange* self);
QTLIBC_API void QTableWidgetSelectionRange_Delete(QTableWidgetSelectionRange* self);

QTLIBC_API QTableWidgetItem* QTableWidgetItem_new();
QTLIBC_API QTableWidgetItem* QTableWidgetItem_new2(libqt_string text);
QTLIBC_API QTableWidgetItem* QTableWidgetItem_new3(QIcon* icon, libqt_string text);
QTLIBC_API QTableWidgetItem* QTableWidgetItem_new4(QTableWidgetItem* other);
QTLIBC_API QTableWidgetItem* QTableWidgetItem_new5(int typeVal);
QTLIBC_API QTableWidgetItem* QTableWidgetItem_new6(libqt_string text, int typeVal);
QTLIBC_API QTableWidgetItem* QTableWidgetItem_new7(QIcon* icon, libqt_string text, int typeVal);
QTLIBC_API QTableWidgetItem* QTableWidgetItem_Clone(const QTableWidgetItem* self);
QTLIBC_API void QTableWidgetItem_OnClone(const QTableWidgetItem* self, intptr_t slot);
QTLIBC_API QTableWidgetItem* QTableWidgetItem_QBaseClone(const QTableWidgetItem* self);
QTLIBC_API QTableWidget* QTableWidgetItem_TableWidget(const QTableWidgetItem* self);
QTLIBC_API int QTableWidgetItem_Row(const QTableWidgetItem* self);
QTLIBC_API int QTableWidgetItem_Column(const QTableWidgetItem* self);
QTLIBC_API void QTableWidgetItem_SetSelected(QTableWidgetItem* self, bool selectVal);
QTLIBC_API bool QTableWidgetItem_IsSelected(const QTableWidgetItem* self);
QTLIBC_API int QTableWidgetItem_Flags(const QTableWidgetItem* self);
QTLIBC_API void QTableWidgetItem_SetFlags(QTableWidgetItem* self, int flags);
QTLIBC_API libqt_string QTableWidgetItem_Text(const QTableWidgetItem* self);
QTLIBC_API void QTableWidgetItem_SetText(QTableWidgetItem* self, libqt_string text);
QTLIBC_API QIcon* QTableWidgetItem_Icon(const QTableWidgetItem* self);
QTLIBC_API void QTableWidgetItem_SetIcon(QTableWidgetItem* self, QIcon* icon);
QTLIBC_API libqt_string QTableWidgetItem_StatusTip(const QTableWidgetItem* self);
QTLIBC_API void QTableWidgetItem_SetStatusTip(QTableWidgetItem* self, libqt_string statusTip);
QTLIBC_API libqt_string QTableWidgetItem_ToolTip(const QTableWidgetItem* self);
QTLIBC_API void QTableWidgetItem_SetToolTip(QTableWidgetItem* self, libqt_string toolTip);
QTLIBC_API libqt_string QTableWidgetItem_WhatsThis(const QTableWidgetItem* self);
QTLIBC_API void QTableWidgetItem_SetWhatsThis(QTableWidgetItem* self, libqt_string whatsThis);
QTLIBC_API QFont* QTableWidgetItem_Font(const QTableWidgetItem* self);
QTLIBC_API void QTableWidgetItem_SetFont(QTableWidgetItem* self, QFont* font);
QTLIBC_API int QTableWidgetItem_TextAlignment(const QTableWidgetItem* self);
QTLIBC_API void QTableWidgetItem_SetTextAlignment(QTableWidgetItem* self, int alignment);
QTLIBC_API void QTableWidgetItem_SetTextAlignmentWithAlignment(QTableWidgetItem* self, int alignment);
QTLIBC_API void QTableWidgetItem_SetTextAlignment2(QTableWidgetItem* self, int alignment);
QTLIBC_API QBrush* QTableWidgetItem_Background(const QTableWidgetItem* self);
QTLIBC_API void QTableWidgetItem_SetBackground(QTableWidgetItem* self, QBrush* brush);
QTLIBC_API QBrush* QTableWidgetItem_Foreground(const QTableWidgetItem* self);
QTLIBC_API void QTableWidgetItem_SetForeground(QTableWidgetItem* self, QBrush* brush);
QTLIBC_API int QTableWidgetItem_CheckState(const QTableWidgetItem* self);
QTLIBC_API void QTableWidgetItem_SetCheckState(QTableWidgetItem* self, int state);
QTLIBC_API QSize* QTableWidgetItem_SizeHint(const QTableWidgetItem* self);
QTLIBC_API void QTableWidgetItem_SetSizeHint(QTableWidgetItem* self, QSize* size);
QTLIBC_API QVariant* QTableWidgetItem_Data(const QTableWidgetItem* self, int role);
QTLIBC_API void QTableWidgetItem_OnData(const QTableWidgetItem* self, intptr_t slot);
QTLIBC_API QVariant* QTableWidgetItem_QBaseData(const QTableWidgetItem* self, int role);
QTLIBC_API void QTableWidgetItem_SetData(QTableWidgetItem* self, int role, QVariant* value);
QTLIBC_API void QTableWidgetItem_OnSetData(QTableWidgetItem* self, intptr_t slot);
QTLIBC_API void QTableWidgetItem_QBaseSetData(QTableWidgetItem* self, int role, QVariant* value);
QTLIBC_API bool QTableWidgetItem_OperatorLesser(const QTableWidgetItem* self, QTableWidgetItem* other);
QTLIBC_API void QTableWidgetItem_OnOperatorLesser(const QTableWidgetItem* self, intptr_t slot);
QTLIBC_API bool QTableWidgetItem_QBaseOperatorLesser(const QTableWidgetItem* self, QTableWidgetItem* other);
QTLIBC_API void QTableWidgetItem_Read(QTableWidgetItem* self, QDataStream* in);
QTLIBC_API void QTableWidgetItem_OnRead(QTableWidgetItem* self, intptr_t slot);
QTLIBC_API void QTableWidgetItem_QBaseRead(QTableWidgetItem* self, QDataStream* in);
QTLIBC_API void QTableWidgetItem_Write(const QTableWidgetItem* self, QDataStream* out);
QTLIBC_API void QTableWidgetItem_OnWrite(const QTableWidgetItem* self, intptr_t slot);
QTLIBC_API void QTableWidgetItem_QBaseWrite(const QTableWidgetItem* self, QDataStream* out);
QTLIBC_API void QTableWidgetItem_OperatorAssign(QTableWidgetItem* self, QTableWidgetItem* other);
QTLIBC_API int QTableWidgetItem_Type(const QTableWidgetItem* self);
QTLIBC_API void QTableWidgetItem_Delete(QTableWidgetItem* self);

QTLIBC_API QTableWidget* QTableWidget_new(QWidget* parent);
QTLIBC_API QTableWidget* QTableWidget_new2();
QTLIBC_API QTableWidget* QTableWidget_new3(int rows, int columns);
QTLIBC_API QTableWidget* QTableWidget_new4(int rows, int columns, QWidget* parent);
QTLIBC_API QMetaObject* QTableWidget_MetaObject(const QTableWidget* self);
QTLIBC_API void* QTableWidget_Metacast(QTableWidget* self, const char* param1);
QTLIBC_API int QTableWidget_Metacall(QTableWidget* self, int param1, int param2, void** param3);
QTLIBC_API void QTableWidget_OnMetacall(QTableWidget* self, intptr_t slot);
QTLIBC_API int QTableWidget_QBaseMetacall(QTableWidget* self, int param1, int param2, void** param3);
QTLIBC_API libqt_string QTableWidget_Tr(const char* s);
QTLIBC_API void QTableWidget_SetRowCount(QTableWidget* self, int rows);
QTLIBC_API int QTableWidget_RowCount(const QTableWidget* self);
QTLIBC_API void QTableWidget_SetColumnCount(QTableWidget* self, int columns);
QTLIBC_API int QTableWidget_ColumnCount(const QTableWidget* self);
QTLIBC_API int QTableWidget_Row(const QTableWidget* self, QTableWidgetItem* item);
QTLIBC_API int QTableWidget_Column(const QTableWidget* self, QTableWidgetItem* item);
QTLIBC_API QTableWidgetItem* QTableWidget_Item(const QTableWidget* self, int row, int column);
QTLIBC_API void QTableWidget_SetItem(QTableWidget* self, int row, int column, QTableWidgetItem* item);
QTLIBC_API QTableWidgetItem* QTableWidget_TakeItem(QTableWidget* self, int row, int column);
QTLIBC_API libqt_list /* of QTableWidgetItem* */ QTableWidget_Items(const QTableWidget* self, QMimeData* data);
QTLIBC_API QModelIndex* QTableWidget_IndexFromItem(const QTableWidget* self, QTableWidgetItem* item);
QTLIBC_API QTableWidgetItem* QTableWidget_ItemFromIndex(const QTableWidget* self, QModelIndex* index);
QTLIBC_API QTableWidgetItem* QTableWidget_VerticalHeaderItem(const QTableWidget* self, int row);
QTLIBC_API void QTableWidget_SetVerticalHeaderItem(QTableWidget* self, int row, QTableWidgetItem* item);
QTLIBC_API QTableWidgetItem* QTableWidget_TakeVerticalHeaderItem(QTableWidget* self, int row);
QTLIBC_API QTableWidgetItem* QTableWidget_HorizontalHeaderItem(const QTableWidget* self, int column);
QTLIBC_API void QTableWidget_SetHorizontalHeaderItem(QTableWidget* self, int column, QTableWidgetItem* item);
QTLIBC_API QTableWidgetItem* QTableWidget_TakeHorizontalHeaderItem(QTableWidget* self, int column);
QTLIBC_API void QTableWidget_SetVerticalHeaderLabels(QTableWidget* self, libqt_list /* of libqt_string */ labels);
QTLIBC_API void QTableWidget_SetHorizontalHeaderLabels(QTableWidget* self, libqt_list /* of libqt_string */ labels);
QTLIBC_API int QTableWidget_CurrentRow(const QTableWidget* self);
QTLIBC_API int QTableWidget_CurrentColumn(const QTableWidget* self);
QTLIBC_API QTableWidgetItem* QTableWidget_CurrentItem(const QTableWidget* self);
QTLIBC_API void QTableWidget_SetCurrentItem(QTableWidget* self, QTableWidgetItem* item);
QTLIBC_API void QTableWidget_SetCurrentItem2(QTableWidget* self, QTableWidgetItem* item, int command);
QTLIBC_API void QTableWidget_SetCurrentCell(QTableWidget* self, int row, int column);
QTLIBC_API void QTableWidget_SetCurrentCell2(QTableWidget* self, int row, int column, int command);
QTLIBC_API void QTableWidget_SortItems(QTableWidget* self, int column);
QTLIBC_API void QTableWidget_SetSortingEnabled(QTableWidget* self, bool enable);
QTLIBC_API bool QTableWidget_IsSortingEnabled(const QTableWidget* self);
QTLIBC_API void QTableWidget_EditItem(QTableWidget* self, QTableWidgetItem* item);
QTLIBC_API void QTableWidget_OpenPersistentEditor(QTableWidget* self, QTableWidgetItem* item);
QTLIBC_API void QTableWidget_ClosePersistentEditor(QTableWidget* self, QTableWidgetItem* item);
QTLIBC_API bool QTableWidget_IsPersistentEditorOpen(const QTableWidget* self, QTableWidgetItem* item);
QTLIBC_API QWidget* QTableWidget_CellWidget(const QTableWidget* self, int row, int column);
QTLIBC_API void QTableWidget_SetCellWidget(QTableWidget* self, int row, int column, QWidget* widget);
QTLIBC_API void QTableWidget_RemoveCellWidget(QTableWidget* self, int row, int column);
QTLIBC_API void QTableWidget_SetRangeSelected(QTableWidget* self, QTableWidgetSelectionRange* range, bool selectVal);
QTLIBC_API libqt_list /* of QTableWidgetSelectionRange* */ QTableWidget_SelectedRanges(const QTableWidget* self);
QTLIBC_API libqt_list /* of QTableWidgetItem* */ QTableWidget_SelectedItems(const QTableWidget* self);
QTLIBC_API libqt_list /* of QTableWidgetItem* */ QTableWidget_FindItems(const QTableWidget* self, libqt_string text, int flags);
QTLIBC_API int QTableWidget_VisualRow(const QTableWidget* self, int logicalRow);
QTLIBC_API int QTableWidget_VisualColumn(const QTableWidget* self, int logicalColumn);
QTLIBC_API QTableWidgetItem* QTableWidget_ItemAt(const QTableWidget* self, QPoint* p);
QTLIBC_API QTableWidgetItem* QTableWidget_ItemAt2(const QTableWidget* self, int x, int y);
QTLIBC_API QRect* QTableWidget_VisualItemRect(const QTableWidget* self, QTableWidgetItem* item);
QTLIBC_API QTableWidgetItem* QTableWidget_ItemPrototype(const QTableWidget* self);
QTLIBC_API void QTableWidget_SetItemPrototype(QTableWidget* self, QTableWidgetItem* item);
QTLIBC_API void QTableWidget_ScrollToItem(QTableWidget* self, QTableWidgetItem* item);
QTLIBC_API void QTableWidget_InsertRow(QTableWidget* self, int row);
QTLIBC_API void QTableWidget_InsertColumn(QTableWidget* self, int column);
QTLIBC_API void QTableWidget_RemoveRow(QTableWidget* self, int row);
QTLIBC_API void QTableWidget_RemoveColumn(QTableWidget* self, int column);
QTLIBC_API void QTableWidget_Clear(QTableWidget* self);
QTLIBC_API void QTableWidget_ClearContents(QTableWidget* self);
QTLIBC_API void QTableWidget_ItemPressed(QTableWidget* self, QTableWidgetItem* item);
QTLIBC_API void QTableWidget_Connect_ItemPressed(QTableWidget* self, intptr_t slot);
QTLIBC_API void QTableWidget_ItemClicked(QTableWidget* self, QTableWidgetItem* item);
QTLIBC_API void QTableWidget_Connect_ItemClicked(QTableWidget* self, intptr_t slot);
QTLIBC_API void QTableWidget_ItemDoubleClicked(QTableWidget* self, QTableWidgetItem* item);
QTLIBC_API void QTableWidget_Connect_ItemDoubleClicked(QTableWidget* self, intptr_t slot);
QTLIBC_API void QTableWidget_ItemActivated(QTableWidget* self, QTableWidgetItem* item);
QTLIBC_API void QTableWidget_Connect_ItemActivated(QTableWidget* self, intptr_t slot);
QTLIBC_API void QTableWidget_ItemEntered(QTableWidget* self, QTableWidgetItem* item);
QTLIBC_API void QTableWidget_Connect_ItemEntered(QTableWidget* self, intptr_t slot);
QTLIBC_API void QTableWidget_ItemChanged(QTableWidget* self, QTableWidgetItem* item);
QTLIBC_API void QTableWidget_Connect_ItemChanged(QTableWidget* self, intptr_t slot);
QTLIBC_API void QTableWidget_CurrentItemChanged(QTableWidget* self, QTableWidgetItem* current, QTableWidgetItem* previous);
QTLIBC_API void QTableWidget_Connect_CurrentItemChanged(QTableWidget* self, intptr_t slot);
QTLIBC_API void QTableWidget_ItemSelectionChanged(QTableWidget* self);
QTLIBC_API void QTableWidget_Connect_ItemSelectionChanged(QTableWidget* self, intptr_t slot);
QTLIBC_API void QTableWidget_CellPressed(QTableWidget* self, int row, int column);
QTLIBC_API void QTableWidget_Connect_CellPressed(QTableWidget* self, intptr_t slot);
QTLIBC_API void QTableWidget_CellClicked(QTableWidget* self, int row, int column);
QTLIBC_API void QTableWidget_Connect_CellClicked(QTableWidget* self, intptr_t slot);
QTLIBC_API void QTableWidget_CellDoubleClicked(QTableWidget* self, int row, int column);
QTLIBC_API void QTableWidget_Connect_CellDoubleClicked(QTableWidget* self, intptr_t slot);
QTLIBC_API void QTableWidget_CellActivated(QTableWidget* self, int row, int column);
QTLIBC_API void QTableWidget_Connect_CellActivated(QTableWidget* self, intptr_t slot);
QTLIBC_API void QTableWidget_CellEntered(QTableWidget* self, int row, int column);
QTLIBC_API void QTableWidget_Connect_CellEntered(QTableWidget* self, intptr_t slot);
QTLIBC_API void QTableWidget_CellChanged(QTableWidget* self, int row, int column);
QTLIBC_API void QTableWidget_Connect_CellChanged(QTableWidget* self, intptr_t slot);
QTLIBC_API void QTableWidget_CurrentCellChanged(QTableWidget* self, int currentRow, int currentColumn, int previousRow, int previousColumn);
QTLIBC_API void QTableWidget_Connect_CurrentCellChanged(QTableWidget* self, intptr_t slot);
QTLIBC_API bool QTableWidget_Event(QTableWidget* self, QEvent* e);
QTLIBC_API void QTableWidget_OnEvent(QTableWidget* self, intptr_t slot);
QTLIBC_API bool QTableWidget_QBaseEvent(QTableWidget* self, QEvent* e);
QTLIBC_API libqt_list /* of libqt_string */ QTableWidget_MimeTypes(const QTableWidget* self);
QTLIBC_API void QTableWidget_OnMimeTypes(const QTableWidget* self, intptr_t slot);
QTLIBC_API libqt_list /* of libqt_string */ QTableWidget_QBaseMimeTypes(const QTableWidget* self);
QTLIBC_API QMimeData* QTableWidget_MimeData(const QTableWidget* self, libqt_list /* of QTableWidgetItem* */ items);
QTLIBC_API void QTableWidget_OnMimeData(const QTableWidget* self, intptr_t slot);
QTLIBC_API QMimeData* QTableWidget_QBaseMimeData(const QTableWidget* self, libqt_list /* of QTableWidgetItem* */ items);
QTLIBC_API bool QTableWidget_DropMimeData(QTableWidget* self, int row, int column, QMimeData* data, int action);
QTLIBC_API void QTableWidget_OnDropMimeData(QTableWidget* self, intptr_t slot);
QTLIBC_API bool QTableWidget_QBaseDropMimeData(QTableWidget* self, int row, int column, QMimeData* data, int action);
QTLIBC_API int QTableWidget_SupportedDropActions(const QTableWidget* self);
QTLIBC_API void QTableWidget_OnSupportedDropActions(const QTableWidget* self, intptr_t slot);
QTLIBC_API int QTableWidget_QBaseSupportedDropActions(const QTableWidget* self);
QTLIBC_API void QTableWidget_DropEvent(QTableWidget* self, QDropEvent* event);
QTLIBC_API void QTableWidget_OnDropEvent(QTableWidget* self, intptr_t slot);
QTLIBC_API void QTableWidget_QBaseDropEvent(QTableWidget* self, QDropEvent* event);
QTLIBC_API libqt_string QTableWidget_Tr2(const char* s, const char* c);
QTLIBC_API libqt_string QTableWidget_Tr3(const char* s, const char* c, int n);
QTLIBC_API void QTableWidget_SortItems2(QTableWidget* self, int column, int order);
QTLIBC_API void QTableWidget_ScrollToItem2(QTableWidget* self, QTableWidgetItem* item, int hint);
QTLIBC_API void QTableWidget_SetRootIndex(QTableWidget* self, QModelIndex* index);
QTLIBC_API void QTableWidget_OnSetRootIndex(QTableWidget* self, intptr_t slot);
QTLIBC_API void QTableWidget_QBaseSetRootIndex(QTableWidget* self, QModelIndex* index);
QTLIBC_API void QTableWidget_SetSelectionModel(QTableWidget* self, QItemSelectionModel* selectionModel);
QTLIBC_API void QTableWidget_OnSetSelectionModel(QTableWidget* self, intptr_t slot);
QTLIBC_API void QTableWidget_QBaseSetSelectionModel(QTableWidget* self, QItemSelectionModel* selectionModel);
QTLIBC_API void QTableWidget_DoItemsLayout(QTableWidget* self);
QTLIBC_API void QTableWidget_OnDoItemsLayout(QTableWidget* self, intptr_t slot);
QTLIBC_API void QTableWidget_QBaseDoItemsLayout(QTableWidget* self);
QTLIBC_API QRect* QTableWidget_VisualRect(const QTableWidget* self, QModelIndex* index);
QTLIBC_API void QTableWidget_OnVisualRect(const QTableWidget* self, intptr_t slot);
QTLIBC_API QRect* QTableWidget_QBaseVisualRect(const QTableWidget* self, QModelIndex* index);
QTLIBC_API void QTableWidget_ScrollTo(QTableWidget* self, QModelIndex* index, int hint);
QTLIBC_API void QTableWidget_OnScrollTo(QTableWidget* self, intptr_t slot);
QTLIBC_API void QTableWidget_QBaseScrollTo(QTableWidget* self, QModelIndex* index, int hint);
QTLIBC_API QModelIndex* QTableWidget_IndexAt(const QTableWidget* self, QPoint* p);
QTLIBC_API void QTableWidget_OnIndexAt(const QTableWidget* self, intptr_t slot);
QTLIBC_API QModelIndex* QTableWidget_QBaseIndexAt(const QTableWidget* self, QPoint* p);
QTLIBC_API void QTableWidget_ScrollContentsBy(QTableWidget* self, int dx, int dy);
QTLIBC_API void QTableWidget_OnScrollContentsBy(QTableWidget* self, intptr_t slot);
QTLIBC_API void QTableWidget_QBaseScrollContentsBy(QTableWidget* self, int dx, int dy);
QTLIBC_API void QTableWidget_PaintEvent(QTableWidget* self, QPaintEvent* e);
QTLIBC_API void QTableWidget_OnPaintEvent(QTableWidget* self, intptr_t slot);
QTLIBC_API void QTableWidget_QBasePaintEvent(QTableWidget* self, QPaintEvent* e);
QTLIBC_API void QTableWidget_TimerEvent(QTableWidget* self, QTimerEvent* event);
QTLIBC_API void QTableWidget_OnTimerEvent(QTableWidget* self, intptr_t slot);
QTLIBC_API void QTableWidget_QBaseTimerEvent(QTableWidget* self, QTimerEvent* event);
QTLIBC_API QModelIndex* QTableWidget_MoveCursor(QTableWidget* self, int cursorAction, int modifiers);
QTLIBC_API void QTableWidget_OnMoveCursor(QTableWidget* self, intptr_t slot);
QTLIBC_API QModelIndex* QTableWidget_QBaseMoveCursor(QTableWidget* self, int cursorAction, int modifiers);
QTLIBC_API void QTableWidget_SetSelection(QTableWidget* self, QRect* rect, int command);
QTLIBC_API void QTableWidget_OnSetSelection(QTableWidget* self, intptr_t slot);
QTLIBC_API void QTableWidget_QBaseSetSelection(QTableWidget* self, QRect* rect, int command);
QTLIBC_API void QTableWidget_UpdateGeometries(QTableWidget* self);
QTLIBC_API void QTableWidget_OnUpdateGeometries(QTableWidget* self, intptr_t slot);
QTLIBC_API void QTableWidget_QBaseUpdateGeometries(QTableWidget* self);
QTLIBC_API void QTableWidget_VerticalScrollbarAction(QTableWidget* self, int action);
QTLIBC_API void QTableWidget_OnVerticalScrollbarAction(QTableWidget* self, intptr_t slot);
QTLIBC_API void QTableWidget_QBaseVerticalScrollbarAction(QTableWidget* self, int action);
QTLIBC_API void QTableWidget_HorizontalScrollbarAction(QTableWidget* self, int action);
QTLIBC_API void QTableWidget_OnHorizontalScrollbarAction(QTableWidget* self, intptr_t slot);
QTLIBC_API void QTableWidget_QBaseHorizontalScrollbarAction(QTableWidget* self, int action);
QTLIBC_API void QTableWidget_SelectionChanged(QTableWidget* self, QItemSelection* selected, QItemSelection* deselected);
QTLIBC_API void QTableWidget_OnSelectionChanged(QTableWidget* self, intptr_t slot);
QTLIBC_API void QTableWidget_QBaseSelectionChanged(QTableWidget* self, QItemSelection* selected, QItemSelection* deselected);
QTLIBC_API void QTableWidget_CurrentChanged(QTableWidget* self, QModelIndex* current, QModelIndex* previous);
QTLIBC_API void QTableWidget_OnCurrentChanged(QTableWidget* self, intptr_t slot);
QTLIBC_API void QTableWidget_QBaseCurrentChanged(QTableWidget* self, QModelIndex* current, QModelIndex* previous);
QTLIBC_API void QTableWidget_KeyboardSearch(QTableWidget* self, libqt_string search);
QTLIBC_API void QTableWidget_OnKeyboardSearch(QTableWidget* self, intptr_t slot);
QTLIBC_API void QTableWidget_QBaseKeyboardSearch(QTableWidget* self, libqt_string search);
QTLIBC_API int QTableWidget_SizeHintForRow(const QTableWidget* self, int row);
QTLIBC_API void QTableWidget_OnSizeHintForRow(const QTableWidget* self, intptr_t slot);
QTLIBC_API int QTableWidget_QBaseSizeHintForRow(const QTableWidget* self, int row);
QTLIBC_API int QTableWidget_SizeHintForColumn(const QTableWidget* self, int column);
QTLIBC_API void QTableWidget_OnSizeHintForColumn(const QTableWidget* self, intptr_t slot);
QTLIBC_API int QTableWidget_QBaseSizeHintForColumn(const QTableWidget* self, int column);
QTLIBC_API QAbstractItemDelegate* QTableWidget_ItemDelegateForIndex(const QTableWidget* self, QModelIndex* index);
QTLIBC_API void QTableWidget_OnItemDelegateForIndex(const QTableWidget* self, intptr_t slot);
QTLIBC_API QAbstractItemDelegate* QTableWidget_QBaseItemDelegateForIndex(const QTableWidget* self, QModelIndex* index);
QTLIBC_API QVariant* QTableWidget_InputMethodQuery(const QTableWidget* self, int query);
QTLIBC_API void QTableWidget_OnInputMethodQuery(const QTableWidget* self, intptr_t slot);
QTLIBC_API QVariant* QTableWidget_QBaseInputMethodQuery(const QTableWidget* self, int query);
QTLIBC_API void QTableWidget_Reset(QTableWidget* self);
QTLIBC_API void QTableWidget_OnReset(QTableWidget* self, intptr_t slot);
QTLIBC_API void QTableWidget_QBaseReset(QTableWidget* self);
QTLIBC_API void QTableWidget_SelectAll(QTableWidget* self);
QTLIBC_API void QTableWidget_OnSelectAll(QTableWidget* self, intptr_t slot);
QTLIBC_API void QTableWidget_QBaseSelectAll(QTableWidget* self);
QTLIBC_API void QTableWidget_DataChanged(QTableWidget* self, QModelIndex* topLeft, QModelIndex* bottomRight, libqt_list /* of int */ roles);
QTLIBC_API void QTableWidget_OnDataChanged(QTableWidget* self, intptr_t slot);
QTLIBC_API void QTableWidget_QBaseDataChanged(QTableWidget* self, QModelIndex* topLeft, QModelIndex* bottomRight, libqt_list /* of int */ roles);
QTLIBC_API void QTableWidget_RowsInserted(QTableWidget* self, QModelIndex* parent, int start, int end);
QTLIBC_API void QTableWidget_OnRowsInserted(QTableWidget* self, intptr_t slot);
QTLIBC_API void QTableWidget_QBaseRowsInserted(QTableWidget* self, QModelIndex* parent, int start, int end);
QTLIBC_API void QTableWidget_RowsAboutToBeRemoved(QTableWidget* self, QModelIndex* parent, int start, int end);
QTLIBC_API void QTableWidget_OnRowsAboutToBeRemoved(QTableWidget* self, intptr_t slot);
QTLIBC_API void QTableWidget_QBaseRowsAboutToBeRemoved(QTableWidget* self, QModelIndex* parent, int start, int end);
QTLIBC_API void QTableWidget_UpdateEditorData(QTableWidget* self);
QTLIBC_API void QTableWidget_OnUpdateEditorData(QTableWidget* self, intptr_t slot);
QTLIBC_API void QTableWidget_QBaseUpdateEditorData(QTableWidget* self);
QTLIBC_API void QTableWidget_UpdateEditorGeometries(QTableWidget* self);
QTLIBC_API void QTableWidget_OnUpdateEditorGeometries(QTableWidget* self, intptr_t slot);
QTLIBC_API void QTableWidget_QBaseUpdateEditorGeometries(QTableWidget* self);
QTLIBC_API void QTableWidget_VerticalScrollbarValueChanged(QTableWidget* self, int value);
QTLIBC_API void QTableWidget_OnVerticalScrollbarValueChanged(QTableWidget* self, intptr_t slot);
QTLIBC_API void QTableWidget_QBaseVerticalScrollbarValueChanged(QTableWidget* self, int value);
QTLIBC_API void QTableWidget_HorizontalScrollbarValueChanged(QTableWidget* self, int value);
QTLIBC_API void QTableWidget_OnHorizontalScrollbarValueChanged(QTableWidget* self, intptr_t slot);
QTLIBC_API void QTableWidget_QBaseHorizontalScrollbarValueChanged(QTableWidget* self, int value);
QTLIBC_API void QTableWidget_CloseEditor(QTableWidget* self, QWidget* editor, int hint);
QTLIBC_API void QTableWidget_OnCloseEditor(QTableWidget* self, intptr_t slot);
QTLIBC_API void QTableWidget_QBaseCloseEditor(QTableWidget* self, QWidget* editor, int hint);
QTLIBC_API void QTableWidget_CommitData(QTableWidget* self, QWidget* editor);
QTLIBC_API void QTableWidget_OnCommitData(QTableWidget* self, intptr_t slot);
QTLIBC_API void QTableWidget_QBaseCommitData(QTableWidget* self, QWidget* editor);
QTLIBC_API void QTableWidget_EditorDestroyed(QTableWidget* self, QObject* editor);
QTLIBC_API void QTableWidget_OnEditorDestroyed(QTableWidget* self, intptr_t slot);
QTLIBC_API void QTableWidget_QBaseEditorDestroyed(QTableWidget* self, QObject* editor);
QTLIBC_API bool QTableWidget_Edit2(QTableWidget* self, QModelIndex* index, int trigger, QEvent* event);
QTLIBC_API void QTableWidget_OnEdit2(QTableWidget* self, intptr_t slot);
QTLIBC_API bool QTableWidget_QBaseEdit2(QTableWidget* self, QModelIndex* index, int trigger, QEvent* event);
QTLIBC_API void QTableWidget_StartDrag(QTableWidget* self, int supportedActions);
QTLIBC_API void QTableWidget_OnStartDrag(QTableWidget* self, intptr_t slot);
QTLIBC_API void QTableWidget_QBaseStartDrag(QTableWidget* self, int supportedActions);
QTLIBC_API bool QTableWidget_FocusNextPrevChild(QTableWidget* self, bool next);
QTLIBC_API void QTableWidget_OnFocusNextPrevChild(QTableWidget* self, intptr_t slot);
QTLIBC_API bool QTableWidget_QBaseFocusNextPrevChild(QTableWidget* self, bool next);
QTLIBC_API bool QTableWidget_ViewportEvent(QTableWidget* self, QEvent* event);
QTLIBC_API void QTableWidget_OnViewportEvent(QTableWidget* self, intptr_t slot);
QTLIBC_API bool QTableWidget_QBaseViewportEvent(QTableWidget* self, QEvent* event);
QTLIBC_API void QTableWidget_MousePressEvent(QTableWidget* self, QMouseEvent* event);
QTLIBC_API void QTableWidget_OnMousePressEvent(QTableWidget* self, intptr_t slot);
QTLIBC_API void QTableWidget_QBaseMousePressEvent(QTableWidget* self, QMouseEvent* event);
QTLIBC_API void QTableWidget_MouseMoveEvent(QTableWidget* self, QMouseEvent* event);
QTLIBC_API void QTableWidget_OnMouseMoveEvent(QTableWidget* self, intptr_t slot);
QTLIBC_API void QTableWidget_QBaseMouseMoveEvent(QTableWidget* self, QMouseEvent* event);
QTLIBC_API void QTableWidget_MouseReleaseEvent(QTableWidget* self, QMouseEvent* event);
QTLIBC_API void QTableWidget_OnMouseReleaseEvent(QTableWidget* self, intptr_t slot);
QTLIBC_API void QTableWidget_QBaseMouseReleaseEvent(QTableWidget* self, QMouseEvent* event);
QTLIBC_API void QTableWidget_MouseDoubleClickEvent(QTableWidget* self, QMouseEvent* event);
QTLIBC_API void QTableWidget_OnMouseDoubleClickEvent(QTableWidget* self, intptr_t slot);
QTLIBC_API void QTableWidget_QBaseMouseDoubleClickEvent(QTableWidget* self, QMouseEvent* event);
QTLIBC_API void QTableWidget_DragEnterEvent(QTableWidget* self, QDragEnterEvent* event);
QTLIBC_API void QTableWidget_OnDragEnterEvent(QTableWidget* self, intptr_t slot);
QTLIBC_API void QTableWidget_QBaseDragEnterEvent(QTableWidget* self, QDragEnterEvent* event);
QTLIBC_API void QTableWidget_DragMoveEvent(QTableWidget* self, QDragMoveEvent* event);
QTLIBC_API void QTableWidget_OnDragMoveEvent(QTableWidget* self, intptr_t slot);
QTLIBC_API void QTableWidget_QBaseDragMoveEvent(QTableWidget* self, QDragMoveEvent* event);
QTLIBC_API void QTableWidget_DragLeaveEvent(QTableWidget* self, QDragLeaveEvent* event);
QTLIBC_API void QTableWidget_OnDragLeaveEvent(QTableWidget* self, intptr_t slot);
QTLIBC_API void QTableWidget_QBaseDragLeaveEvent(QTableWidget* self, QDragLeaveEvent* event);
QTLIBC_API void QTableWidget_FocusInEvent(QTableWidget* self, QFocusEvent* event);
QTLIBC_API void QTableWidget_OnFocusInEvent(QTableWidget* self, intptr_t slot);
QTLIBC_API void QTableWidget_QBaseFocusInEvent(QTableWidget* self, QFocusEvent* event);
QTLIBC_API void QTableWidget_FocusOutEvent(QTableWidget* self, QFocusEvent* event);
QTLIBC_API void QTableWidget_OnFocusOutEvent(QTableWidget* self, intptr_t slot);
QTLIBC_API void QTableWidget_QBaseFocusOutEvent(QTableWidget* self, QFocusEvent* event);
QTLIBC_API void QTableWidget_KeyPressEvent(QTableWidget* self, QKeyEvent* event);
QTLIBC_API void QTableWidget_OnKeyPressEvent(QTableWidget* self, intptr_t slot);
QTLIBC_API void QTableWidget_QBaseKeyPressEvent(QTableWidget* self, QKeyEvent* event);
QTLIBC_API void QTableWidget_ResizeEvent(QTableWidget* self, QResizeEvent* event);
QTLIBC_API void QTableWidget_OnResizeEvent(QTableWidget* self, intptr_t slot);
QTLIBC_API void QTableWidget_QBaseResizeEvent(QTableWidget* self, QResizeEvent* event);
QTLIBC_API void QTableWidget_InputMethodEvent(QTableWidget* self, QInputMethodEvent* event);
QTLIBC_API void QTableWidget_OnInputMethodEvent(QTableWidget* self, intptr_t slot);
QTLIBC_API void QTableWidget_QBaseInputMethodEvent(QTableWidget* self, QInputMethodEvent* event);
QTLIBC_API bool QTableWidget_EventFilter(QTableWidget* self, QObject* object, QEvent* event);
QTLIBC_API void QTableWidget_OnEventFilter(QTableWidget* self, intptr_t slot);
QTLIBC_API bool QTableWidget_QBaseEventFilter(QTableWidget* self, QObject* object, QEvent* event);
QTLIBC_API QSize* QTableWidget_MinimumSizeHint(const QTableWidget* self);
QTLIBC_API void QTableWidget_OnMinimumSizeHint(const QTableWidget* self, intptr_t slot);
QTLIBC_API QSize* QTableWidget_QBaseMinimumSizeHint(const QTableWidget* self);
QTLIBC_API QSize* QTableWidget_SizeHint(const QTableWidget* self);
QTLIBC_API void QTableWidget_OnSizeHint(const QTableWidget* self, intptr_t slot);
QTLIBC_API QSize* QTableWidget_QBaseSizeHint(const QTableWidget* self);
QTLIBC_API void QTableWidget_SetupViewport(QTableWidget* self, QWidget* viewport);
QTLIBC_API void QTableWidget_OnSetupViewport(QTableWidget* self, intptr_t slot);
QTLIBC_API void QTableWidget_QBaseSetupViewport(QTableWidget* self, QWidget* viewport);
QTLIBC_API void QTableWidget_WheelEvent(QTableWidget* self, QWheelEvent* param1);
QTLIBC_API void QTableWidget_OnWheelEvent(QTableWidget* self, intptr_t slot);
QTLIBC_API void QTableWidget_QBaseWheelEvent(QTableWidget* self, QWheelEvent* param1);
QTLIBC_API void QTableWidget_ContextMenuEvent(QTableWidget* self, QContextMenuEvent* param1);
QTLIBC_API void QTableWidget_OnContextMenuEvent(QTableWidget* self, intptr_t slot);
QTLIBC_API void QTableWidget_QBaseContextMenuEvent(QTableWidget* self, QContextMenuEvent* param1);
QTLIBC_API void QTableWidget_ChangeEvent(QTableWidget* self, QEvent* param1);
QTLIBC_API void QTableWidget_OnChangeEvent(QTableWidget* self, intptr_t slot);
QTLIBC_API void QTableWidget_QBaseChangeEvent(QTableWidget* self, QEvent* param1);
QTLIBC_API int QTableWidget_DevType(const QTableWidget* self);
QTLIBC_API void QTableWidget_OnDevType(const QTableWidget* self, intptr_t slot);
QTLIBC_API int QTableWidget_QBaseDevType(const QTableWidget* self);
QTLIBC_API void QTableWidget_SetVisible(QTableWidget* self, bool visible);
QTLIBC_API void QTableWidget_OnSetVisible(QTableWidget* self, intptr_t slot);
QTLIBC_API void QTableWidget_QBaseSetVisible(QTableWidget* self, bool visible);
QTLIBC_API int QTableWidget_HeightForWidth(const QTableWidget* self, int param1);
QTLIBC_API void QTableWidget_OnHeightForWidth(const QTableWidget* self, intptr_t slot);
QTLIBC_API int QTableWidget_QBaseHeightForWidth(const QTableWidget* self, int param1);
QTLIBC_API bool QTableWidget_HasHeightForWidth(const QTableWidget* self);
QTLIBC_API void QTableWidget_OnHasHeightForWidth(const QTableWidget* self, intptr_t slot);
QTLIBC_API bool QTableWidget_QBaseHasHeightForWidth(const QTableWidget* self);
QTLIBC_API QPaintEngine* QTableWidget_PaintEngine(const QTableWidget* self);
QTLIBC_API void QTableWidget_OnPaintEngine(const QTableWidget* self, intptr_t slot);
QTLIBC_API QPaintEngine* QTableWidget_QBasePaintEngine(const QTableWidget* self);
QTLIBC_API void QTableWidget_KeyReleaseEvent(QTableWidget* self, QKeyEvent* event);
QTLIBC_API void QTableWidget_OnKeyReleaseEvent(QTableWidget* self, intptr_t slot);
QTLIBC_API void QTableWidget_QBaseKeyReleaseEvent(QTableWidget* self, QKeyEvent* event);
QTLIBC_API void QTableWidget_EnterEvent(QTableWidget* self, QEnterEvent* event);
QTLIBC_API void QTableWidget_OnEnterEvent(QTableWidget* self, intptr_t slot);
QTLIBC_API void QTableWidget_QBaseEnterEvent(QTableWidget* self, QEnterEvent* event);
QTLIBC_API void QTableWidget_LeaveEvent(QTableWidget* self, QEvent* event);
QTLIBC_API void QTableWidget_OnLeaveEvent(QTableWidget* self, intptr_t slot);
QTLIBC_API void QTableWidget_QBaseLeaveEvent(QTableWidget* self, QEvent* event);
QTLIBC_API void QTableWidget_MoveEvent(QTableWidget* self, QMoveEvent* event);
QTLIBC_API void QTableWidget_OnMoveEvent(QTableWidget* self, intptr_t slot);
QTLIBC_API void QTableWidget_QBaseMoveEvent(QTableWidget* self, QMoveEvent* event);
QTLIBC_API void QTableWidget_CloseEvent(QTableWidget* self, QCloseEvent* event);
QTLIBC_API void QTableWidget_OnCloseEvent(QTableWidget* self, intptr_t slot);
QTLIBC_API void QTableWidget_QBaseCloseEvent(QTableWidget* self, QCloseEvent* event);
QTLIBC_API void QTableWidget_TabletEvent(QTableWidget* self, QTabletEvent* event);
QTLIBC_API void QTableWidget_OnTabletEvent(QTableWidget* self, intptr_t slot);
QTLIBC_API void QTableWidget_QBaseTabletEvent(QTableWidget* self, QTabletEvent* event);
QTLIBC_API void QTableWidget_ActionEvent(QTableWidget* self, QActionEvent* event);
QTLIBC_API void QTableWidget_OnActionEvent(QTableWidget* self, intptr_t slot);
QTLIBC_API void QTableWidget_QBaseActionEvent(QTableWidget* self, QActionEvent* event);
QTLIBC_API void QTableWidget_ShowEvent(QTableWidget* self, QShowEvent* event);
QTLIBC_API void QTableWidget_OnShowEvent(QTableWidget* self, intptr_t slot);
QTLIBC_API void QTableWidget_QBaseShowEvent(QTableWidget* self, QShowEvent* event);
QTLIBC_API void QTableWidget_HideEvent(QTableWidget* self, QHideEvent* event);
QTLIBC_API void QTableWidget_OnHideEvent(QTableWidget* self, intptr_t slot);
QTLIBC_API void QTableWidget_QBaseHideEvent(QTableWidget* self, QHideEvent* event);
QTLIBC_API bool QTableWidget_NativeEvent(QTableWidget* self, libqt_string eventType, void* message, intptr_t* result);
QTLIBC_API void QTableWidget_OnNativeEvent(QTableWidget* self, intptr_t slot);
QTLIBC_API bool QTableWidget_QBaseNativeEvent(QTableWidget* self, libqt_string eventType, void* message, intptr_t* result);
QTLIBC_API void QTableWidget_ChildEvent(QTableWidget* self, QChildEvent* event);
QTLIBC_API void QTableWidget_OnChildEvent(QTableWidget* self, intptr_t slot);
QTLIBC_API void QTableWidget_QBaseChildEvent(QTableWidget* self, QChildEvent* event);
QTLIBC_API void QTableWidget_CustomEvent(QTableWidget* self, QEvent* event);
QTLIBC_API void QTableWidget_OnCustomEvent(QTableWidget* self, intptr_t slot);
QTLIBC_API void QTableWidget_QBaseCustomEvent(QTableWidget* self, QEvent* event);
QTLIBC_API void QTableWidget_ConnectNotify(QTableWidget* self, QMetaMethod* signal);
QTLIBC_API void QTableWidget_OnConnectNotify(QTableWidget* self, intptr_t slot);
QTLIBC_API void QTableWidget_QBaseConnectNotify(QTableWidget* self, QMetaMethod* signal);
QTLIBC_API void QTableWidget_DisconnectNotify(QTableWidget* self, QMetaMethod* signal);
QTLIBC_API void QTableWidget_OnDisconnectNotify(QTableWidget* self, intptr_t slot);
QTLIBC_API void QTableWidget_QBaseDisconnectNotify(QTableWidget* self, QMetaMethod* signal);
QTLIBC_API void QTableWidget_InitViewItemOption(const QTableWidget* self, QStyleOptionViewItem* option);
QTLIBC_API void QTableWidget_OnInitViewItemOption(const QTableWidget* self, intptr_t slot);
QTLIBC_API void QTableWidget_QBaseInitViewItemOption(const QTableWidget* self, QStyleOptionViewItem* option);
QTLIBC_API int QTableWidget_HorizontalOffset(const QTableWidget* self);
QTLIBC_API void QTableWidget_OnHorizontalOffset(const QTableWidget* self, intptr_t slot);
QTLIBC_API int QTableWidget_QBaseHorizontalOffset(const QTableWidget* self);
QTLIBC_API int QTableWidget_VerticalOffset(const QTableWidget* self);
QTLIBC_API void QTableWidget_OnVerticalOffset(const QTableWidget* self, intptr_t slot);
QTLIBC_API int QTableWidget_QBaseVerticalOffset(const QTableWidget* self);
QTLIBC_API QRegion* QTableWidget_VisualRegionForSelection(const QTableWidget* self, QItemSelection* selection);
QTLIBC_API void QTableWidget_OnVisualRegionForSelection(const QTableWidget* self, intptr_t slot);
QTLIBC_API QRegion* QTableWidget_QBaseVisualRegionForSelection(const QTableWidget* self, QItemSelection* selection);
QTLIBC_API libqt_list /* of QModelIndex* */ QTableWidget_SelectedIndexes(const QTableWidget* self);
QTLIBC_API void QTableWidget_OnSelectedIndexes(const QTableWidget* self, intptr_t slot);
QTLIBC_API libqt_list /* of QModelIndex* */ QTableWidget_QBaseSelectedIndexes(const QTableWidget* self);
QTLIBC_API QSize* QTableWidget_ViewportSizeHint(const QTableWidget* self);
QTLIBC_API void QTableWidget_OnViewportSizeHint(const QTableWidget* self, intptr_t slot);
QTLIBC_API QSize* QTableWidget_QBaseViewportSizeHint(const QTableWidget* self);
QTLIBC_API bool QTableWidget_IsIndexHidden(const QTableWidget* self, QModelIndex* index);
QTLIBC_API void QTableWidget_OnIsIndexHidden(const QTableWidget* self, intptr_t slot);
QTLIBC_API bool QTableWidget_QBaseIsIndexHidden(const QTableWidget* self, QModelIndex* index);
QTLIBC_API int QTableWidget_SelectionCommand(const QTableWidget* self, QModelIndex* index, QEvent* event);
QTLIBC_API void QTableWidget_OnSelectionCommand(const QTableWidget* self, intptr_t slot);
QTLIBC_API int QTableWidget_QBaseSelectionCommand(const QTableWidget* self, QModelIndex* index, QEvent* event);
QTLIBC_API void QTableWidget_InitStyleOption(const QTableWidget* self, QStyleOptionFrame* option);
QTLIBC_API void QTableWidget_OnInitStyleOption(const QTableWidget* self, intptr_t slot);
QTLIBC_API void QTableWidget_QBaseInitStyleOption(const QTableWidget* self, QStyleOptionFrame* option);
QTLIBC_API int QTableWidget_Metric(const QTableWidget* self, int param1);
QTLIBC_API void QTableWidget_OnMetric(const QTableWidget* self, intptr_t slot);
QTLIBC_API int QTableWidget_QBaseMetric(const QTableWidget* self, int param1);
QTLIBC_API void QTableWidget_InitPainter(const QTableWidget* self, QPainter* painter);
QTLIBC_API void QTableWidget_OnInitPainter(const QTableWidget* self, intptr_t slot);
QTLIBC_API void QTableWidget_QBaseInitPainter(const QTableWidget* self, QPainter* painter);
QTLIBC_API QPaintDevice* QTableWidget_Redirected(const QTableWidget* self, QPoint* offset);
QTLIBC_API void QTableWidget_OnRedirected(const QTableWidget* self, intptr_t slot);
QTLIBC_API QPaintDevice* QTableWidget_QBaseRedirected(const QTableWidget* self, QPoint* offset);
QTLIBC_API QPainter* QTableWidget_SharedPainter(const QTableWidget* self);
QTLIBC_API void QTableWidget_OnSharedPainter(const QTableWidget* self, intptr_t slot);
QTLIBC_API QPainter* QTableWidget_QBaseSharedPainter(const QTableWidget* self);
QTLIBC_API void QTableWidget_RowMoved(QTableWidget* self, int row, int oldIndex, int newIndex);
QTLIBC_API void QTableWidget_OnRowMoved(QTableWidget* self, intptr_t slot);
QTLIBC_API void QTableWidget_QBaseRowMoved(QTableWidget* self, int row, int oldIndex, int newIndex);
QTLIBC_API void QTableWidget_ColumnMoved(QTableWidget* self, int column, int oldIndex, int newIndex);
QTLIBC_API void QTableWidget_OnColumnMoved(QTableWidget* self, intptr_t slot);
QTLIBC_API void QTableWidget_QBaseColumnMoved(QTableWidget* self, int column, int oldIndex, int newIndex);
QTLIBC_API void QTableWidget_RowResized(QTableWidget* self, int row, int oldHeight, int newHeight);
QTLIBC_API void QTableWidget_OnRowResized(QTableWidget* self, intptr_t slot);
QTLIBC_API void QTableWidget_QBaseRowResized(QTableWidget* self, int row, int oldHeight, int newHeight);
QTLIBC_API void QTableWidget_ColumnResized(QTableWidget* self, int column, int oldWidth, int newWidth);
QTLIBC_API void QTableWidget_OnColumnResized(QTableWidget* self, intptr_t slot);
QTLIBC_API void QTableWidget_QBaseColumnResized(QTableWidget* self, int column, int oldWidth, int newWidth);
QTLIBC_API void QTableWidget_RowCountChanged(QTableWidget* self, int oldCount, int newCount);
QTLIBC_API void QTableWidget_OnRowCountChanged(QTableWidget* self, intptr_t slot);
QTLIBC_API void QTableWidget_QBaseRowCountChanged(QTableWidget* self, int oldCount, int newCount);
QTLIBC_API void QTableWidget_ColumnCountChanged(QTableWidget* self, int oldCount, int newCount);
QTLIBC_API void QTableWidget_OnColumnCountChanged(QTableWidget* self, intptr_t slot);
QTLIBC_API void QTableWidget_QBaseColumnCountChanged(QTableWidget* self, int oldCount, int newCount);
QTLIBC_API int QTableWidget_State(const QTableWidget* self);
QTLIBC_API void QTableWidget_OnState(const QTableWidget* self, intptr_t slot);
QTLIBC_API int QTableWidget_QBaseState(const QTableWidget* self);
QTLIBC_API void QTableWidget_SetState(QTableWidget* self, int state);
QTLIBC_API void QTableWidget_OnSetState(QTableWidget* self, intptr_t slot);
QTLIBC_API void QTableWidget_QBaseSetState(QTableWidget* self, int state);
QTLIBC_API void QTableWidget_ScheduleDelayedItemsLayout(QTableWidget* self);
QTLIBC_API void QTableWidget_OnScheduleDelayedItemsLayout(QTableWidget* self, intptr_t slot);
QTLIBC_API void QTableWidget_QBaseScheduleDelayedItemsLayout(QTableWidget* self);
QTLIBC_API void QTableWidget_ExecuteDelayedItemsLayout(QTableWidget* self);
QTLIBC_API void QTableWidget_OnExecuteDelayedItemsLayout(QTableWidget* self, intptr_t slot);
QTLIBC_API void QTableWidget_QBaseExecuteDelayedItemsLayout(QTableWidget* self);
QTLIBC_API void QTableWidget_SetDirtyRegion(QTableWidget* self, QRegion* region);
QTLIBC_API void QTableWidget_OnSetDirtyRegion(QTableWidget* self, intptr_t slot);
QTLIBC_API void QTableWidget_QBaseSetDirtyRegion(QTableWidget* self, QRegion* region);
QTLIBC_API void QTableWidget_ScrollDirtyRegion(QTableWidget* self, int dx, int dy);
QTLIBC_API void QTableWidget_OnScrollDirtyRegion(QTableWidget* self, intptr_t slot);
QTLIBC_API void QTableWidget_QBaseScrollDirtyRegion(QTableWidget* self, int dx, int dy);
QTLIBC_API QPoint* QTableWidget_DirtyRegionOffset(const QTableWidget* self);
QTLIBC_API void QTableWidget_OnDirtyRegionOffset(const QTableWidget* self, intptr_t slot);
QTLIBC_API QPoint* QTableWidget_QBaseDirtyRegionOffset(const QTableWidget* self);
QTLIBC_API void QTableWidget_StartAutoScroll(QTableWidget* self);
QTLIBC_API void QTableWidget_OnStartAutoScroll(QTableWidget* self, intptr_t slot);
QTLIBC_API void QTableWidget_QBaseStartAutoScroll(QTableWidget* self);
QTLIBC_API void QTableWidget_StopAutoScroll(QTableWidget* self);
QTLIBC_API void QTableWidget_OnStopAutoScroll(QTableWidget* self, intptr_t slot);
QTLIBC_API void QTableWidget_QBaseStopAutoScroll(QTableWidget* self);
QTLIBC_API void QTableWidget_DoAutoScroll(QTableWidget* self);
QTLIBC_API void QTableWidget_OnDoAutoScroll(QTableWidget* self, intptr_t slot);
QTLIBC_API void QTableWidget_QBaseDoAutoScroll(QTableWidget* self);
QTLIBC_API int QTableWidget_DropIndicatorPosition(const QTableWidget* self);
QTLIBC_API void QTableWidget_OnDropIndicatorPosition(const QTableWidget* self, intptr_t slot);
QTLIBC_API int QTableWidget_QBaseDropIndicatorPosition(const QTableWidget* self);
QTLIBC_API void QTableWidget_SetViewportMargins(QTableWidget* self, int left, int top, int right, int bottom);
QTLIBC_API void QTableWidget_OnSetViewportMargins(QTableWidget* self, intptr_t slot);
QTLIBC_API void QTableWidget_QBaseSetViewportMargins(QTableWidget* self, int left, int top, int right, int bottom);
QTLIBC_API QMargins* QTableWidget_ViewportMargins(const QTableWidget* self);
QTLIBC_API void QTableWidget_OnViewportMargins(const QTableWidget* self, intptr_t slot);
QTLIBC_API QMargins* QTableWidget_QBaseViewportMargins(const QTableWidget* self);
QTLIBC_API void QTableWidget_DrawFrame(QTableWidget* self, QPainter* param1);
QTLIBC_API void QTableWidget_OnDrawFrame(QTableWidget* self, intptr_t slot);
QTLIBC_API void QTableWidget_QBaseDrawFrame(QTableWidget* self, QPainter* param1);
QTLIBC_API void QTableWidget_UpdateMicroFocus(QTableWidget* self);
QTLIBC_API void QTableWidget_OnUpdateMicroFocus(QTableWidget* self, intptr_t slot);
QTLIBC_API void QTableWidget_QBaseUpdateMicroFocus(QTableWidget* self);
QTLIBC_API void QTableWidget_Create(QTableWidget* self);
QTLIBC_API void QTableWidget_OnCreate(QTableWidget* self, intptr_t slot);
QTLIBC_API void QTableWidget_QBaseCreate(QTableWidget* self);
QTLIBC_API void QTableWidget_Destroy(QTableWidget* self);
QTLIBC_API void QTableWidget_OnDestroy(QTableWidget* self, intptr_t slot);
QTLIBC_API void QTableWidget_QBaseDestroy(QTableWidget* self);
QTLIBC_API bool QTableWidget_FocusNextChild(QTableWidget* self);
QTLIBC_API void QTableWidget_OnFocusNextChild(QTableWidget* self, intptr_t slot);
QTLIBC_API bool QTableWidget_QBaseFocusNextChild(QTableWidget* self);
QTLIBC_API bool QTableWidget_FocusPreviousChild(QTableWidget* self);
QTLIBC_API void QTableWidget_OnFocusPreviousChild(QTableWidget* self, intptr_t slot);
QTLIBC_API bool QTableWidget_QBaseFocusPreviousChild(QTableWidget* self);
QTLIBC_API QObject* QTableWidget_Sender(const QTableWidget* self);
QTLIBC_API void QTableWidget_OnSender(const QTableWidget* self, intptr_t slot);
QTLIBC_API QObject* QTableWidget_QBaseSender(const QTableWidget* self);
QTLIBC_API int QTableWidget_SenderSignalIndex(const QTableWidget* self);
QTLIBC_API void QTableWidget_OnSenderSignalIndex(const QTableWidget* self, intptr_t slot);
QTLIBC_API int QTableWidget_QBaseSenderSignalIndex(const QTableWidget* self);
QTLIBC_API int QTableWidget_Receivers(const QTableWidget* self, const char* signal);
QTLIBC_API void QTableWidget_OnReceivers(const QTableWidget* self, intptr_t slot);
QTLIBC_API int QTableWidget_QBaseReceivers(const QTableWidget* self, const char* signal);
QTLIBC_API bool QTableWidget_IsSignalConnected(const QTableWidget* self, QMetaMethod* signal);
QTLIBC_API void QTableWidget_OnIsSignalConnected(const QTableWidget* self, intptr_t slot);
QTLIBC_API bool QTableWidget_QBaseIsSignalConnected(const QTableWidget* self, QMetaMethod* signal);
QTLIBC_API void QTableWidget_Delete(QTableWidget* self);

#ifdef __cplusplus
} /* extern C */
#endif

#endif
