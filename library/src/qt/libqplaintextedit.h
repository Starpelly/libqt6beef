#pragma once
#ifndef SRC_QTC_LIBQPLAINTEXTEDIT_H
#define SRC_QTC_LIBQPLAINTEXTEDIT_H

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>

#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

#include "qtlibc.h"

#ifdef __cplusplus
extern "C" {
#endif

#ifdef __cplusplus
#if defined(WORKAROUND_INNER_CLASS_DEFINITION_QAbstractTextDocumentLayout__PaintContext)
typedef QAbstractTextDocumentLayout::PaintContext QAbstractTextDocumentLayout__PaintContext;
#endif
#if defined(WORKAROUND_INNER_CLASS_DEFINITION_QMetaObject__Connection)
typedef QMetaObject::Connection QMetaObject__Connection;
#endif
#if defined(WORKAROUND_INNER_CLASS_DEFINITION_QTextEdit__ExtraSelection)
typedef QTextEdit::ExtraSelection QTextEdit__ExtraSelection;
#endif
#else
typedef struct QAbstractScrollArea QAbstractScrollArea;
typedef struct QAbstractTextDocumentLayout QAbstractTextDocumentLayout;
typedef struct QAbstractTextDocumentLayout__PaintContext QAbstractTextDocumentLayout__PaintContext;
typedef struct QAction QAction;
typedef struct QActionEvent QActionEvent;
typedef struct QAnyStringView QAnyStringView;
typedef struct QBackingStore QBackingStore;
typedef struct QBindingStorage QBindingStorage;
typedef struct QBitmap QBitmap;
typedef struct QChildEvent QChildEvent;
typedef struct QCloseEvent QCloseEvent;
typedef struct QContextMenuEvent QContextMenuEvent;
typedef struct QCursor QCursor;
typedef struct QDragEnterEvent QDragEnterEvent;
typedef struct QDragLeaveEvent QDragLeaveEvent;
typedef struct QDragMoveEvent QDragMoveEvent;
typedef struct QDropEvent QDropEvent;
typedef struct QEnterEvent QEnterEvent;
typedef struct QEvent QEvent;
typedef struct QFocusEvent QFocusEvent;
typedef struct QFont QFont;
typedef struct QFontInfo QFontInfo;
typedef struct QFontMetrics QFontMetrics;
typedef struct QFrame QFrame;
typedef struct QGraphicsEffect QGraphicsEffect;
typedef struct QGraphicsProxyWidget QGraphicsProxyWidget;
typedef struct QHideEvent QHideEvent;
typedef struct QIcon QIcon;
typedef struct QInputMethodEvent QInputMethodEvent;
typedef struct QKeyEvent QKeyEvent;
typedef struct QKeySequence QKeySequence;
typedef struct QLayout QLayout;
typedef struct QLocale QLocale;
typedef struct QMargins QMargins;
typedef struct QMenu QMenu;
typedef struct QMetaMethod QMetaMethod;
typedef struct QMetaObject QMetaObject;
typedef struct QMetaObject__Connection QMetaObject__Connection;
typedef struct QMimeData QMimeData;
typedef struct QMouseEvent QMouseEvent;
typedef struct QMoveEvent QMoveEvent;
typedef struct QObject QObject;
typedef struct QPagedPaintDevice QPagedPaintDevice;
typedef struct QPaintDevice QPaintDevice;
typedef struct QPaintEngine QPaintEngine;
typedef struct QPaintEvent QPaintEvent;
typedef struct QPainter QPainter;
typedef struct QPalette QPalette;
typedef struct QPixmap QPixmap;
typedef struct QPlainTextDocumentLayout QPlainTextDocumentLayout;
typedef struct QPlainTextEdit QPlainTextEdit;
typedef struct QPoint QPoint;
typedef struct QPointF QPointF;
typedef struct QRect QRect;
typedef struct QRectF QRectF;
typedef struct QRegion QRegion;
typedef struct QRegularExpression QRegularExpression;
typedef struct QResizeEvent QResizeEvent;
typedef struct QScreen QScreen;
typedef struct QScrollBar QScrollBar;
typedef struct QShowEvent QShowEvent;
typedef struct QSize QSize;
typedef struct QSizeF QSizeF;
typedef struct QSizePolicy QSizePolicy;
typedef struct QStyle QStyle;
typedef struct QStyleOptionFrame QStyleOptionFrame;
typedef struct QTabletEvent QTabletEvent;
typedef struct QTextBlock QTextBlock;
typedef struct QTextCharFormat QTextCharFormat;
typedef struct QTextCursor QTextCursor;
typedef struct QTextDocument QTextDocument;
typedef struct QTextEdit__ExtraSelection QTextEdit__ExtraSelection;
typedef struct QTextFormat QTextFormat;
typedef struct QTextFrame QTextFrame;
typedef struct QTextInlineObject QTextInlineObject;
typedef struct QTextObjectInterface QTextObjectInterface;
typedef struct QThread QThread;
typedef struct QTimerEvent QTimerEvent;
typedef struct QUrl QUrl;
typedef struct QVariant QVariant;
typedef struct QWheelEvent QWheelEvent;
typedef struct QWidget QWidget;
typedef struct QWindow QWindow;
#endif

#ifdef __cplusplus
typedef QPlainTextEdit::LineWrapMode LineWrapMode; // C++ enum
#else
typedef int LineWrapMode; // C ABI enum
#endif

QTLIBC_API QPlainTextEdit* QPlainTextEdit_new(QWidget* parent);
QTLIBC_API QPlainTextEdit* QPlainTextEdit_new2();
QTLIBC_API QPlainTextEdit* QPlainTextEdit_new3(libqt_string text);
QTLIBC_API QPlainTextEdit* QPlainTextEdit_new4(libqt_string text, QWidget* parent);
QTLIBC_API QMetaObject* QPlainTextEdit_MetaObject(const QPlainTextEdit* self);
QTLIBC_API void* QPlainTextEdit_Metacast(QPlainTextEdit* self, const char* param1);
QTLIBC_API int QPlainTextEdit_Metacall(QPlainTextEdit* self, int param1, int param2, void** param3);
QTLIBC_API void QPlainTextEdit_OnMetacall(QPlainTextEdit* self, intptr_t slot);
QTLIBC_API int QPlainTextEdit_QBaseMetacall(QPlainTextEdit* self, int param1, int param2, void** param3);
QTLIBC_API libqt_string QPlainTextEdit_Tr(const char* s);
QTLIBC_API void QPlainTextEdit_SetDocument(QPlainTextEdit* self, QTextDocument* document);
QTLIBC_API QTextDocument* QPlainTextEdit_Document(const QPlainTextEdit* self);
QTLIBC_API void QPlainTextEdit_SetPlaceholderText(QPlainTextEdit* self, libqt_string placeholderText);
QTLIBC_API libqt_string QPlainTextEdit_PlaceholderText(const QPlainTextEdit* self);
QTLIBC_API void QPlainTextEdit_SetTextCursor(QPlainTextEdit* self, QTextCursor* cursor);
QTLIBC_API QTextCursor* QPlainTextEdit_TextCursor(const QPlainTextEdit* self);
QTLIBC_API bool QPlainTextEdit_IsReadOnly(const QPlainTextEdit* self);
QTLIBC_API void QPlainTextEdit_SetReadOnly(QPlainTextEdit* self, bool ro);
QTLIBC_API void QPlainTextEdit_SetTextInteractionFlags(QPlainTextEdit* self, int flags);
QTLIBC_API int QPlainTextEdit_TextInteractionFlags(const QPlainTextEdit* self);
QTLIBC_API void QPlainTextEdit_MergeCurrentCharFormat(QPlainTextEdit* self, QTextCharFormat* modifier);
QTLIBC_API void QPlainTextEdit_SetCurrentCharFormat(QPlainTextEdit* self, QTextCharFormat* format);
QTLIBC_API QTextCharFormat* QPlainTextEdit_CurrentCharFormat(const QPlainTextEdit* self);
QTLIBC_API bool QPlainTextEdit_TabChangesFocus(const QPlainTextEdit* self);
QTLIBC_API void QPlainTextEdit_SetTabChangesFocus(QPlainTextEdit* self, bool b);
QTLIBC_API void QPlainTextEdit_SetDocumentTitle(QPlainTextEdit* self, libqt_string title);
QTLIBC_API libqt_string QPlainTextEdit_DocumentTitle(const QPlainTextEdit* self);
QTLIBC_API bool QPlainTextEdit_IsUndoRedoEnabled(const QPlainTextEdit* self);
QTLIBC_API void QPlainTextEdit_SetUndoRedoEnabled(QPlainTextEdit* self, bool enable);
QTLIBC_API void QPlainTextEdit_SetMaximumBlockCount(QPlainTextEdit* self, int maximum);
QTLIBC_API int QPlainTextEdit_MaximumBlockCount(const QPlainTextEdit* self);
QTLIBC_API int QPlainTextEdit_LineWrapMode(const QPlainTextEdit* self);
QTLIBC_API void QPlainTextEdit_SetLineWrapMode(QPlainTextEdit* self, int mode);
QTLIBC_API int QPlainTextEdit_WordWrapMode(const QPlainTextEdit* self);
QTLIBC_API void QPlainTextEdit_SetWordWrapMode(QPlainTextEdit* self, int policy);
QTLIBC_API void QPlainTextEdit_SetBackgroundVisible(QPlainTextEdit* self, bool visible);
QTLIBC_API bool QPlainTextEdit_BackgroundVisible(const QPlainTextEdit* self);
QTLIBC_API void QPlainTextEdit_SetCenterOnScroll(QPlainTextEdit* self, bool enabled);
QTLIBC_API bool QPlainTextEdit_CenterOnScroll(const QPlainTextEdit* self);
QTLIBC_API bool QPlainTextEdit_Find(QPlainTextEdit* self, libqt_string exp);
QTLIBC_API bool QPlainTextEdit_FindWithExp(QPlainTextEdit* self, QRegularExpression* exp);
QTLIBC_API libqt_string QPlainTextEdit_ToPlainText(const QPlainTextEdit* self);
QTLIBC_API void QPlainTextEdit_EnsureCursorVisible(QPlainTextEdit* self);
QTLIBC_API QVariant* QPlainTextEdit_LoadResource(QPlainTextEdit* self, int typeVal, QUrl* name);
QTLIBC_API void QPlainTextEdit_OnLoadResource(QPlainTextEdit* self, intptr_t slot);
QTLIBC_API QVariant* QPlainTextEdit_QBaseLoadResource(QPlainTextEdit* self, int typeVal, QUrl* name);
QTLIBC_API QMenu* QPlainTextEdit_CreateStandardContextMenu(QPlainTextEdit* self);
QTLIBC_API QMenu* QPlainTextEdit_CreateStandardContextMenuWithPosition(QPlainTextEdit* self, QPoint* position);
QTLIBC_API QTextCursor* QPlainTextEdit_CursorForPosition(const QPlainTextEdit* self, QPoint* pos);
QTLIBC_API QRect* QPlainTextEdit_CursorRect(const QPlainTextEdit* self, QTextCursor* cursor);
QTLIBC_API QRect* QPlainTextEdit_CursorRect2(const QPlainTextEdit* self);
QTLIBC_API libqt_string QPlainTextEdit_AnchorAt(const QPlainTextEdit* self, QPoint* pos);
QTLIBC_API bool QPlainTextEdit_OverwriteMode(const QPlainTextEdit* self);
QTLIBC_API void QPlainTextEdit_SetOverwriteMode(QPlainTextEdit* self, bool overwrite);
QTLIBC_API double QPlainTextEdit_TabStopDistance(const QPlainTextEdit* self);
QTLIBC_API void QPlainTextEdit_SetTabStopDistance(QPlainTextEdit* self, double distance);
QTLIBC_API int QPlainTextEdit_CursorWidth(const QPlainTextEdit* self);
QTLIBC_API void QPlainTextEdit_SetCursorWidth(QPlainTextEdit* self, int width);
QTLIBC_API void QPlainTextEdit_SetExtraSelections(QPlainTextEdit* self, libqt_list /* of QTextEdit__ExtraSelection* */ selections);
QTLIBC_API libqt_list /* of QTextEdit__ExtraSelection* */ QPlainTextEdit_ExtraSelections(const QPlainTextEdit* self);
QTLIBC_API void QPlainTextEdit_MoveCursor(QPlainTextEdit* self, int operation);
QTLIBC_API bool QPlainTextEdit_CanPaste(const QPlainTextEdit* self);
QTLIBC_API void QPlainTextEdit_Print(const QPlainTextEdit* self, QPagedPaintDevice* printer);
QTLIBC_API int QPlainTextEdit_BlockCount(const QPlainTextEdit* self);
QTLIBC_API QVariant* QPlainTextEdit_InputMethodQuery(const QPlainTextEdit* self, int property);
QTLIBC_API void QPlainTextEdit_OnInputMethodQuery(const QPlainTextEdit* self, intptr_t slot);
QTLIBC_API QVariant* QPlainTextEdit_QBaseInputMethodQuery(const QPlainTextEdit* self, int property);
QTLIBC_API QVariant* QPlainTextEdit_InputMethodQuery2(const QPlainTextEdit* self, int query, QVariant* argument);
QTLIBC_API void QPlainTextEdit_SetPlainText(QPlainTextEdit* self, libqt_string text);
QTLIBC_API void QPlainTextEdit_Cut(QPlainTextEdit* self);
QTLIBC_API void QPlainTextEdit_Copy(QPlainTextEdit* self);
QTLIBC_API void QPlainTextEdit_Paste(QPlainTextEdit* self);
QTLIBC_API void QPlainTextEdit_Undo(QPlainTextEdit* self);
QTLIBC_API void QPlainTextEdit_Redo(QPlainTextEdit* self);
QTLIBC_API void QPlainTextEdit_Clear(QPlainTextEdit* self);
QTLIBC_API void QPlainTextEdit_SelectAll(QPlainTextEdit* self);
QTLIBC_API void QPlainTextEdit_InsertPlainText(QPlainTextEdit* self, libqt_string text);
QTLIBC_API void QPlainTextEdit_AppendPlainText(QPlainTextEdit* self, libqt_string text);
QTLIBC_API void QPlainTextEdit_AppendHtml(QPlainTextEdit* self, libqt_string html);
QTLIBC_API void QPlainTextEdit_CenterCursor(QPlainTextEdit* self);
QTLIBC_API void QPlainTextEdit_ZoomIn(QPlainTextEdit* self);
QTLIBC_API void QPlainTextEdit_ZoomOut(QPlainTextEdit* self);
QTLIBC_API void QPlainTextEdit_TextChanged(QPlainTextEdit* self);
void QPlainTextEdit_Connect_TextChanged(QPlainTextEdit* self, intptr_t slot);
QTLIBC_API void QPlainTextEdit_UndoAvailable(QPlainTextEdit* self, bool b);
void QPlainTextEdit_Connect_UndoAvailable(QPlainTextEdit* self, intptr_t slot);
QTLIBC_API void QPlainTextEdit_RedoAvailable(QPlainTextEdit* self, bool b);
void QPlainTextEdit_Connect_RedoAvailable(QPlainTextEdit* self, intptr_t slot);
QTLIBC_API void QPlainTextEdit_CopyAvailable(QPlainTextEdit* self, bool b);
void QPlainTextEdit_Connect_CopyAvailable(QPlainTextEdit* self, intptr_t slot);
QTLIBC_API void QPlainTextEdit_SelectionChanged(QPlainTextEdit* self);
void QPlainTextEdit_Connect_SelectionChanged(QPlainTextEdit* self, intptr_t slot);
QTLIBC_API void QPlainTextEdit_CursorPositionChanged(QPlainTextEdit* self);
void QPlainTextEdit_Connect_CursorPositionChanged(QPlainTextEdit* self, intptr_t slot);
QTLIBC_API void QPlainTextEdit_UpdateRequest(QPlainTextEdit* self, QRect* rect, int dy);
void QPlainTextEdit_Connect_UpdateRequest(QPlainTextEdit* self, intptr_t slot);
QTLIBC_API void QPlainTextEdit_BlockCountChanged(QPlainTextEdit* self, int newBlockCount);
void QPlainTextEdit_Connect_BlockCountChanged(QPlainTextEdit* self, intptr_t slot);
QTLIBC_API void QPlainTextEdit_ModificationChanged(QPlainTextEdit* self, bool param1);
void QPlainTextEdit_Connect_ModificationChanged(QPlainTextEdit* self, intptr_t slot);
QTLIBC_API bool QPlainTextEdit_Event(QPlainTextEdit* self, QEvent* e);
QTLIBC_API void QPlainTextEdit_OnEvent(QPlainTextEdit* self, intptr_t slot);
QTLIBC_API bool QPlainTextEdit_QBaseEvent(QPlainTextEdit* self, QEvent* e);
QTLIBC_API void QPlainTextEdit_TimerEvent(QPlainTextEdit* self, QTimerEvent* e);
QTLIBC_API void QPlainTextEdit_OnTimerEvent(QPlainTextEdit* self, intptr_t slot);
QTLIBC_API void QPlainTextEdit_QBaseTimerEvent(QPlainTextEdit* self, QTimerEvent* e);
QTLIBC_API void QPlainTextEdit_KeyPressEvent(QPlainTextEdit* self, QKeyEvent* e);
QTLIBC_API void QPlainTextEdit_OnKeyPressEvent(QPlainTextEdit* self, intptr_t slot);
QTLIBC_API void QPlainTextEdit_QBaseKeyPressEvent(QPlainTextEdit* self, QKeyEvent* e);
QTLIBC_API void QPlainTextEdit_KeyReleaseEvent(QPlainTextEdit* self, QKeyEvent* e);
QTLIBC_API void QPlainTextEdit_OnKeyReleaseEvent(QPlainTextEdit* self, intptr_t slot);
QTLIBC_API void QPlainTextEdit_QBaseKeyReleaseEvent(QPlainTextEdit* self, QKeyEvent* e);
QTLIBC_API void QPlainTextEdit_ResizeEvent(QPlainTextEdit* self, QResizeEvent* e);
QTLIBC_API void QPlainTextEdit_OnResizeEvent(QPlainTextEdit* self, intptr_t slot);
QTLIBC_API void QPlainTextEdit_QBaseResizeEvent(QPlainTextEdit* self, QResizeEvent* e);
QTLIBC_API void QPlainTextEdit_PaintEvent(QPlainTextEdit* self, QPaintEvent* e);
QTLIBC_API void QPlainTextEdit_OnPaintEvent(QPlainTextEdit* self, intptr_t slot);
QTLIBC_API void QPlainTextEdit_QBasePaintEvent(QPlainTextEdit* self, QPaintEvent* e);
QTLIBC_API void QPlainTextEdit_MousePressEvent(QPlainTextEdit* self, QMouseEvent* e);
QTLIBC_API void QPlainTextEdit_OnMousePressEvent(QPlainTextEdit* self, intptr_t slot);
QTLIBC_API void QPlainTextEdit_QBaseMousePressEvent(QPlainTextEdit* self, QMouseEvent* e);
QTLIBC_API void QPlainTextEdit_MouseMoveEvent(QPlainTextEdit* self, QMouseEvent* e);
QTLIBC_API void QPlainTextEdit_OnMouseMoveEvent(QPlainTextEdit* self, intptr_t slot);
QTLIBC_API void QPlainTextEdit_QBaseMouseMoveEvent(QPlainTextEdit* self, QMouseEvent* e);
QTLIBC_API void QPlainTextEdit_MouseReleaseEvent(QPlainTextEdit* self, QMouseEvent* e);
QTLIBC_API void QPlainTextEdit_OnMouseReleaseEvent(QPlainTextEdit* self, intptr_t slot);
QTLIBC_API void QPlainTextEdit_QBaseMouseReleaseEvent(QPlainTextEdit* self, QMouseEvent* e);
QTLIBC_API void QPlainTextEdit_MouseDoubleClickEvent(QPlainTextEdit* self, QMouseEvent* e);
QTLIBC_API void QPlainTextEdit_OnMouseDoubleClickEvent(QPlainTextEdit* self, intptr_t slot);
QTLIBC_API void QPlainTextEdit_QBaseMouseDoubleClickEvent(QPlainTextEdit* self, QMouseEvent* e);
QTLIBC_API bool QPlainTextEdit_FocusNextPrevChild(QPlainTextEdit* self, bool next);
QTLIBC_API void QPlainTextEdit_OnFocusNextPrevChild(QPlainTextEdit* self, intptr_t slot);
QTLIBC_API bool QPlainTextEdit_QBaseFocusNextPrevChild(QPlainTextEdit* self, bool next);
QTLIBC_API void QPlainTextEdit_ContextMenuEvent(QPlainTextEdit* self, QContextMenuEvent* e);
QTLIBC_API void QPlainTextEdit_OnContextMenuEvent(QPlainTextEdit* self, intptr_t slot);
QTLIBC_API void QPlainTextEdit_QBaseContextMenuEvent(QPlainTextEdit* self, QContextMenuEvent* e);
QTLIBC_API void QPlainTextEdit_DragEnterEvent(QPlainTextEdit* self, QDragEnterEvent* e);
QTLIBC_API void QPlainTextEdit_OnDragEnterEvent(QPlainTextEdit* self, intptr_t slot);
QTLIBC_API void QPlainTextEdit_QBaseDragEnterEvent(QPlainTextEdit* self, QDragEnterEvent* e);
QTLIBC_API void QPlainTextEdit_DragLeaveEvent(QPlainTextEdit* self, QDragLeaveEvent* e);
QTLIBC_API void QPlainTextEdit_OnDragLeaveEvent(QPlainTextEdit* self, intptr_t slot);
QTLIBC_API void QPlainTextEdit_QBaseDragLeaveEvent(QPlainTextEdit* self, QDragLeaveEvent* e);
QTLIBC_API void QPlainTextEdit_DragMoveEvent(QPlainTextEdit* self, QDragMoveEvent* e);
QTLIBC_API void QPlainTextEdit_OnDragMoveEvent(QPlainTextEdit* self, intptr_t slot);
QTLIBC_API void QPlainTextEdit_QBaseDragMoveEvent(QPlainTextEdit* self, QDragMoveEvent* e);
QTLIBC_API void QPlainTextEdit_DropEvent(QPlainTextEdit* self, QDropEvent* e);
QTLIBC_API void QPlainTextEdit_OnDropEvent(QPlainTextEdit* self, intptr_t slot);
QTLIBC_API void QPlainTextEdit_QBaseDropEvent(QPlainTextEdit* self, QDropEvent* e);
QTLIBC_API void QPlainTextEdit_FocusInEvent(QPlainTextEdit* self, QFocusEvent* e);
QTLIBC_API void QPlainTextEdit_OnFocusInEvent(QPlainTextEdit* self, intptr_t slot);
QTLIBC_API void QPlainTextEdit_QBaseFocusInEvent(QPlainTextEdit* self, QFocusEvent* e);
QTLIBC_API void QPlainTextEdit_FocusOutEvent(QPlainTextEdit* self, QFocusEvent* e);
QTLIBC_API void QPlainTextEdit_OnFocusOutEvent(QPlainTextEdit* self, intptr_t slot);
QTLIBC_API void QPlainTextEdit_QBaseFocusOutEvent(QPlainTextEdit* self, QFocusEvent* e);
QTLIBC_API void QPlainTextEdit_ShowEvent(QPlainTextEdit* self, QShowEvent* param1);
QTLIBC_API void QPlainTextEdit_OnShowEvent(QPlainTextEdit* self, intptr_t slot);
QTLIBC_API void QPlainTextEdit_QBaseShowEvent(QPlainTextEdit* self, QShowEvent* param1);
QTLIBC_API void QPlainTextEdit_ChangeEvent(QPlainTextEdit* self, QEvent* e);
QTLIBC_API void QPlainTextEdit_OnChangeEvent(QPlainTextEdit* self, intptr_t slot);
QTLIBC_API void QPlainTextEdit_QBaseChangeEvent(QPlainTextEdit* self, QEvent* e);
QTLIBC_API void QPlainTextEdit_WheelEvent(QPlainTextEdit* self, QWheelEvent* e);
QTLIBC_API void QPlainTextEdit_OnWheelEvent(QPlainTextEdit* self, intptr_t slot);
QTLIBC_API void QPlainTextEdit_QBaseWheelEvent(QPlainTextEdit* self, QWheelEvent* e);
QTLIBC_API QMimeData* QPlainTextEdit_CreateMimeDataFromSelection(const QPlainTextEdit* self);
QTLIBC_API void QPlainTextEdit_OnCreateMimeDataFromSelection(const QPlainTextEdit* self, intptr_t slot);
QTLIBC_API QMimeData* QPlainTextEdit_QBaseCreateMimeDataFromSelection(const QPlainTextEdit* self);
QTLIBC_API bool QPlainTextEdit_CanInsertFromMimeData(const QPlainTextEdit* self, QMimeData* source);
QTLIBC_API void QPlainTextEdit_OnCanInsertFromMimeData(const QPlainTextEdit* self, intptr_t slot);
QTLIBC_API bool QPlainTextEdit_QBaseCanInsertFromMimeData(const QPlainTextEdit* self, QMimeData* source);
QTLIBC_API void QPlainTextEdit_InsertFromMimeData(QPlainTextEdit* self, QMimeData* source);
QTLIBC_API void QPlainTextEdit_OnInsertFromMimeData(QPlainTextEdit* self, intptr_t slot);
QTLIBC_API void QPlainTextEdit_QBaseInsertFromMimeData(QPlainTextEdit* self, QMimeData* source);
QTLIBC_API void QPlainTextEdit_InputMethodEvent(QPlainTextEdit* self, QInputMethodEvent* param1);
QTLIBC_API void QPlainTextEdit_OnInputMethodEvent(QPlainTextEdit* self, intptr_t slot);
QTLIBC_API void QPlainTextEdit_QBaseInputMethodEvent(QPlainTextEdit* self, QInputMethodEvent* param1);
QTLIBC_API void QPlainTextEdit_ScrollContentsBy(QPlainTextEdit* self, int dx, int dy);
QTLIBC_API void QPlainTextEdit_OnScrollContentsBy(QPlainTextEdit* self, intptr_t slot);
QTLIBC_API void QPlainTextEdit_QBaseScrollContentsBy(QPlainTextEdit* self, int dx, int dy);
QTLIBC_API void QPlainTextEdit_DoSetTextCursor(QPlainTextEdit* self, QTextCursor* cursor);
QTLIBC_API void QPlainTextEdit_OnDoSetTextCursor(QPlainTextEdit* self, intptr_t slot);
QTLIBC_API void QPlainTextEdit_QBaseDoSetTextCursor(QPlainTextEdit* self, QTextCursor* cursor);
QTLIBC_API libqt_string QPlainTextEdit_Tr2(const char* s, const char* c);
QTLIBC_API libqt_string QPlainTextEdit_Tr3(const char* s, const char* c, int n);
QTLIBC_API bool QPlainTextEdit_Find2(QPlainTextEdit* self, libqt_string exp, int options);
QTLIBC_API bool QPlainTextEdit_Find22(QPlainTextEdit* self, QRegularExpression* exp, int options);
QTLIBC_API void QPlainTextEdit_MoveCursor2(QPlainTextEdit* self, int operation, int mode);
QTLIBC_API void QPlainTextEdit_ZoomIn1(QPlainTextEdit* self, int range);
QTLIBC_API void QPlainTextEdit_ZoomOut1(QPlainTextEdit* self, int range);
QTLIBC_API QSize* QPlainTextEdit_MinimumSizeHint(const QPlainTextEdit* self);
QTLIBC_API void QPlainTextEdit_OnMinimumSizeHint(const QPlainTextEdit* self, intptr_t slot);
QTLIBC_API QSize* QPlainTextEdit_QBaseMinimumSizeHint(const QPlainTextEdit* self);
QTLIBC_API QSize* QPlainTextEdit_SizeHint(const QPlainTextEdit* self);
QTLIBC_API void QPlainTextEdit_OnSizeHint(const QPlainTextEdit* self, intptr_t slot);
QTLIBC_API QSize* QPlainTextEdit_QBaseSizeHint(const QPlainTextEdit* self);
QTLIBC_API void QPlainTextEdit_SetupViewport(QPlainTextEdit* self, QWidget* viewport);
QTLIBC_API void QPlainTextEdit_OnSetupViewport(QPlainTextEdit* self, intptr_t slot);
QTLIBC_API void QPlainTextEdit_QBaseSetupViewport(QPlainTextEdit* self, QWidget* viewport);
QTLIBC_API bool QPlainTextEdit_EventFilter(QPlainTextEdit* self, QObject* param1, QEvent* param2);
QTLIBC_API void QPlainTextEdit_OnEventFilter(QPlainTextEdit* self, intptr_t slot);
QTLIBC_API bool QPlainTextEdit_QBaseEventFilter(QPlainTextEdit* self, QObject* param1, QEvent* param2);
QTLIBC_API bool QPlainTextEdit_ViewportEvent(QPlainTextEdit* self, QEvent* param1);
QTLIBC_API void QPlainTextEdit_OnViewportEvent(QPlainTextEdit* self, intptr_t slot);
QTLIBC_API bool QPlainTextEdit_QBaseViewportEvent(QPlainTextEdit* self, QEvent* param1);
QTLIBC_API int QPlainTextEdit_DevType(const QPlainTextEdit* self);
QTLIBC_API void QPlainTextEdit_OnDevType(const QPlainTextEdit* self, intptr_t slot);
QTLIBC_API int QPlainTextEdit_QBaseDevType(const QPlainTextEdit* self);
QTLIBC_API void QPlainTextEdit_SetVisible(QPlainTextEdit* self, bool visible);
QTLIBC_API void QPlainTextEdit_OnSetVisible(QPlainTextEdit* self, intptr_t slot);
QTLIBC_API void QPlainTextEdit_QBaseSetVisible(QPlainTextEdit* self, bool visible);
QTLIBC_API int QPlainTextEdit_HeightForWidth(const QPlainTextEdit* self, int param1);
QTLIBC_API void QPlainTextEdit_OnHeightForWidth(const QPlainTextEdit* self, intptr_t slot);
QTLIBC_API int QPlainTextEdit_QBaseHeightForWidth(const QPlainTextEdit* self, int param1);
QTLIBC_API bool QPlainTextEdit_HasHeightForWidth(const QPlainTextEdit* self);
QTLIBC_API void QPlainTextEdit_OnHasHeightForWidth(const QPlainTextEdit* self, intptr_t slot);
QTLIBC_API bool QPlainTextEdit_QBaseHasHeightForWidth(const QPlainTextEdit* self);
QTLIBC_API QPaintEngine* QPlainTextEdit_PaintEngine(const QPlainTextEdit* self);
QTLIBC_API void QPlainTextEdit_OnPaintEngine(const QPlainTextEdit* self, intptr_t slot);
QTLIBC_API QPaintEngine* QPlainTextEdit_QBasePaintEngine(const QPlainTextEdit* self);
QTLIBC_API void QPlainTextEdit_EnterEvent(QPlainTextEdit* self, QEnterEvent* event);
QTLIBC_API void QPlainTextEdit_OnEnterEvent(QPlainTextEdit* self, intptr_t slot);
QTLIBC_API void QPlainTextEdit_QBaseEnterEvent(QPlainTextEdit* self, QEnterEvent* event);
QTLIBC_API void QPlainTextEdit_LeaveEvent(QPlainTextEdit* self, QEvent* event);
QTLIBC_API void QPlainTextEdit_OnLeaveEvent(QPlainTextEdit* self, intptr_t slot);
QTLIBC_API void QPlainTextEdit_QBaseLeaveEvent(QPlainTextEdit* self, QEvent* event);
QTLIBC_API void QPlainTextEdit_MoveEvent(QPlainTextEdit* self, QMoveEvent* event);
QTLIBC_API void QPlainTextEdit_OnMoveEvent(QPlainTextEdit* self, intptr_t slot);
QTLIBC_API void QPlainTextEdit_QBaseMoveEvent(QPlainTextEdit* self, QMoveEvent* event);
QTLIBC_API void QPlainTextEdit_CloseEvent(QPlainTextEdit* self, QCloseEvent* event);
QTLIBC_API void QPlainTextEdit_OnCloseEvent(QPlainTextEdit* self, intptr_t slot);
QTLIBC_API void QPlainTextEdit_QBaseCloseEvent(QPlainTextEdit* self, QCloseEvent* event);
QTLIBC_API void QPlainTextEdit_TabletEvent(QPlainTextEdit* self, QTabletEvent* event);
QTLIBC_API void QPlainTextEdit_OnTabletEvent(QPlainTextEdit* self, intptr_t slot);
QTLIBC_API void QPlainTextEdit_QBaseTabletEvent(QPlainTextEdit* self, QTabletEvent* event);
QTLIBC_API void QPlainTextEdit_ActionEvent(QPlainTextEdit* self, QActionEvent* event);
QTLIBC_API void QPlainTextEdit_OnActionEvent(QPlainTextEdit* self, intptr_t slot);
QTLIBC_API void QPlainTextEdit_QBaseActionEvent(QPlainTextEdit* self, QActionEvent* event);
QTLIBC_API void QPlainTextEdit_HideEvent(QPlainTextEdit* self, QHideEvent* event);
QTLIBC_API void QPlainTextEdit_OnHideEvent(QPlainTextEdit* self, intptr_t slot);
QTLIBC_API void QPlainTextEdit_QBaseHideEvent(QPlainTextEdit* self, QHideEvent* event);
QTLIBC_API bool QPlainTextEdit_NativeEvent(QPlainTextEdit* self, libqt_string eventType, void* message, intptr_t* result);
QTLIBC_API void QPlainTextEdit_OnNativeEvent(QPlainTextEdit* self, intptr_t slot);
QTLIBC_API bool QPlainTextEdit_QBaseNativeEvent(QPlainTextEdit* self, libqt_string eventType, void* message, intptr_t* result);
QTLIBC_API void QPlainTextEdit_ChildEvent(QPlainTextEdit* self, QChildEvent* event);
QTLIBC_API void QPlainTextEdit_OnChildEvent(QPlainTextEdit* self, intptr_t slot);
QTLIBC_API void QPlainTextEdit_QBaseChildEvent(QPlainTextEdit* self, QChildEvent* event);
QTLIBC_API void QPlainTextEdit_CustomEvent(QPlainTextEdit* self, QEvent* event);
QTLIBC_API void QPlainTextEdit_OnCustomEvent(QPlainTextEdit* self, intptr_t slot);
QTLIBC_API void QPlainTextEdit_QBaseCustomEvent(QPlainTextEdit* self, QEvent* event);
QTLIBC_API void QPlainTextEdit_ConnectNotify(QPlainTextEdit* self, QMetaMethod* signal);
QTLIBC_API void QPlainTextEdit_OnConnectNotify(QPlainTextEdit* self, intptr_t slot);
QTLIBC_API void QPlainTextEdit_QBaseConnectNotify(QPlainTextEdit* self, QMetaMethod* signal);
QTLIBC_API void QPlainTextEdit_DisconnectNotify(QPlainTextEdit* self, QMetaMethod* signal);
QTLIBC_API void QPlainTextEdit_OnDisconnectNotify(QPlainTextEdit* self, intptr_t slot);
QTLIBC_API void QPlainTextEdit_QBaseDisconnectNotify(QPlainTextEdit* self, QMetaMethod* signal);
QTLIBC_API QSize* QPlainTextEdit_ViewportSizeHint(const QPlainTextEdit* self);
QTLIBC_API void QPlainTextEdit_OnViewportSizeHint(const QPlainTextEdit* self, intptr_t slot);
QTLIBC_API QSize* QPlainTextEdit_QBaseViewportSizeHint(const QPlainTextEdit* self);
QTLIBC_API void QPlainTextEdit_InitStyleOption(const QPlainTextEdit* self, QStyleOptionFrame* option);
QTLIBC_API void QPlainTextEdit_OnInitStyleOption(const QPlainTextEdit* self, intptr_t slot);
QTLIBC_API void QPlainTextEdit_QBaseInitStyleOption(const QPlainTextEdit* self, QStyleOptionFrame* option);
QTLIBC_API int QPlainTextEdit_Metric(const QPlainTextEdit* self, int param1);
QTLIBC_API void QPlainTextEdit_OnMetric(const QPlainTextEdit* self, intptr_t slot);
QTLIBC_API int QPlainTextEdit_QBaseMetric(const QPlainTextEdit* self, int param1);
QTLIBC_API void QPlainTextEdit_InitPainter(const QPlainTextEdit* self, QPainter* painter);
QTLIBC_API void QPlainTextEdit_OnInitPainter(const QPlainTextEdit* self, intptr_t slot);
QTLIBC_API void QPlainTextEdit_QBaseInitPainter(const QPlainTextEdit* self, QPainter* painter);
QTLIBC_API QPaintDevice* QPlainTextEdit_Redirected(const QPlainTextEdit* self, QPoint* offset);
QTLIBC_API void QPlainTextEdit_OnRedirected(const QPlainTextEdit* self, intptr_t slot);
QTLIBC_API QPaintDevice* QPlainTextEdit_QBaseRedirected(const QPlainTextEdit* self, QPoint* offset);
QTLIBC_API QPainter* QPlainTextEdit_SharedPainter(const QPlainTextEdit* self);
QTLIBC_API void QPlainTextEdit_OnSharedPainter(const QPlainTextEdit* self, intptr_t slot);
QTLIBC_API QPainter* QPlainTextEdit_QBaseSharedPainter(const QPlainTextEdit* self);
QTLIBC_API QTextBlock* QPlainTextEdit_FirstVisibleBlock(const QPlainTextEdit* self);
QTLIBC_API void QPlainTextEdit_OnFirstVisibleBlock(const QPlainTextEdit* self, intptr_t slot);
QTLIBC_API QTextBlock* QPlainTextEdit_QBaseFirstVisibleBlock(const QPlainTextEdit* self);
QTLIBC_API QPointF* QPlainTextEdit_ContentOffset(const QPlainTextEdit* self);
QTLIBC_API void QPlainTextEdit_OnContentOffset(const QPlainTextEdit* self, intptr_t slot);
QTLIBC_API QPointF* QPlainTextEdit_QBaseContentOffset(const QPlainTextEdit* self);
QTLIBC_API QRectF* QPlainTextEdit_BlockBoundingRect(const QPlainTextEdit* self, QTextBlock* block);
QTLIBC_API void QPlainTextEdit_OnBlockBoundingRect(const QPlainTextEdit* self, intptr_t slot);
QTLIBC_API QRectF* QPlainTextEdit_QBaseBlockBoundingRect(const QPlainTextEdit* self, QTextBlock* block);
QTLIBC_API QRectF* QPlainTextEdit_BlockBoundingGeometry(const QPlainTextEdit* self, QTextBlock* block);
QTLIBC_API void QPlainTextEdit_OnBlockBoundingGeometry(const QPlainTextEdit* self, intptr_t slot);
QTLIBC_API QRectF* QPlainTextEdit_QBaseBlockBoundingGeometry(const QPlainTextEdit* self, QTextBlock* block);
QTLIBC_API QAbstractTextDocumentLayout__PaintContext* QPlainTextEdit_GetPaintContext(const QPlainTextEdit* self);
QTLIBC_API void QPlainTextEdit_OnGetPaintContext(const QPlainTextEdit* self, intptr_t slot);
QTLIBC_API QAbstractTextDocumentLayout__PaintContext* QPlainTextEdit_QBaseGetPaintContext(const QPlainTextEdit* self);
QTLIBC_API void QPlainTextEdit_ZoomInF(QPlainTextEdit* self, float range);
QTLIBC_API void QPlainTextEdit_OnZoomInF(QPlainTextEdit* self, intptr_t slot);
QTLIBC_API void QPlainTextEdit_QBaseZoomInF(QPlainTextEdit* self, float range);
QTLIBC_API void QPlainTextEdit_SetViewportMargins(QPlainTextEdit* self, int left, int top, int right, int bottom);
QTLIBC_API void QPlainTextEdit_OnSetViewportMargins(QPlainTextEdit* self, intptr_t slot);
QTLIBC_API void QPlainTextEdit_QBaseSetViewportMargins(QPlainTextEdit* self, int left, int top, int right, int bottom);
QTLIBC_API QMargins* QPlainTextEdit_ViewportMargins(const QPlainTextEdit* self);
QTLIBC_API void QPlainTextEdit_OnViewportMargins(const QPlainTextEdit* self, intptr_t slot);
QTLIBC_API QMargins* QPlainTextEdit_QBaseViewportMargins(const QPlainTextEdit* self);
QTLIBC_API void QPlainTextEdit_DrawFrame(QPlainTextEdit* self, QPainter* param1);
QTLIBC_API void QPlainTextEdit_OnDrawFrame(QPlainTextEdit* self, intptr_t slot);
QTLIBC_API void QPlainTextEdit_QBaseDrawFrame(QPlainTextEdit* self, QPainter* param1);
QTLIBC_API void QPlainTextEdit_UpdateMicroFocus(QPlainTextEdit* self);
QTLIBC_API void QPlainTextEdit_OnUpdateMicroFocus(QPlainTextEdit* self, intptr_t slot);
QTLIBC_API void QPlainTextEdit_QBaseUpdateMicroFocus(QPlainTextEdit* self);
QTLIBC_API void QPlainTextEdit_Create(QPlainTextEdit* self);
QTLIBC_API void QPlainTextEdit_OnCreate(QPlainTextEdit* self, intptr_t slot);
QTLIBC_API void QPlainTextEdit_QBaseCreate(QPlainTextEdit* self);
QTLIBC_API void QPlainTextEdit_Destroy(QPlainTextEdit* self);
QTLIBC_API void QPlainTextEdit_OnDestroy(QPlainTextEdit* self, intptr_t slot);
QTLIBC_API void QPlainTextEdit_QBaseDestroy(QPlainTextEdit* self);
QTLIBC_API bool QPlainTextEdit_FocusNextChild(QPlainTextEdit* self);
QTLIBC_API void QPlainTextEdit_OnFocusNextChild(QPlainTextEdit* self, intptr_t slot);
QTLIBC_API bool QPlainTextEdit_QBaseFocusNextChild(QPlainTextEdit* self);
QTLIBC_API bool QPlainTextEdit_FocusPreviousChild(QPlainTextEdit* self);
QTLIBC_API void QPlainTextEdit_OnFocusPreviousChild(QPlainTextEdit* self, intptr_t slot);
QTLIBC_API bool QPlainTextEdit_QBaseFocusPreviousChild(QPlainTextEdit* self);
QTLIBC_API QObject* QPlainTextEdit_Sender(const QPlainTextEdit* self);
QTLIBC_API void QPlainTextEdit_OnSender(const QPlainTextEdit* self, intptr_t slot);
QTLIBC_API QObject* QPlainTextEdit_QBaseSender(const QPlainTextEdit* self);
QTLIBC_API int QPlainTextEdit_SenderSignalIndex(const QPlainTextEdit* self);
QTLIBC_API void QPlainTextEdit_OnSenderSignalIndex(const QPlainTextEdit* self, intptr_t slot);
QTLIBC_API int QPlainTextEdit_QBaseSenderSignalIndex(const QPlainTextEdit* self);
QTLIBC_API int QPlainTextEdit_Receivers(const QPlainTextEdit* self, const char* signal);
QTLIBC_API void QPlainTextEdit_OnReceivers(const QPlainTextEdit* self, intptr_t slot);
QTLIBC_API int QPlainTextEdit_QBaseReceivers(const QPlainTextEdit* self, const char* signal);
QTLIBC_API bool QPlainTextEdit_IsSignalConnected(const QPlainTextEdit* self, QMetaMethod* signal);
QTLIBC_API void QPlainTextEdit_OnIsSignalConnected(const QPlainTextEdit* self, intptr_t slot);
QTLIBC_API bool QPlainTextEdit_QBaseIsSignalConnected(const QPlainTextEdit* self, QMetaMethod* signal);
QTLIBC_API void QPlainTextEdit_Delete(QPlainTextEdit* self);

QTLIBC_API QPlainTextDocumentLayout* QPlainTextDocumentLayout_new(QTextDocument* document);
QTLIBC_API QMetaObject* QPlainTextDocumentLayout_MetaObject(const QPlainTextDocumentLayout* self);
QTLIBC_API void* QPlainTextDocumentLayout_Metacast(QPlainTextDocumentLayout* self, const char* param1);
QTLIBC_API int QPlainTextDocumentLayout_Metacall(QPlainTextDocumentLayout* self, int param1, int param2, void** param3);
QTLIBC_API void QPlainTextDocumentLayout_OnMetacall(QPlainTextDocumentLayout* self, intptr_t slot);
QTLIBC_API int QPlainTextDocumentLayout_QBaseMetacall(QPlainTextDocumentLayout* self, int param1, int param2, void** param3);
QTLIBC_API libqt_string QPlainTextDocumentLayout_Tr(const char* s);
QTLIBC_API void QPlainTextDocumentLayout_Draw(QPlainTextDocumentLayout* self, QPainter* param1, QAbstractTextDocumentLayout__PaintContext* param2);
QTLIBC_API void QPlainTextDocumentLayout_OnDraw(QPlainTextDocumentLayout* self, intptr_t slot);
QTLIBC_API void QPlainTextDocumentLayout_QBaseDraw(QPlainTextDocumentLayout* self, QPainter* param1, QAbstractTextDocumentLayout__PaintContext* param2);
QTLIBC_API int QPlainTextDocumentLayout_HitTest(const QPlainTextDocumentLayout* self, QPointF* param1, int param2);
QTLIBC_API void QPlainTextDocumentLayout_OnHitTest(const QPlainTextDocumentLayout* self, intptr_t slot);
QTLIBC_API int QPlainTextDocumentLayout_QBaseHitTest(const QPlainTextDocumentLayout* self, QPointF* param1, int param2);
QTLIBC_API int QPlainTextDocumentLayout_PageCount(const QPlainTextDocumentLayout* self);
QTLIBC_API void QPlainTextDocumentLayout_OnPageCount(const QPlainTextDocumentLayout* self, intptr_t slot);
QTLIBC_API int QPlainTextDocumentLayout_QBasePageCount(const QPlainTextDocumentLayout* self);
QTLIBC_API QSizeF* QPlainTextDocumentLayout_DocumentSize(const QPlainTextDocumentLayout* self);
QTLIBC_API void QPlainTextDocumentLayout_OnDocumentSize(const QPlainTextDocumentLayout* self, intptr_t slot);
QTLIBC_API QSizeF* QPlainTextDocumentLayout_QBaseDocumentSize(const QPlainTextDocumentLayout* self);
QTLIBC_API QRectF* QPlainTextDocumentLayout_FrameBoundingRect(const QPlainTextDocumentLayout* self, QTextFrame* param1);
QTLIBC_API void QPlainTextDocumentLayout_OnFrameBoundingRect(const QPlainTextDocumentLayout* self, intptr_t slot);
QTLIBC_API QRectF* QPlainTextDocumentLayout_QBaseFrameBoundingRect(const QPlainTextDocumentLayout* self, QTextFrame* param1);
QTLIBC_API QRectF* QPlainTextDocumentLayout_BlockBoundingRect(const QPlainTextDocumentLayout* self, QTextBlock* block);
QTLIBC_API void QPlainTextDocumentLayout_OnBlockBoundingRect(const QPlainTextDocumentLayout* self, intptr_t slot);
QTLIBC_API QRectF* QPlainTextDocumentLayout_QBaseBlockBoundingRect(const QPlainTextDocumentLayout* self, QTextBlock* block);
QTLIBC_API void QPlainTextDocumentLayout_EnsureBlockLayout(const QPlainTextDocumentLayout* self, QTextBlock* block);
QTLIBC_API void QPlainTextDocumentLayout_SetCursorWidth(QPlainTextDocumentLayout* self, int width);
QTLIBC_API int QPlainTextDocumentLayout_CursorWidth(const QPlainTextDocumentLayout* self);
QTLIBC_API void QPlainTextDocumentLayout_RequestUpdate(QPlainTextDocumentLayout* self);
QTLIBC_API void QPlainTextDocumentLayout_DocumentChanged(QPlainTextDocumentLayout* self, int from, int param2, int charsAdded);
QTLIBC_API void QPlainTextDocumentLayout_OnDocumentChanged(QPlainTextDocumentLayout* self, intptr_t slot);
QTLIBC_API void QPlainTextDocumentLayout_QBaseDocumentChanged(QPlainTextDocumentLayout* self, int from, int param2, int charsAdded);
QTLIBC_API libqt_string QPlainTextDocumentLayout_Tr2(const char* s, const char* c);
QTLIBC_API libqt_string QPlainTextDocumentLayout_Tr3(const char* s, const char* c, int n);
QTLIBC_API void QPlainTextDocumentLayout_ResizeInlineObject(QPlainTextDocumentLayout* self, QTextInlineObject* item, int posInDocument, QTextFormat* format);
QTLIBC_API void QPlainTextDocumentLayout_OnResizeInlineObject(QPlainTextDocumentLayout* self, intptr_t slot);
QTLIBC_API void QPlainTextDocumentLayout_QBaseResizeInlineObject(QPlainTextDocumentLayout* self, QTextInlineObject* item, int posInDocument, QTextFormat* format);
QTLIBC_API void QPlainTextDocumentLayout_PositionInlineObject(QPlainTextDocumentLayout* self, QTextInlineObject* item, int posInDocument, QTextFormat* format);
QTLIBC_API void QPlainTextDocumentLayout_OnPositionInlineObject(QPlainTextDocumentLayout* self, intptr_t slot);
QTLIBC_API void QPlainTextDocumentLayout_QBasePositionInlineObject(QPlainTextDocumentLayout* self, QTextInlineObject* item, int posInDocument, QTextFormat* format);
QTLIBC_API void QPlainTextDocumentLayout_DrawInlineObject(QPlainTextDocumentLayout* self, QPainter* painter, QRectF* rect, QTextInlineObject* object, int posInDocument, QTextFormat* format);
QTLIBC_API void QPlainTextDocumentLayout_OnDrawInlineObject(QPlainTextDocumentLayout* self, intptr_t slot);
QTLIBC_API void QPlainTextDocumentLayout_QBaseDrawInlineObject(QPlainTextDocumentLayout* self, QPainter* painter, QRectF* rect, QTextInlineObject* object, int posInDocument, QTextFormat* format);
QTLIBC_API bool QPlainTextDocumentLayout_Event(QPlainTextDocumentLayout* self, QEvent* event);
QTLIBC_API void QPlainTextDocumentLayout_OnEvent(QPlainTextDocumentLayout* self, intptr_t slot);
QTLIBC_API bool QPlainTextDocumentLayout_QBaseEvent(QPlainTextDocumentLayout* self, QEvent* event);
QTLIBC_API bool QPlainTextDocumentLayout_EventFilter(QPlainTextDocumentLayout* self, QObject* watched, QEvent* event);
QTLIBC_API void QPlainTextDocumentLayout_OnEventFilter(QPlainTextDocumentLayout* self, intptr_t slot);
QTLIBC_API bool QPlainTextDocumentLayout_QBaseEventFilter(QPlainTextDocumentLayout* self, QObject* watched, QEvent* event);
QTLIBC_API void QPlainTextDocumentLayout_TimerEvent(QPlainTextDocumentLayout* self, QTimerEvent* event);
QTLIBC_API void QPlainTextDocumentLayout_OnTimerEvent(QPlainTextDocumentLayout* self, intptr_t slot);
QTLIBC_API void QPlainTextDocumentLayout_QBaseTimerEvent(QPlainTextDocumentLayout* self, QTimerEvent* event);
QTLIBC_API void QPlainTextDocumentLayout_ChildEvent(QPlainTextDocumentLayout* self, QChildEvent* event);
QTLIBC_API void QPlainTextDocumentLayout_OnChildEvent(QPlainTextDocumentLayout* self, intptr_t slot);
QTLIBC_API void QPlainTextDocumentLayout_QBaseChildEvent(QPlainTextDocumentLayout* self, QChildEvent* event);
QTLIBC_API void QPlainTextDocumentLayout_CustomEvent(QPlainTextDocumentLayout* self, QEvent* event);
QTLIBC_API void QPlainTextDocumentLayout_OnCustomEvent(QPlainTextDocumentLayout* self, intptr_t slot);
QTLIBC_API void QPlainTextDocumentLayout_QBaseCustomEvent(QPlainTextDocumentLayout* self, QEvent* event);
QTLIBC_API void QPlainTextDocumentLayout_ConnectNotify(QPlainTextDocumentLayout* self, QMetaMethod* signal);
QTLIBC_API void QPlainTextDocumentLayout_OnConnectNotify(QPlainTextDocumentLayout* self, intptr_t slot);
QTLIBC_API void QPlainTextDocumentLayout_QBaseConnectNotify(QPlainTextDocumentLayout* self, QMetaMethod* signal);
QTLIBC_API void QPlainTextDocumentLayout_DisconnectNotify(QPlainTextDocumentLayout* self, QMetaMethod* signal);
QTLIBC_API void QPlainTextDocumentLayout_OnDisconnectNotify(QPlainTextDocumentLayout* self, intptr_t slot);
QTLIBC_API void QPlainTextDocumentLayout_QBaseDisconnectNotify(QPlainTextDocumentLayout* self, QMetaMethod* signal);
QTLIBC_API int QPlainTextDocumentLayout_FormatIndex(QPlainTextDocumentLayout* self, int pos);
QTLIBC_API void QPlainTextDocumentLayout_OnFormatIndex(QPlainTextDocumentLayout* self, intptr_t slot);
QTLIBC_API int QPlainTextDocumentLayout_QBaseFormatIndex(QPlainTextDocumentLayout* self, int pos);
QTLIBC_API QTextCharFormat* QPlainTextDocumentLayout_Format(QPlainTextDocumentLayout* self, int pos);
QTLIBC_API void QPlainTextDocumentLayout_OnFormat(QPlainTextDocumentLayout* self, intptr_t slot);
QTLIBC_API QTextCharFormat* QPlainTextDocumentLayout_QBaseFormat(QPlainTextDocumentLayout* self, int pos);
QTLIBC_API QObject* QPlainTextDocumentLayout_Sender(const QPlainTextDocumentLayout* self);
QTLIBC_API void QPlainTextDocumentLayout_OnSender(const QPlainTextDocumentLayout* self, intptr_t slot);
QTLIBC_API QObject* QPlainTextDocumentLayout_QBaseSender(const QPlainTextDocumentLayout* self);
QTLIBC_API int QPlainTextDocumentLayout_SenderSignalIndex(const QPlainTextDocumentLayout* self);
QTLIBC_API void QPlainTextDocumentLayout_OnSenderSignalIndex(const QPlainTextDocumentLayout* self, intptr_t slot);
QTLIBC_API int QPlainTextDocumentLayout_QBaseSenderSignalIndex(const QPlainTextDocumentLayout* self);
QTLIBC_API int QPlainTextDocumentLayout_Receivers(const QPlainTextDocumentLayout* self, const char* signal);
QTLIBC_API void QPlainTextDocumentLayout_OnReceivers(const QPlainTextDocumentLayout* self, intptr_t slot);
QTLIBC_API int QPlainTextDocumentLayout_QBaseReceivers(const QPlainTextDocumentLayout* self, const char* signal);
QTLIBC_API bool QPlainTextDocumentLayout_IsSignalConnected(const QPlainTextDocumentLayout* self, QMetaMethod* signal);
QTLIBC_API void QPlainTextDocumentLayout_OnIsSignalConnected(const QPlainTextDocumentLayout* self, intptr_t slot);
QTLIBC_API bool QPlainTextDocumentLayout_QBaseIsSignalConnected(const QPlainTextDocumentLayout* self, QMetaMethod* signal);
QTLIBC_API void QPlainTextDocumentLayout_Delete(QPlainTextDocumentLayout* self);

#ifdef __cplusplus
} /* extern C */
#endif

#endif
