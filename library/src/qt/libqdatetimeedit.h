#pragma once
#ifndef SRC_QTC_LIBQDATETIMEEDIT_H
#define SRC_QTC_LIBQDATETIMEEDIT_H

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>

#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

#include "qtlibc.h"

#ifdef __cplusplus
extern "C" {
#endif

#ifdef __cplusplus
#if defined(WORKAROUND_INNER_CLASS_DEFINITION_QMetaObject__Connection)
typedef QMetaObject::Connection QMetaObject__Connection;
#endif
#else
typedef struct QAbstractSpinBox QAbstractSpinBox;
typedef struct QAction QAction;
typedef struct QActionEvent QActionEvent;
typedef struct QAnyStringView QAnyStringView;
typedef struct QBackingStore QBackingStore;
typedef struct QBindingStorage QBindingStorage;
typedef struct QBitmap QBitmap;
typedef struct QCalendar QCalendar;
typedef struct QCalendarWidget QCalendarWidget;
typedef struct QChildEvent QChildEvent;
typedef struct QCloseEvent QCloseEvent;
typedef struct QContextMenuEvent QContextMenuEvent;
typedef struct QCursor QCursor;
typedef struct QDate QDate;
typedef struct QDateEdit QDateEdit;
typedef struct QDateTime QDateTime;
typedef struct QDateTimeEdit QDateTimeEdit;
typedef struct QDragEnterEvent QDragEnterEvent;
typedef struct QDragLeaveEvent QDragLeaveEvent;
typedef struct QDragMoveEvent QDragMoveEvent;
typedef struct QDropEvent QDropEvent;
typedef struct QEnterEvent QEnterEvent;
typedef struct QEvent QEvent;
typedef struct QFocusEvent QFocusEvent;
typedef struct QFont QFont;
typedef struct QFontInfo QFontInfo;
typedef struct QFontMetrics QFontMetrics;
typedef struct QGraphicsEffect QGraphicsEffect;
typedef struct QGraphicsProxyWidget QGraphicsProxyWidget;
typedef struct QHideEvent QHideEvent;
typedef struct QIcon QIcon;
typedef struct QInputMethodEvent QInputMethodEvent;
typedef struct QKeyEvent QKeyEvent;
typedef struct QKeySequence QKeySequence;
typedef struct QLayout QLayout;
typedef struct QLineEdit QLineEdit;
typedef struct QLocale QLocale;
typedef struct QMargins QMargins;
typedef struct QMetaMethod QMetaMethod;
typedef struct QMetaObject QMetaObject;
typedef struct QMetaObject__Connection QMetaObject__Connection;
typedef struct QMouseEvent QMouseEvent;
typedef struct QMoveEvent QMoveEvent;
typedef struct QObject QObject;
typedef struct QPaintDevice QPaintDevice;
typedef struct QPaintEngine QPaintEngine;
typedef struct QPaintEvent QPaintEvent;
typedef struct QPainter QPainter;
typedef struct QPalette QPalette;
typedef struct QPixmap QPixmap;
typedef struct QPoint QPoint;
typedef struct QPointF QPointF;
typedef struct QRect QRect;
typedef struct QRegion QRegion;
typedef struct QResizeEvent QResizeEvent;
typedef struct QScreen QScreen;
typedef struct QShowEvent QShowEvent;
typedef struct QSize QSize;
typedef struct QSizePolicy QSizePolicy;
typedef struct QStyle QStyle;
typedef struct QStyleOptionSpinBox QStyleOptionSpinBox;
typedef struct QTabletEvent QTabletEvent;
typedef struct QThread QThread;
typedef struct QTime QTime;
typedef struct QTimeEdit QTimeEdit;
typedef struct QTimerEvent QTimerEvent;
typedef struct QVariant QVariant;
typedef struct QWheelEvent QWheelEvent;
typedef struct QWidget QWidget;
typedef struct QWindow QWindow;
#endif

#ifdef __cplusplus
typedef QDateTimeEdit::Section Section;   // C++ enum
typedef QDateTimeEdit::Sections Sections; // C++ QFlags
#else
typedef int Section;  // C ABI enum
typedef int Sections; // C ABI QFlags
#endif

QTLIBC_API QDateTimeEdit* QDateTimeEdit_new(QWidget* parent);
QTLIBC_API QDateTimeEdit* QDateTimeEdit_new2();
QTLIBC_API QDateTimeEdit* QDateTimeEdit_new3(QDateTime* dt);
QTLIBC_API QDateTimeEdit* QDateTimeEdit_new4(QDate* d);
QTLIBC_API QDateTimeEdit* QDateTimeEdit_new5(QTime* t);
QTLIBC_API QDateTimeEdit* QDateTimeEdit_new6(QDateTime* dt, QWidget* parent);
QTLIBC_API QDateTimeEdit* QDateTimeEdit_new7(QDate* d, QWidget* parent);
QTLIBC_API QDateTimeEdit* QDateTimeEdit_new8(QTime* t, QWidget* parent);
QTLIBC_API QMetaObject* QDateTimeEdit_MetaObject(const QDateTimeEdit* self);
QTLIBC_API void* QDateTimeEdit_Metacast(QDateTimeEdit* self, const char* param1);
QTLIBC_API int QDateTimeEdit_Metacall(QDateTimeEdit* self, int param1, int param2, void** param3);
QTLIBC_API void QDateTimeEdit_OnMetacall(QDateTimeEdit* self, intptr_t slot);
QTLIBC_API int QDateTimeEdit_QBaseMetacall(QDateTimeEdit* self, int param1, int param2, void** param3);
QTLIBC_API libqt_string QDateTimeEdit_Tr(const char* s);
QTLIBC_API QDateTime* QDateTimeEdit_DateTime(const QDateTimeEdit* self);
QTLIBC_API QDate* QDateTimeEdit_Date(const QDateTimeEdit* self);
QTLIBC_API QTime* QDateTimeEdit_Time(const QDateTimeEdit* self);
QTLIBC_API QCalendar* QDateTimeEdit_Calendar(const QDateTimeEdit* self);
QTLIBC_API void QDateTimeEdit_SetCalendar(QDateTimeEdit* self, QCalendar* calendar);
QTLIBC_API QDateTime* QDateTimeEdit_MinimumDateTime(const QDateTimeEdit* self);
QTLIBC_API void QDateTimeEdit_ClearMinimumDateTime(QDateTimeEdit* self);
QTLIBC_API void QDateTimeEdit_SetMinimumDateTime(QDateTimeEdit* self, QDateTime* dt);
QTLIBC_API QDateTime* QDateTimeEdit_MaximumDateTime(const QDateTimeEdit* self);
QTLIBC_API void QDateTimeEdit_ClearMaximumDateTime(QDateTimeEdit* self);
QTLIBC_API void QDateTimeEdit_SetMaximumDateTime(QDateTimeEdit* self, QDateTime* dt);
QTLIBC_API void QDateTimeEdit_SetDateTimeRange(QDateTimeEdit* self, QDateTime* min, QDateTime* max);
QTLIBC_API QDate* QDateTimeEdit_MinimumDate(const QDateTimeEdit* self);
QTLIBC_API void QDateTimeEdit_SetMinimumDate(QDateTimeEdit* self, QDate* min);
QTLIBC_API void QDateTimeEdit_ClearMinimumDate(QDateTimeEdit* self);
QTLIBC_API QDate* QDateTimeEdit_MaximumDate(const QDateTimeEdit* self);
QTLIBC_API void QDateTimeEdit_SetMaximumDate(QDateTimeEdit* self, QDate* max);
QTLIBC_API void QDateTimeEdit_ClearMaximumDate(QDateTimeEdit* self);
QTLIBC_API void QDateTimeEdit_SetDateRange(QDateTimeEdit* self, QDate* min, QDate* max);
QTLIBC_API QTime* QDateTimeEdit_MinimumTime(const QDateTimeEdit* self);
QTLIBC_API void QDateTimeEdit_SetMinimumTime(QDateTimeEdit* self, QTime* min);
QTLIBC_API void QDateTimeEdit_ClearMinimumTime(QDateTimeEdit* self);
QTLIBC_API QTime* QDateTimeEdit_MaximumTime(const QDateTimeEdit* self);
QTLIBC_API void QDateTimeEdit_SetMaximumTime(QDateTimeEdit* self, QTime* max);
QTLIBC_API void QDateTimeEdit_ClearMaximumTime(QDateTimeEdit* self);
QTLIBC_API void QDateTimeEdit_SetTimeRange(QDateTimeEdit* self, QTime* min, QTime* max);
QTLIBC_API int QDateTimeEdit_DisplayedSections(const QDateTimeEdit* self);
QTLIBC_API int QDateTimeEdit_CurrentSection(const QDateTimeEdit* self);
QTLIBC_API int QDateTimeEdit_SectionAt(const QDateTimeEdit* self, int index);
QTLIBC_API void QDateTimeEdit_SetCurrentSection(QDateTimeEdit* self, int section);
QTLIBC_API int QDateTimeEdit_CurrentSectionIndex(const QDateTimeEdit* self);
QTLIBC_API void QDateTimeEdit_SetCurrentSectionIndex(QDateTimeEdit* self, int index);
QTLIBC_API QCalendarWidget* QDateTimeEdit_CalendarWidget(const QDateTimeEdit* self);
QTLIBC_API void QDateTimeEdit_SetCalendarWidget(QDateTimeEdit* self, QCalendarWidget* calendarWidget);
QTLIBC_API int QDateTimeEdit_SectionCount(const QDateTimeEdit* self);
QTLIBC_API void QDateTimeEdit_SetSelectedSection(QDateTimeEdit* self, int section);
QTLIBC_API libqt_string QDateTimeEdit_SectionText(const QDateTimeEdit* self, int section);
QTLIBC_API libqt_string QDateTimeEdit_DisplayFormat(const QDateTimeEdit* self);
QTLIBC_API void QDateTimeEdit_SetDisplayFormat(QDateTimeEdit* self, libqt_string format);
QTLIBC_API bool QDateTimeEdit_CalendarPopup(const QDateTimeEdit* self);
QTLIBC_API void QDateTimeEdit_SetCalendarPopup(QDateTimeEdit* self, bool enable);
QTLIBC_API int QDateTimeEdit_TimeSpec(const QDateTimeEdit* self);
QTLIBC_API void QDateTimeEdit_SetTimeSpec(QDateTimeEdit* self, int spec);
QTLIBC_API QSize* QDateTimeEdit_SizeHint(const QDateTimeEdit* self);
QTLIBC_API void QDateTimeEdit_OnSizeHint(const QDateTimeEdit* self, intptr_t slot);
QTLIBC_API QSize* QDateTimeEdit_QBaseSizeHint(const QDateTimeEdit* self);
QTLIBC_API void QDateTimeEdit_Clear(QDateTimeEdit* self);
QTLIBC_API void QDateTimeEdit_OnClear(QDateTimeEdit* self, intptr_t slot);
QTLIBC_API void QDateTimeEdit_QBaseClear(QDateTimeEdit* self);
QTLIBC_API void QDateTimeEdit_StepBy(QDateTimeEdit* self, int steps);
QTLIBC_API void QDateTimeEdit_OnStepBy(QDateTimeEdit* self, intptr_t slot);
QTLIBC_API void QDateTimeEdit_QBaseStepBy(QDateTimeEdit* self, int steps);
QTLIBC_API bool QDateTimeEdit_Event(QDateTimeEdit* self, QEvent* event);
QTLIBC_API void QDateTimeEdit_OnEvent(QDateTimeEdit* self, intptr_t slot);
QTLIBC_API bool QDateTimeEdit_QBaseEvent(QDateTimeEdit* self, QEvent* event);
QTLIBC_API void QDateTimeEdit_DateTimeChanged(QDateTimeEdit* self, QDateTime* dateTime);
void QDateTimeEdit_Connect_DateTimeChanged(QDateTimeEdit* self, intptr_t slot);
QTLIBC_API void QDateTimeEdit_TimeChanged(QDateTimeEdit* self, QTime* time);
void QDateTimeEdit_Connect_TimeChanged(QDateTimeEdit* self, intptr_t slot);
QTLIBC_API void QDateTimeEdit_DateChanged(QDateTimeEdit* self, QDate* date);
void QDateTimeEdit_Connect_DateChanged(QDateTimeEdit* self, intptr_t slot);
QTLIBC_API void QDateTimeEdit_SetDateTime(QDateTimeEdit* self, QDateTime* dateTime);
QTLIBC_API void QDateTimeEdit_SetDate(QDateTimeEdit* self, QDate* date);
QTLIBC_API void QDateTimeEdit_SetTime(QDateTimeEdit* self, QTime* time);
QTLIBC_API void QDateTimeEdit_KeyPressEvent(QDateTimeEdit* self, QKeyEvent* event);
QTLIBC_API void QDateTimeEdit_OnKeyPressEvent(QDateTimeEdit* self, intptr_t slot);
QTLIBC_API void QDateTimeEdit_QBaseKeyPressEvent(QDateTimeEdit* self, QKeyEvent* event);
QTLIBC_API void QDateTimeEdit_WheelEvent(QDateTimeEdit* self, QWheelEvent* event);
QTLIBC_API void QDateTimeEdit_OnWheelEvent(QDateTimeEdit* self, intptr_t slot);
QTLIBC_API void QDateTimeEdit_QBaseWheelEvent(QDateTimeEdit* self, QWheelEvent* event);
QTLIBC_API void QDateTimeEdit_FocusInEvent(QDateTimeEdit* self, QFocusEvent* event);
QTLIBC_API void QDateTimeEdit_OnFocusInEvent(QDateTimeEdit* self, intptr_t slot);
QTLIBC_API void QDateTimeEdit_QBaseFocusInEvent(QDateTimeEdit* self, QFocusEvent* event);
QTLIBC_API bool QDateTimeEdit_FocusNextPrevChild(QDateTimeEdit* self, bool next);
QTLIBC_API void QDateTimeEdit_OnFocusNextPrevChild(QDateTimeEdit* self, intptr_t slot);
QTLIBC_API bool QDateTimeEdit_QBaseFocusNextPrevChild(QDateTimeEdit* self, bool next);
QTLIBC_API int QDateTimeEdit_Validate(const QDateTimeEdit* self, libqt_string input, int* pos);
QTLIBC_API void QDateTimeEdit_OnValidate(const QDateTimeEdit* self, intptr_t slot);
QTLIBC_API int QDateTimeEdit_QBaseValidate(const QDateTimeEdit* self, libqt_string input, int* pos);
QTLIBC_API void QDateTimeEdit_Fixup(const QDateTimeEdit* self, libqt_string input);
QTLIBC_API void QDateTimeEdit_OnFixup(const QDateTimeEdit* self, intptr_t slot);
QTLIBC_API void QDateTimeEdit_QBaseFixup(const QDateTimeEdit* self, libqt_string input);
QTLIBC_API QDateTime* QDateTimeEdit_DateTimeFromText(const QDateTimeEdit* self, libqt_string text);
QTLIBC_API void QDateTimeEdit_OnDateTimeFromText(const QDateTimeEdit* self, intptr_t slot);
QTLIBC_API QDateTime* QDateTimeEdit_QBaseDateTimeFromText(const QDateTimeEdit* self, libqt_string text);
QTLIBC_API libqt_string QDateTimeEdit_TextFromDateTime(const QDateTimeEdit* self, QDateTime* dt);
QTLIBC_API void QDateTimeEdit_OnTextFromDateTime(const QDateTimeEdit* self, intptr_t slot);
QTLIBC_API libqt_string QDateTimeEdit_QBaseTextFromDateTime(const QDateTimeEdit* self, QDateTime* dt);
QTLIBC_API int QDateTimeEdit_StepEnabled(const QDateTimeEdit* self);
QTLIBC_API void QDateTimeEdit_OnStepEnabled(const QDateTimeEdit* self, intptr_t slot);
QTLIBC_API int QDateTimeEdit_QBaseStepEnabled(const QDateTimeEdit* self);
QTLIBC_API void QDateTimeEdit_MousePressEvent(QDateTimeEdit* self, QMouseEvent* event);
QTLIBC_API void QDateTimeEdit_OnMousePressEvent(QDateTimeEdit* self, intptr_t slot);
QTLIBC_API void QDateTimeEdit_QBaseMousePressEvent(QDateTimeEdit* self, QMouseEvent* event);
QTLIBC_API void QDateTimeEdit_PaintEvent(QDateTimeEdit* self, QPaintEvent* event);
QTLIBC_API void QDateTimeEdit_OnPaintEvent(QDateTimeEdit* self, intptr_t slot);
QTLIBC_API void QDateTimeEdit_QBasePaintEvent(QDateTimeEdit* self, QPaintEvent* event);
QTLIBC_API void QDateTimeEdit_InitStyleOption(const QDateTimeEdit* self, QStyleOptionSpinBox* option);
QTLIBC_API void QDateTimeEdit_OnInitStyleOption(const QDateTimeEdit* self, intptr_t slot);
QTLIBC_API void QDateTimeEdit_QBaseInitStyleOption(const QDateTimeEdit* self, QStyleOptionSpinBox* option);
QTLIBC_API libqt_string QDateTimeEdit_Tr2(const char* s, const char* c);
QTLIBC_API libqt_string QDateTimeEdit_Tr3(const char* s, const char* c, int n);
QTLIBC_API QSize* QDateTimeEdit_MinimumSizeHint(const QDateTimeEdit* self);
QTLIBC_API void QDateTimeEdit_OnMinimumSizeHint(const QDateTimeEdit* self, intptr_t slot);
QTLIBC_API QSize* QDateTimeEdit_QBaseMinimumSizeHint(const QDateTimeEdit* self);
QTLIBC_API QVariant* QDateTimeEdit_InputMethodQuery(const QDateTimeEdit* self, int param1);
QTLIBC_API void QDateTimeEdit_OnInputMethodQuery(const QDateTimeEdit* self, intptr_t slot);
QTLIBC_API QVariant* QDateTimeEdit_QBaseInputMethodQuery(const QDateTimeEdit* self, int param1);
QTLIBC_API void QDateTimeEdit_ResizeEvent(QDateTimeEdit* self, QResizeEvent* event);
QTLIBC_API void QDateTimeEdit_OnResizeEvent(QDateTimeEdit* self, intptr_t slot);
QTLIBC_API void QDateTimeEdit_QBaseResizeEvent(QDateTimeEdit* self, QResizeEvent* event);
QTLIBC_API void QDateTimeEdit_KeyReleaseEvent(QDateTimeEdit* self, QKeyEvent* event);
QTLIBC_API void QDateTimeEdit_OnKeyReleaseEvent(QDateTimeEdit* self, intptr_t slot);
QTLIBC_API void QDateTimeEdit_QBaseKeyReleaseEvent(QDateTimeEdit* self, QKeyEvent* event);
QTLIBC_API void QDateTimeEdit_FocusOutEvent(QDateTimeEdit* self, QFocusEvent* event);
QTLIBC_API void QDateTimeEdit_OnFocusOutEvent(QDateTimeEdit* self, intptr_t slot);
QTLIBC_API void QDateTimeEdit_QBaseFocusOutEvent(QDateTimeEdit* self, QFocusEvent* event);
QTLIBC_API void QDateTimeEdit_ContextMenuEvent(QDateTimeEdit* self, QContextMenuEvent* event);
QTLIBC_API void QDateTimeEdit_OnContextMenuEvent(QDateTimeEdit* self, intptr_t slot);
QTLIBC_API void QDateTimeEdit_QBaseContextMenuEvent(QDateTimeEdit* self, QContextMenuEvent* event);
QTLIBC_API void QDateTimeEdit_ChangeEvent(QDateTimeEdit* self, QEvent* event);
QTLIBC_API void QDateTimeEdit_OnChangeEvent(QDateTimeEdit* self, intptr_t slot);
QTLIBC_API void QDateTimeEdit_QBaseChangeEvent(QDateTimeEdit* self, QEvent* event);
QTLIBC_API void QDateTimeEdit_CloseEvent(QDateTimeEdit* self, QCloseEvent* event);
QTLIBC_API void QDateTimeEdit_OnCloseEvent(QDateTimeEdit* self, intptr_t slot);
QTLIBC_API void QDateTimeEdit_QBaseCloseEvent(QDateTimeEdit* self, QCloseEvent* event);
QTLIBC_API void QDateTimeEdit_HideEvent(QDateTimeEdit* self, QHideEvent* event);
QTLIBC_API void QDateTimeEdit_OnHideEvent(QDateTimeEdit* self, intptr_t slot);
QTLIBC_API void QDateTimeEdit_QBaseHideEvent(QDateTimeEdit* self, QHideEvent* event);
QTLIBC_API void QDateTimeEdit_MouseReleaseEvent(QDateTimeEdit* self, QMouseEvent* event);
QTLIBC_API void QDateTimeEdit_OnMouseReleaseEvent(QDateTimeEdit* self, intptr_t slot);
QTLIBC_API void QDateTimeEdit_QBaseMouseReleaseEvent(QDateTimeEdit* self, QMouseEvent* event);
QTLIBC_API void QDateTimeEdit_MouseMoveEvent(QDateTimeEdit* self, QMouseEvent* event);
QTLIBC_API void QDateTimeEdit_OnMouseMoveEvent(QDateTimeEdit* self, intptr_t slot);
QTLIBC_API void QDateTimeEdit_QBaseMouseMoveEvent(QDateTimeEdit* self, QMouseEvent* event);
QTLIBC_API void QDateTimeEdit_TimerEvent(QDateTimeEdit* self, QTimerEvent* event);
QTLIBC_API void QDateTimeEdit_OnTimerEvent(QDateTimeEdit* self, intptr_t slot);
QTLIBC_API void QDateTimeEdit_QBaseTimerEvent(QDateTimeEdit* self, QTimerEvent* event);
QTLIBC_API void QDateTimeEdit_ShowEvent(QDateTimeEdit* self, QShowEvent* event);
QTLIBC_API void QDateTimeEdit_OnShowEvent(QDateTimeEdit* self, intptr_t slot);
QTLIBC_API void QDateTimeEdit_QBaseShowEvent(QDateTimeEdit* self, QShowEvent* event);
QTLIBC_API int QDateTimeEdit_DevType(const QDateTimeEdit* self);
QTLIBC_API void QDateTimeEdit_OnDevType(const QDateTimeEdit* self, intptr_t slot);
QTLIBC_API int QDateTimeEdit_QBaseDevType(const QDateTimeEdit* self);
QTLIBC_API void QDateTimeEdit_SetVisible(QDateTimeEdit* self, bool visible);
QTLIBC_API void QDateTimeEdit_OnSetVisible(QDateTimeEdit* self, intptr_t slot);
QTLIBC_API void QDateTimeEdit_QBaseSetVisible(QDateTimeEdit* self, bool visible);
QTLIBC_API int QDateTimeEdit_HeightForWidth(const QDateTimeEdit* self, int param1);
QTLIBC_API void QDateTimeEdit_OnHeightForWidth(const QDateTimeEdit* self, intptr_t slot);
QTLIBC_API int QDateTimeEdit_QBaseHeightForWidth(const QDateTimeEdit* self, int param1);
QTLIBC_API bool QDateTimeEdit_HasHeightForWidth(const QDateTimeEdit* self);
QTLIBC_API void QDateTimeEdit_OnHasHeightForWidth(const QDateTimeEdit* self, intptr_t slot);
QTLIBC_API bool QDateTimeEdit_QBaseHasHeightForWidth(const QDateTimeEdit* self);
QTLIBC_API QPaintEngine* QDateTimeEdit_PaintEngine(const QDateTimeEdit* self);
QTLIBC_API void QDateTimeEdit_OnPaintEngine(const QDateTimeEdit* self, intptr_t slot);
QTLIBC_API QPaintEngine* QDateTimeEdit_QBasePaintEngine(const QDateTimeEdit* self);
QTLIBC_API void QDateTimeEdit_MouseDoubleClickEvent(QDateTimeEdit* self, QMouseEvent* event);
QTLIBC_API void QDateTimeEdit_OnMouseDoubleClickEvent(QDateTimeEdit* self, intptr_t slot);
QTLIBC_API void QDateTimeEdit_QBaseMouseDoubleClickEvent(QDateTimeEdit* self, QMouseEvent* event);
QTLIBC_API void QDateTimeEdit_EnterEvent(QDateTimeEdit* self, QEnterEvent* event);
QTLIBC_API void QDateTimeEdit_OnEnterEvent(QDateTimeEdit* self, intptr_t slot);
QTLIBC_API void QDateTimeEdit_QBaseEnterEvent(QDateTimeEdit* self, QEnterEvent* event);
QTLIBC_API void QDateTimeEdit_LeaveEvent(QDateTimeEdit* self, QEvent* event);
QTLIBC_API void QDateTimeEdit_OnLeaveEvent(QDateTimeEdit* self, intptr_t slot);
QTLIBC_API void QDateTimeEdit_QBaseLeaveEvent(QDateTimeEdit* self, QEvent* event);
QTLIBC_API void QDateTimeEdit_MoveEvent(QDateTimeEdit* self, QMoveEvent* event);
QTLIBC_API void QDateTimeEdit_OnMoveEvent(QDateTimeEdit* self, intptr_t slot);
QTLIBC_API void QDateTimeEdit_QBaseMoveEvent(QDateTimeEdit* self, QMoveEvent* event);
QTLIBC_API void QDateTimeEdit_TabletEvent(QDateTimeEdit* self, QTabletEvent* event);
QTLIBC_API void QDateTimeEdit_OnTabletEvent(QDateTimeEdit* self, intptr_t slot);
QTLIBC_API void QDateTimeEdit_QBaseTabletEvent(QDateTimeEdit* self, QTabletEvent* event);
QTLIBC_API void QDateTimeEdit_ActionEvent(QDateTimeEdit* self, QActionEvent* event);
QTLIBC_API void QDateTimeEdit_OnActionEvent(QDateTimeEdit* self, intptr_t slot);
QTLIBC_API void QDateTimeEdit_QBaseActionEvent(QDateTimeEdit* self, QActionEvent* event);
QTLIBC_API void QDateTimeEdit_DragEnterEvent(QDateTimeEdit* self, QDragEnterEvent* event);
QTLIBC_API void QDateTimeEdit_OnDragEnterEvent(QDateTimeEdit* self, intptr_t slot);
QTLIBC_API void QDateTimeEdit_QBaseDragEnterEvent(QDateTimeEdit* self, QDragEnterEvent* event);
QTLIBC_API void QDateTimeEdit_DragMoveEvent(QDateTimeEdit* self, QDragMoveEvent* event);
QTLIBC_API void QDateTimeEdit_OnDragMoveEvent(QDateTimeEdit* self, intptr_t slot);
QTLIBC_API void QDateTimeEdit_QBaseDragMoveEvent(QDateTimeEdit* self, QDragMoveEvent* event);
QTLIBC_API void QDateTimeEdit_DragLeaveEvent(QDateTimeEdit* self, QDragLeaveEvent* event);
QTLIBC_API void QDateTimeEdit_OnDragLeaveEvent(QDateTimeEdit* self, intptr_t slot);
QTLIBC_API void QDateTimeEdit_QBaseDragLeaveEvent(QDateTimeEdit* self, QDragLeaveEvent* event);
QTLIBC_API void QDateTimeEdit_DropEvent(QDateTimeEdit* self, QDropEvent* event);
QTLIBC_API void QDateTimeEdit_OnDropEvent(QDateTimeEdit* self, intptr_t slot);
QTLIBC_API void QDateTimeEdit_QBaseDropEvent(QDateTimeEdit* self, QDropEvent* event);
QTLIBC_API bool QDateTimeEdit_NativeEvent(QDateTimeEdit* self, libqt_string eventType, void* message, intptr_t* result);
QTLIBC_API void QDateTimeEdit_OnNativeEvent(QDateTimeEdit* self, intptr_t slot);
QTLIBC_API bool QDateTimeEdit_QBaseNativeEvent(QDateTimeEdit* self, libqt_string eventType, void* message, intptr_t* result);
QTLIBC_API void QDateTimeEdit_InputMethodEvent(QDateTimeEdit* self, QInputMethodEvent* param1);
QTLIBC_API void QDateTimeEdit_OnInputMethodEvent(QDateTimeEdit* self, intptr_t slot);
QTLIBC_API void QDateTimeEdit_QBaseInputMethodEvent(QDateTimeEdit* self, QInputMethodEvent* param1);
QTLIBC_API bool QDateTimeEdit_EventFilter(QDateTimeEdit* self, QObject* watched, QEvent* event);
QTLIBC_API void QDateTimeEdit_OnEventFilter(QDateTimeEdit* self, intptr_t slot);
QTLIBC_API bool QDateTimeEdit_QBaseEventFilter(QDateTimeEdit* self, QObject* watched, QEvent* event);
QTLIBC_API void QDateTimeEdit_ChildEvent(QDateTimeEdit* self, QChildEvent* event);
QTLIBC_API void QDateTimeEdit_OnChildEvent(QDateTimeEdit* self, intptr_t slot);
QTLIBC_API void QDateTimeEdit_QBaseChildEvent(QDateTimeEdit* self, QChildEvent* event);
QTLIBC_API void QDateTimeEdit_CustomEvent(QDateTimeEdit* self, QEvent* event);
QTLIBC_API void QDateTimeEdit_OnCustomEvent(QDateTimeEdit* self, intptr_t slot);
QTLIBC_API void QDateTimeEdit_QBaseCustomEvent(QDateTimeEdit* self, QEvent* event);
QTLIBC_API void QDateTimeEdit_ConnectNotify(QDateTimeEdit* self, QMetaMethod* signal);
QTLIBC_API void QDateTimeEdit_OnConnectNotify(QDateTimeEdit* self, intptr_t slot);
QTLIBC_API void QDateTimeEdit_QBaseConnectNotify(QDateTimeEdit* self, QMetaMethod* signal);
QTLIBC_API void QDateTimeEdit_DisconnectNotify(QDateTimeEdit* self, QMetaMethod* signal);
QTLIBC_API void QDateTimeEdit_OnDisconnectNotify(QDateTimeEdit* self, intptr_t slot);
QTLIBC_API void QDateTimeEdit_QBaseDisconnectNotify(QDateTimeEdit* self, QMetaMethod* signal);
QTLIBC_API int QDateTimeEdit_Metric(const QDateTimeEdit* self, int param1);
QTLIBC_API void QDateTimeEdit_OnMetric(const QDateTimeEdit* self, intptr_t slot);
QTLIBC_API int QDateTimeEdit_QBaseMetric(const QDateTimeEdit* self, int param1);
QTLIBC_API void QDateTimeEdit_InitPainter(const QDateTimeEdit* self, QPainter* painter);
QTLIBC_API void QDateTimeEdit_OnInitPainter(const QDateTimeEdit* self, intptr_t slot);
QTLIBC_API void QDateTimeEdit_QBaseInitPainter(const QDateTimeEdit* self, QPainter* painter);
QTLIBC_API QPaintDevice* QDateTimeEdit_Redirected(const QDateTimeEdit* self, QPoint* offset);
QTLIBC_API void QDateTimeEdit_OnRedirected(const QDateTimeEdit* self, intptr_t slot);
QTLIBC_API QPaintDevice* QDateTimeEdit_QBaseRedirected(const QDateTimeEdit* self, QPoint* offset);
QTLIBC_API QPainter* QDateTimeEdit_SharedPainter(const QDateTimeEdit* self);
QTLIBC_API void QDateTimeEdit_OnSharedPainter(const QDateTimeEdit* self, intptr_t slot);
QTLIBC_API QPainter* QDateTimeEdit_QBaseSharedPainter(const QDateTimeEdit* self);
QTLIBC_API QLineEdit* QDateTimeEdit_LineEdit(const QDateTimeEdit* self);
QTLIBC_API void QDateTimeEdit_OnLineEdit(const QDateTimeEdit* self, intptr_t slot);
QTLIBC_API QLineEdit* QDateTimeEdit_QBaseLineEdit(const QDateTimeEdit* self);
QTLIBC_API void QDateTimeEdit_SetLineEdit(QDateTimeEdit* self, QLineEdit* edit);
QTLIBC_API void QDateTimeEdit_OnSetLineEdit(QDateTimeEdit* self, intptr_t slot);
QTLIBC_API void QDateTimeEdit_QBaseSetLineEdit(QDateTimeEdit* self, QLineEdit* edit);
QTLIBC_API void QDateTimeEdit_UpdateMicroFocus(QDateTimeEdit* self);
QTLIBC_API void QDateTimeEdit_OnUpdateMicroFocus(QDateTimeEdit* self, intptr_t slot);
QTLIBC_API void QDateTimeEdit_QBaseUpdateMicroFocus(QDateTimeEdit* self);
QTLIBC_API void QDateTimeEdit_Create(QDateTimeEdit* self);
QTLIBC_API void QDateTimeEdit_OnCreate(QDateTimeEdit* self, intptr_t slot);
QTLIBC_API void QDateTimeEdit_QBaseCreate(QDateTimeEdit* self);
QTLIBC_API void QDateTimeEdit_Destroy(QDateTimeEdit* self);
QTLIBC_API void QDateTimeEdit_OnDestroy(QDateTimeEdit* self, intptr_t slot);
QTLIBC_API void QDateTimeEdit_QBaseDestroy(QDateTimeEdit* self);
QTLIBC_API bool QDateTimeEdit_FocusNextChild(QDateTimeEdit* self);
QTLIBC_API void QDateTimeEdit_OnFocusNextChild(QDateTimeEdit* self, intptr_t slot);
QTLIBC_API bool QDateTimeEdit_QBaseFocusNextChild(QDateTimeEdit* self);
QTLIBC_API bool QDateTimeEdit_FocusPreviousChild(QDateTimeEdit* self);
QTLIBC_API void QDateTimeEdit_OnFocusPreviousChild(QDateTimeEdit* self, intptr_t slot);
QTLIBC_API bool QDateTimeEdit_QBaseFocusPreviousChild(QDateTimeEdit* self);
QTLIBC_API QObject* QDateTimeEdit_Sender(const QDateTimeEdit* self);
QTLIBC_API void QDateTimeEdit_OnSender(const QDateTimeEdit* self, intptr_t slot);
QTLIBC_API QObject* QDateTimeEdit_QBaseSender(const QDateTimeEdit* self);
QTLIBC_API int QDateTimeEdit_SenderSignalIndex(const QDateTimeEdit* self);
QTLIBC_API void QDateTimeEdit_OnSenderSignalIndex(const QDateTimeEdit* self, intptr_t slot);
QTLIBC_API int QDateTimeEdit_QBaseSenderSignalIndex(const QDateTimeEdit* self);
QTLIBC_API int QDateTimeEdit_Receivers(const QDateTimeEdit* self, const char* signal);
QTLIBC_API void QDateTimeEdit_OnReceivers(const QDateTimeEdit* self, intptr_t slot);
QTLIBC_API int QDateTimeEdit_QBaseReceivers(const QDateTimeEdit* self, const char* signal);
QTLIBC_API bool QDateTimeEdit_IsSignalConnected(const QDateTimeEdit* self, QMetaMethod* signal);
QTLIBC_API void QDateTimeEdit_OnIsSignalConnected(const QDateTimeEdit* self, intptr_t slot);
QTLIBC_API bool QDateTimeEdit_QBaseIsSignalConnected(const QDateTimeEdit* self, QMetaMethod* signal);
QTLIBC_API void QDateTimeEdit_Delete(QDateTimeEdit* self);

QTLIBC_API QTimeEdit* QTimeEdit_new(QWidget* parent);
QTLIBC_API QTimeEdit* QTimeEdit_new2();
QTLIBC_API QTimeEdit* QTimeEdit_new3(QTime* time);
QTLIBC_API QTimeEdit* QTimeEdit_new4(QTime* time, QWidget* parent);
QTLIBC_API QMetaObject* QTimeEdit_MetaObject(const QTimeEdit* self);
QTLIBC_API void* QTimeEdit_Metacast(QTimeEdit* self, const char* param1);
QTLIBC_API int QTimeEdit_Metacall(QTimeEdit* self, int param1, int param2, void** param3);
QTLIBC_API void QTimeEdit_OnMetacall(QTimeEdit* self, intptr_t slot);
QTLIBC_API int QTimeEdit_QBaseMetacall(QTimeEdit* self, int param1, int param2, void** param3);
QTLIBC_API libqt_string QTimeEdit_Tr(const char* s);
QTLIBC_API void QTimeEdit_UserTimeChanged(QTimeEdit* self, QTime* time);
void QTimeEdit_Connect_UserTimeChanged(QTimeEdit* self, intptr_t slot);
QTLIBC_API libqt_string QTimeEdit_Tr2(const char* s, const char* c);
QTLIBC_API libqt_string QTimeEdit_Tr3(const char* s, const char* c, int n);
QTLIBC_API QSize* QTimeEdit_SizeHint(const QTimeEdit* self);
QTLIBC_API void QTimeEdit_OnSizeHint(const QTimeEdit* self, intptr_t slot);
QTLIBC_API QSize* QTimeEdit_QBaseSizeHint(const QTimeEdit* self);
QTLIBC_API void QTimeEdit_Clear(QTimeEdit* self);
QTLIBC_API void QTimeEdit_OnClear(QTimeEdit* self, intptr_t slot);
QTLIBC_API void QTimeEdit_QBaseClear(QTimeEdit* self);
QTLIBC_API void QTimeEdit_StepBy(QTimeEdit* self, int steps);
QTLIBC_API void QTimeEdit_OnStepBy(QTimeEdit* self, intptr_t slot);
QTLIBC_API void QTimeEdit_QBaseStepBy(QTimeEdit* self, int steps);
QTLIBC_API bool QTimeEdit_Event(QTimeEdit* self, QEvent* event);
QTLIBC_API void QTimeEdit_OnEvent(QTimeEdit* self, intptr_t slot);
QTLIBC_API bool QTimeEdit_QBaseEvent(QTimeEdit* self, QEvent* event);
QTLIBC_API void QTimeEdit_KeyPressEvent(QTimeEdit* self, QKeyEvent* event);
QTLIBC_API void QTimeEdit_OnKeyPressEvent(QTimeEdit* self, intptr_t slot);
QTLIBC_API void QTimeEdit_QBaseKeyPressEvent(QTimeEdit* self, QKeyEvent* event);
QTLIBC_API void QTimeEdit_WheelEvent(QTimeEdit* self, QWheelEvent* event);
QTLIBC_API void QTimeEdit_OnWheelEvent(QTimeEdit* self, intptr_t slot);
QTLIBC_API void QTimeEdit_QBaseWheelEvent(QTimeEdit* self, QWheelEvent* event);
QTLIBC_API void QTimeEdit_FocusInEvent(QTimeEdit* self, QFocusEvent* event);
QTLIBC_API void QTimeEdit_OnFocusInEvent(QTimeEdit* self, intptr_t slot);
QTLIBC_API void QTimeEdit_QBaseFocusInEvent(QTimeEdit* self, QFocusEvent* event);
QTLIBC_API bool QTimeEdit_FocusNextPrevChild(QTimeEdit* self, bool next);
QTLIBC_API void QTimeEdit_OnFocusNextPrevChild(QTimeEdit* self, intptr_t slot);
QTLIBC_API bool QTimeEdit_QBaseFocusNextPrevChild(QTimeEdit* self, bool next);
QTLIBC_API void QTimeEdit_MousePressEvent(QTimeEdit* self, QMouseEvent* event);
QTLIBC_API void QTimeEdit_OnMousePressEvent(QTimeEdit* self, intptr_t slot);
QTLIBC_API void QTimeEdit_QBaseMousePressEvent(QTimeEdit* self, QMouseEvent* event);
QTLIBC_API void QTimeEdit_PaintEvent(QTimeEdit* self, QPaintEvent* event);
QTLIBC_API void QTimeEdit_OnPaintEvent(QTimeEdit* self, intptr_t slot);
QTLIBC_API void QTimeEdit_QBasePaintEvent(QTimeEdit* self, QPaintEvent* event);
QTLIBC_API QSize* QTimeEdit_MinimumSizeHint(const QTimeEdit* self);
QTLIBC_API void QTimeEdit_OnMinimumSizeHint(const QTimeEdit* self, intptr_t slot);
QTLIBC_API QSize* QTimeEdit_QBaseMinimumSizeHint(const QTimeEdit* self);
QTLIBC_API QVariant* QTimeEdit_InputMethodQuery(const QTimeEdit* self, int param1);
QTLIBC_API void QTimeEdit_OnInputMethodQuery(const QTimeEdit* self, intptr_t slot);
QTLIBC_API QVariant* QTimeEdit_QBaseInputMethodQuery(const QTimeEdit* self, int param1);
QTLIBC_API int QTimeEdit_Validate(const QTimeEdit* self, libqt_string input, int* pos);
QTLIBC_API void QTimeEdit_OnValidate(const QTimeEdit* self, intptr_t slot);
QTLIBC_API int QTimeEdit_QBaseValidate(const QTimeEdit* self, libqt_string input, int* pos);
QTLIBC_API void QTimeEdit_Fixup(const QTimeEdit* self, libqt_string input);
QTLIBC_API void QTimeEdit_OnFixup(const QTimeEdit* self, intptr_t slot);
QTLIBC_API void QTimeEdit_QBaseFixup(const QTimeEdit* self, libqt_string input);
QTLIBC_API void QTimeEdit_ResizeEvent(QTimeEdit* self, QResizeEvent* event);
QTLIBC_API void QTimeEdit_OnResizeEvent(QTimeEdit* self, intptr_t slot);
QTLIBC_API void QTimeEdit_QBaseResizeEvent(QTimeEdit* self, QResizeEvent* event);
QTLIBC_API void QTimeEdit_KeyReleaseEvent(QTimeEdit* self, QKeyEvent* event);
QTLIBC_API void QTimeEdit_OnKeyReleaseEvent(QTimeEdit* self, intptr_t slot);
QTLIBC_API void QTimeEdit_QBaseKeyReleaseEvent(QTimeEdit* self, QKeyEvent* event);
QTLIBC_API void QTimeEdit_FocusOutEvent(QTimeEdit* self, QFocusEvent* event);
QTLIBC_API void QTimeEdit_OnFocusOutEvent(QTimeEdit* self, intptr_t slot);
QTLIBC_API void QTimeEdit_QBaseFocusOutEvent(QTimeEdit* self, QFocusEvent* event);
QTLIBC_API void QTimeEdit_ContextMenuEvent(QTimeEdit* self, QContextMenuEvent* event);
QTLIBC_API void QTimeEdit_OnContextMenuEvent(QTimeEdit* self, intptr_t slot);
QTLIBC_API void QTimeEdit_QBaseContextMenuEvent(QTimeEdit* self, QContextMenuEvent* event);
QTLIBC_API void QTimeEdit_ChangeEvent(QTimeEdit* self, QEvent* event);
QTLIBC_API void QTimeEdit_OnChangeEvent(QTimeEdit* self, intptr_t slot);
QTLIBC_API void QTimeEdit_QBaseChangeEvent(QTimeEdit* self, QEvent* event);
QTLIBC_API void QTimeEdit_CloseEvent(QTimeEdit* self, QCloseEvent* event);
QTLIBC_API void QTimeEdit_OnCloseEvent(QTimeEdit* self, intptr_t slot);
QTLIBC_API void QTimeEdit_QBaseCloseEvent(QTimeEdit* self, QCloseEvent* event);
QTLIBC_API void QTimeEdit_HideEvent(QTimeEdit* self, QHideEvent* event);
QTLIBC_API void QTimeEdit_OnHideEvent(QTimeEdit* self, intptr_t slot);
QTLIBC_API void QTimeEdit_QBaseHideEvent(QTimeEdit* self, QHideEvent* event);
QTLIBC_API void QTimeEdit_MouseReleaseEvent(QTimeEdit* self, QMouseEvent* event);
QTLIBC_API void QTimeEdit_OnMouseReleaseEvent(QTimeEdit* self, intptr_t slot);
QTLIBC_API void QTimeEdit_QBaseMouseReleaseEvent(QTimeEdit* self, QMouseEvent* event);
QTLIBC_API void QTimeEdit_MouseMoveEvent(QTimeEdit* self, QMouseEvent* event);
QTLIBC_API void QTimeEdit_OnMouseMoveEvent(QTimeEdit* self, intptr_t slot);
QTLIBC_API void QTimeEdit_QBaseMouseMoveEvent(QTimeEdit* self, QMouseEvent* event);
QTLIBC_API void QTimeEdit_TimerEvent(QTimeEdit* self, QTimerEvent* event);
QTLIBC_API void QTimeEdit_OnTimerEvent(QTimeEdit* self, intptr_t slot);
QTLIBC_API void QTimeEdit_QBaseTimerEvent(QTimeEdit* self, QTimerEvent* event);
QTLIBC_API void QTimeEdit_ShowEvent(QTimeEdit* self, QShowEvent* event);
QTLIBC_API void QTimeEdit_OnShowEvent(QTimeEdit* self, intptr_t slot);
QTLIBC_API void QTimeEdit_QBaseShowEvent(QTimeEdit* self, QShowEvent* event);
QTLIBC_API int QTimeEdit_DevType(const QTimeEdit* self);
QTLIBC_API void QTimeEdit_OnDevType(const QTimeEdit* self, intptr_t slot);
QTLIBC_API int QTimeEdit_QBaseDevType(const QTimeEdit* self);
QTLIBC_API void QTimeEdit_SetVisible(QTimeEdit* self, bool visible);
QTLIBC_API void QTimeEdit_OnSetVisible(QTimeEdit* self, intptr_t slot);
QTLIBC_API void QTimeEdit_QBaseSetVisible(QTimeEdit* self, bool visible);
QTLIBC_API int QTimeEdit_HeightForWidth(const QTimeEdit* self, int param1);
QTLIBC_API void QTimeEdit_OnHeightForWidth(const QTimeEdit* self, intptr_t slot);
QTLIBC_API int QTimeEdit_QBaseHeightForWidth(const QTimeEdit* self, int param1);
QTLIBC_API bool QTimeEdit_HasHeightForWidth(const QTimeEdit* self);
QTLIBC_API void QTimeEdit_OnHasHeightForWidth(const QTimeEdit* self, intptr_t slot);
QTLIBC_API bool QTimeEdit_QBaseHasHeightForWidth(const QTimeEdit* self);
QTLIBC_API QPaintEngine* QTimeEdit_PaintEngine(const QTimeEdit* self);
QTLIBC_API void QTimeEdit_OnPaintEngine(const QTimeEdit* self, intptr_t slot);
QTLIBC_API QPaintEngine* QTimeEdit_QBasePaintEngine(const QTimeEdit* self);
QTLIBC_API void QTimeEdit_MouseDoubleClickEvent(QTimeEdit* self, QMouseEvent* event);
QTLIBC_API void QTimeEdit_OnMouseDoubleClickEvent(QTimeEdit* self, intptr_t slot);
QTLIBC_API void QTimeEdit_QBaseMouseDoubleClickEvent(QTimeEdit* self, QMouseEvent* event);
QTLIBC_API void QTimeEdit_EnterEvent(QTimeEdit* self, QEnterEvent* event);
QTLIBC_API void QTimeEdit_OnEnterEvent(QTimeEdit* self, intptr_t slot);
QTLIBC_API void QTimeEdit_QBaseEnterEvent(QTimeEdit* self, QEnterEvent* event);
QTLIBC_API void QTimeEdit_LeaveEvent(QTimeEdit* self, QEvent* event);
QTLIBC_API void QTimeEdit_OnLeaveEvent(QTimeEdit* self, intptr_t slot);
QTLIBC_API void QTimeEdit_QBaseLeaveEvent(QTimeEdit* self, QEvent* event);
QTLIBC_API void QTimeEdit_MoveEvent(QTimeEdit* self, QMoveEvent* event);
QTLIBC_API void QTimeEdit_OnMoveEvent(QTimeEdit* self, intptr_t slot);
QTLIBC_API void QTimeEdit_QBaseMoveEvent(QTimeEdit* self, QMoveEvent* event);
QTLIBC_API void QTimeEdit_TabletEvent(QTimeEdit* self, QTabletEvent* event);
QTLIBC_API void QTimeEdit_OnTabletEvent(QTimeEdit* self, intptr_t slot);
QTLIBC_API void QTimeEdit_QBaseTabletEvent(QTimeEdit* self, QTabletEvent* event);
QTLIBC_API void QTimeEdit_ActionEvent(QTimeEdit* self, QActionEvent* event);
QTLIBC_API void QTimeEdit_OnActionEvent(QTimeEdit* self, intptr_t slot);
QTLIBC_API void QTimeEdit_QBaseActionEvent(QTimeEdit* self, QActionEvent* event);
QTLIBC_API void QTimeEdit_DragEnterEvent(QTimeEdit* self, QDragEnterEvent* event);
QTLIBC_API void QTimeEdit_OnDragEnterEvent(QTimeEdit* self, intptr_t slot);
QTLIBC_API void QTimeEdit_QBaseDragEnterEvent(QTimeEdit* self, QDragEnterEvent* event);
QTLIBC_API void QTimeEdit_DragMoveEvent(QTimeEdit* self, QDragMoveEvent* event);
QTLIBC_API void QTimeEdit_OnDragMoveEvent(QTimeEdit* self, intptr_t slot);
QTLIBC_API void QTimeEdit_QBaseDragMoveEvent(QTimeEdit* self, QDragMoveEvent* event);
QTLIBC_API void QTimeEdit_DragLeaveEvent(QTimeEdit* self, QDragLeaveEvent* event);
QTLIBC_API void QTimeEdit_OnDragLeaveEvent(QTimeEdit* self, intptr_t slot);
QTLIBC_API void QTimeEdit_QBaseDragLeaveEvent(QTimeEdit* self, QDragLeaveEvent* event);
QTLIBC_API void QTimeEdit_DropEvent(QTimeEdit* self, QDropEvent* event);
QTLIBC_API void QTimeEdit_OnDropEvent(QTimeEdit* self, intptr_t slot);
QTLIBC_API void QTimeEdit_QBaseDropEvent(QTimeEdit* self, QDropEvent* event);
QTLIBC_API bool QTimeEdit_NativeEvent(QTimeEdit* self, libqt_string eventType, void* message, intptr_t* result);
QTLIBC_API void QTimeEdit_OnNativeEvent(QTimeEdit* self, intptr_t slot);
QTLIBC_API bool QTimeEdit_QBaseNativeEvent(QTimeEdit* self, libqt_string eventType, void* message, intptr_t* result);
QTLIBC_API void QTimeEdit_InputMethodEvent(QTimeEdit* self, QInputMethodEvent* param1);
QTLIBC_API void QTimeEdit_OnInputMethodEvent(QTimeEdit* self, intptr_t slot);
QTLIBC_API void QTimeEdit_QBaseInputMethodEvent(QTimeEdit* self, QInputMethodEvent* param1);
QTLIBC_API bool QTimeEdit_EventFilter(QTimeEdit* self, QObject* watched, QEvent* event);
QTLIBC_API void QTimeEdit_OnEventFilter(QTimeEdit* self, intptr_t slot);
QTLIBC_API bool QTimeEdit_QBaseEventFilter(QTimeEdit* self, QObject* watched, QEvent* event);
QTLIBC_API void QTimeEdit_ChildEvent(QTimeEdit* self, QChildEvent* event);
QTLIBC_API void QTimeEdit_OnChildEvent(QTimeEdit* self, intptr_t slot);
QTLIBC_API void QTimeEdit_QBaseChildEvent(QTimeEdit* self, QChildEvent* event);
QTLIBC_API void QTimeEdit_CustomEvent(QTimeEdit* self, QEvent* event);
QTLIBC_API void QTimeEdit_OnCustomEvent(QTimeEdit* self, intptr_t slot);
QTLIBC_API void QTimeEdit_QBaseCustomEvent(QTimeEdit* self, QEvent* event);
QTLIBC_API void QTimeEdit_ConnectNotify(QTimeEdit* self, QMetaMethod* signal);
QTLIBC_API void QTimeEdit_OnConnectNotify(QTimeEdit* self, intptr_t slot);
QTLIBC_API void QTimeEdit_QBaseConnectNotify(QTimeEdit* self, QMetaMethod* signal);
QTLIBC_API void QTimeEdit_DisconnectNotify(QTimeEdit* self, QMetaMethod* signal);
QTLIBC_API void QTimeEdit_OnDisconnectNotify(QTimeEdit* self, intptr_t slot);
QTLIBC_API void QTimeEdit_QBaseDisconnectNotify(QTimeEdit* self, QMetaMethod* signal);
QTLIBC_API QDateTime* QTimeEdit_DateTimeFromText(const QTimeEdit* self, libqt_string text);
QTLIBC_API void QTimeEdit_OnDateTimeFromText(const QTimeEdit* self, intptr_t slot);
QTLIBC_API QDateTime* QTimeEdit_QBaseDateTimeFromText(const QTimeEdit* self, libqt_string text);
QTLIBC_API libqt_string QTimeEdit_TextFromDateTime(const QTimeEdit* self, QDateTime* dt);
QTLIBC_API void QTimeEdit_OnTextFromDateTime(const QTimeEdit* self, intptr_t slot);
QTLIBC_API libqt_string QTimeEdit_QBaseTextFromDateTime(const QTimeEdit* self, QDateTime* dt);
QTLIBC_API int QTimeEdit_StepEnabled(const QTimeEdit* self);
QTLIBC_API void QTimeEdit_OnStepEnabled(const QTimeEdit* self, intptr_t slot);
QTLIBC_API int QTimeEdit_QBaseStepEnabled(const QTimeEdit* self);
QTLIBC_API void QTimeEdit_InitStyleOption(const QTimeEdit* self, QStyleOptionSpinBox* option);
QTLIBC_API void QTimeEdit_OnInitStyleOption(const QTimeEdit* self, intptr_t slot);
QTLIBC_API void QTimeEdit_QBaseInitStyleOption(const QTimeEdit* self, QStyleOptionSpinBox* option);
QTLIBC_API int QTimeEdit_Metric(const QTimeEdit* self, int param1);
QTLIBC_API void QTimeEdit_OnMetric(const QTimeEdit* self, intptr_t slot);
QTLIBC_API int QTimeEdit_QBaseMetric(const QTimeEdit* self, int param1);
QTLIBC_API void QTimeEdit_InitPainter(const QTimeEdit* self, QPainter* painter);
QTLIBC_API void QTimeEdit_OnInitPainter(const QTimeEdit* self, intptr_t slot);
QTLIBC_API void QTimeEdit_QBaseInitPainter(const QTimeEdit* self, QPainter* painter);
QTLIBC_API QPaintDevice* QTimeEdit_Redirected(const QTimeEdit* self, QPoint* offset);
QTLIBC_API void QTimeEdit_OnRedirected(const QTimeEdit* self, intptr_t slot);
QTLIBC_API QPaintDevice* QTimeEdit_QBaseRedirected(const QTimeEdit* self, QPoint* offset);
QTLIBC_API QPainter* QTimeEdit_SharedPainter(const QTimeEdit* self);
QTLIBC_API void QTimeEdit_OnSharedPainter(const QTimeEdit* self, intptr_t slot);
QTLIBC_API QPainter* QTimeEdit_QBaseSharedPainter(const QTimeEdit* self);
QTLIBC_API QLineEdit* QTimeEdit_LineEdit(const QTimeEdit* self);
QTLIBC_API void QTimeEdit_OnLineEdit(const QTimeEdit* self, intptr_t slot);
QTLIBC_API QLineEdit* QTimeEdit_QBaseLineEdit(const QTimeEdit* self);
QTLIBC_API void QTimeEdit_SetLineEdit(QTimeEdit* self, QLineEdit* edit);
QTLIBC_API void QTimeEdit_OnSetLineEdit(QTimeEdit* self, intptr_t slot);
QTLIBC_API void QTimeEdit_QBaseSetLineEdit(QTimeEdit* self, QLineEdit* edit);
QTLIBC_API void QTimeEdit_UpdateMicroFocus(QTimeEdit* self);
QTLIBC_API void QTimeEdit_OnUpdateMicroFocus(QTimeEdit* self, intptr_t slot);
QTLIBC_API void QTimeEdit_QBaseUpdateMicroFocus(QTimeEdit* self);
QTLIBC_API void QTimeEdit_Create(QTimeEdit* self);
QTLIBC_API void QTimeEdit_OnCreate(QTimeEdit* self, intptr_t slot);
QTLIBC_API void QTimeEdit_QBaseCreate(QTimeEdit* self);
QTLIBC_API void QTimeEdit_Destroy(QTimeEdit* self);
QTLIBC_API void QTimeEdit_OnDestroy(QTimeEdit* self, intptr_t slot);
QTLIBC_API void QTimeEdit_QBaseDestroy(QTimeEdit* self);
QTLIBC_API bool QTimeEdit_FocusNextChild(QTimeEdit* self);
QTLIBC_API void QTimeEdit_OnFocusNextChild(QTimeEdit* self, intptr_t slot);
QTLIBC_API bool QTimeEdit_QBaseFocusNextChild(QTimeEdit* self);
QTLIBC_API bool QTimeEdit_FocusPreviousChild(QTimeEdit* self);
QTLIBC_API void QTimeEdit_OnFocusPreviousChild(QTimeEdit* self, intptr_t slot);
QTLIBC_API bool QTimeEdit_QBaseFocusPreviousChild(QTimeEdit* self);
QTLIBC_API QObject* QTimeEdit_Sender(const QTimeEdit* self);
QTLIBC_API void QTimeEdit_OnSender(const QTimeEdit* self, intptr_t slot);
QTLIBC_API QObject* QTimeEdit_QBaseSender(const QTimeEdit* self);
QTLIBC_API int QTimeEdit_SenderSignalIndex(const QTimeEdit* self);
QTLIBC_API void QTimeEdit_OnSenderSignalIndex(const QTimeEdit* self, intptr_t slot);
QTLIBC_API int QTimeEdit_QBaseSenderSignalIndex(const QTimeEdit* self);
QTLIBC_API int QTimeEdit_Receivers(const QTimeEdit* self, const char* signal);
QTLIBC_API void QTimeEdit_OnReceivers(const QTimeEdit* self, intptr_t slot);
QTLIBC_API int QTimeEdit_QBaseReceivers(const QTimeEdit* self, const char* signal);
QTLIBC_API bool QTimeEdit_IsSignalConnected(const QTimeEdit* self, QMetaMethod* signal);
QTLIBC_API void QTimeEdit_OnIsSignalConnected(const QTimeEdit* self, intptr_t slot);
QTLIBC_API bool QTimeEdit_QBaseIsSignalConnected(const QTimeEdit* self, QMetaMethod* signal);
QTLIBC_API void QTimeEdit_Delete(QTimeEdit* self);

QTLIBC_API QDateEdit* QDateEdit_new(QWidget* parent);
QTLIBC_API QDateEdit* QDateEdit_new2();
QTLIBC_API QDateEdit* QDateEdit_new3(QDate* date);
QTLIBC_API QDateEdit* QDateEdit_new4(QDate* date, QWidget* parent);
QTLIBC_API QMetaObject* QDateEdit_MetaObject(const QDateEdit* self);
QTLIBC_API void* QDateEdit_Metacast(QDateEdit* self, const char* param1);
QTLIBC_API int QDateEdit_Metacall(QDateEdit* self, int param1, int param2, void** param3);
QTLIBC_API void QDateEdit_OnMetacall(QDateEdit* self, intptr_t slot);
QTLIBC_API int QDateEdit_QBaseMetacall(QDateEdit* self, int param1, int param2, void** param3);
QTLIBC_API libqt_string QDateEdit_Tr(const char* s);
QTLIBC_API void QDateEdit_UserDateChanged(QDateEdit* self, QDate* date);
void QDateEdit_Connect_UserDateChanged(QDateEdit* self, intptr_t slot);
QTLIBC_API libqt_string QDateEdit_Tr2(const char* s, const char* c);
QTLIBC_API libqt_string QDateEdit_Tr3(const char* s, const char* c, int n);
QTLIBC_API QSize* QDateEdit_SizeHint(const QDateEdit* self);
QTLIBC_API void QDateEdit_OnSizeHint(const QDateEdit* self, intptr_t slot);
QTLIBC_API QSize* QDateEdit_QBaseSizeHint(const QDateEdit* self);
QTLIBC_API void QDateEdit_Clear(QDateEdit* self);
QTLIBC_API void QDateEdit_OnClear(QDateEdit* self, intptr_t slot);
QTLIBC_API void QDateEdit_QBaseClear(QDateEdit* self);
QTLIBC_API void QDateEdit_StepBy(QDateEdit* self, int steps);
QTLIBC_API void QDateEdit_OnStepBy(QDateEdit* self, intptr_t slot);
QTLIBC_API void QDateEdit_QBaseStepBy(QDateEdit* self, int steps);
QTLIBC_API bool QDateEdit_Event(QDateEdit* self, QEvent* event);
QTLIBC_API void QDateEdit_OnEvent(QDateEdit* self, intptr_t slot);
QTLIBC_API bool QDateEdit_QBaseEvent(QDateEdit* self, QEvent* event);
QTLIBC_API void QDateEdit_KeyPressEvent(QDateEdit* self, QKeyEvent* event);
QTLIBC_API void QDateEdit_OnKeyPressEvent(QDateEdit* self, intptr_t slot);
QTLIBC_API void QDateEdit_QBaseKeyPressEvent(QDateEdit* self, QKeyEvent* event);
QTLIBC_API void QDateEdit_WheelEvent(QDateEdit* self, QWheelEvent* event);
QTLIBC_API void QDateEdit_OnWheelEvent(QDateEdit* self, intptr_t slot);
QTLIBC_API void QDateEdit_QBaseWheelEvent(QDateEdit* self, QWheelEvent* event);
QTLIBC_API void QDateEdit_FocusInEvent(QDateEdit* self, QFocusEvent* event);
QTLIBC_API void QDateEdit_OnFocusInEvent(QDateEdit* self, intptr_t slot);
QTLIBC_API void QDateEdit_QBaseFocusInEvent(QDateEdit* self, QFocusEvent* event);
QTLIBC_API bool QDateEdit_FocusNextPrevChild(QDateEdit* self, bool next);
QTLIBC_API void QDateEdit_OnFocusNextPrevChild(QDateEdit* self, intptr_t slot);
QTLIBC_API bool QDateEdit_QBaseFocusNextPrevChild(QDateEdit* self, bool next);
QTLIBC_API void QDateEdit_MousePressEvent(QDateEdit* self, QMouseEvent* event);
QTLIBC_API void QDateEdit_OnMousePressEvent(QDateEdit* self, intptr_t slot);
QTLIBC_API void QDateEdit_QBaseMousePressEvent(QDateEdit* self, QMouseEvent* event);
QTLIBC_API void QDateEdit_PaintEvent(QDateEdit* self, QPaintEvent* event);
QTLIBC_API void QDateEdit_OnPaintEvent(QDateEdit* self, intptr_t slot);
QTLIBC_API void QDateEdit_QBasePaintEvent(QDateEdit* self, QPaintEvent* event);
QTLIBC_API QSize* QDateEdit_MinimumSizeHint(const QDateEdit* self);
QTLIBC_API void QDateEdit_OnMinimumSizeHint(const QDateEdit* self, intptr_t slot);
QTLIBC_API QSize* QDateEdit_QBaseMinimumSizeHint(const QDateEdit* self);
QTLIBC_API QVariant* QDateEdit_InputMethodQuery(const QDateEdit* self, int param1);
QTLIBC_API void QDateEdit_OnInputMethodQuery(const QDateEdit* self, intptr_t slot);
QTLIBC_API QVariant* QDateEdit_QBaseInputMethodQuery(const QDateEdit* self, int param1);
QTLIBC_API int QDateEdit_Validate(const QDateEdit* self, libqt_string input, int* pos);
QTLIBC_API void QDateEdit_OnValidate(const QDateEdit* self, intptr_t slot);
QTLIBC_API int QDateEdit_QBaseValidate(const QDateEdit* self, libqt_string input, int* pos);
QTLIBC_API void QDateEdit_Fixup(const QDateEdit* self, libqt_string input);
QTLIBC_API void QDateEdit_OnFixup(const QDateEdit* self, intptr_t slot);
QTLIBC_API void QDateEdit_QBaseFixup(const QDateEdit* self, libqt_string input);
QTLIBC_API void QDateEdit_ResizeEvent(QDateEdit* self, QResizeEvent* event);
QTLIBC_API void QDateEdit_OnResizeEvent(QDateEdit* self, intptr_t slot);
QTLIBC_API void QDateEdit_QBaseResizeEvent(QDateEdit* self, QResizeEvent* event);
QTLIBC_API void QDateEdit_KeyReleaseEvent(QDateEdit* self, QKeyEvent* event);
QTLIBC_API void QDateEdit_OnKeyReleaseEvent(QDateEdit* self, intptr_t slot);
QTLIBC_API void QDateEdit_QBaseKeyReleaseEvent(QDateEdit* self, QKeyEvent* event);
QTLIBC_API void QDateEdit_FocusOutEvent(QDateEdit* self, QFocusEvent* event);
QTLIBC_API void QDateEdit_OnFocusOutEvent(QDateEdit* self, intptr_t slot);
QTLIBC_API void QDateEdit_QBaseFocusOutEvent(QDateEdit* self, QFocusEvent* event);
QTLIBC_API void QDateEdit_ContextMenuEvent(QDateEdit* self, QContextMenuEvent* event);
QTLIBC_API void QDateEdit_OnContextMenuEvent(QDateEdit* self, intptr_t slot);
QTLIBC_API void QDateEdit_QBaseContextMenuEvent(QDateEdit* self, QContextMenuEvent* event);
QTLIBC_API void QDateEdit_ChangeEvent(QDateEdit* self, QEvent* event);
QTLIBC_API void QDateEdit_OnChangeEvent(QDateEdit* self, intptr_t slot);
QTLIBC_API void QDateEdit_QBaseChangeEvent(QDateEdit* self, QEvent* event);
QTLIBC_API void QDateEdit_CloseEvent(QDateEdit* self, QCloseEvent* event);
QTLIBC_API void QDateEdit_OnCloseEvent(QDateEdit* self, intptr_t slot);
QTLIBC_API void QDateEdit_QBaseCloseEvent(QDateEdit* self, QCloseEvent* event);
QTLIBC_API void QDateEdit_HideEvent(QDateEdit* self, QHideEvent* event);
QTLIBC_API void QDateEdit_OnHideEvent(QDateEdit* self, intptr_t slot);
QTLIBC_API void QDateEdit_QBaseHideEvent(QDateEdit* self, QHideEvent* event);
QTLIBC_API void QDateEdit_MouseReleaseEvent(QDateEdit* self, QMouseEvent* event);
QTLIBC_API void QDateEdit_OnMouseReleaseEvent(QDateEdit* self, intptr_t slot);
QTLIBC_API void QDateEdit_QBaseMouseReleaseEvent(QDateEdit* self, QMouseEvent* event);
QTLIBC_API void QDateEdit_MouseMoveEvent(QDateEdit* self, QMouseEvent* event);
QTLIBC_API void QDateEdit_OnMouseMoveEvent(QDateEdit* self, intptr_t slot);
QTLIBC_API void QDateEdit_QBaseMouseMoveEvent(QDateEdit* self, QMouseEvent* event);
QTLIBC_API void QDateEdit_TimerEvent(QDateEdit* self, QTimerEvent* event);
QTLIBC_API void QDateEdit_OnTimerEvent(QDateEdit* self, intptr_t slot);
QTLIBC_API void QDateEdit_QBaseTimerEvent(QDateEdit* self, QTimerEvent* event);
QTLIBC_API void QDateEdit_ShowEvent(QDateEdit* self, QShowEvent* event);
QTLIBC_API void QDateEdit_OnShowEvent(QDateEdit* self, intptr_t slot);
QTLIBC_API void QDateEdit_QBaseShowEvent(QDateEdit* self, QShowEvent* event);
QTLIBC_API int QDateEdit_DevType(const QDateEdit* self);
QTLIBC_API void QDateEdit_OnDevType(const QDateEdit* self, intptr_t slot);
QTLIBC_API int QDateEdit_QBaseDevType(const QDateEdit* self);
QTLIBC_API void QDateEdit_SetVisible(QDateEdit* self, bool visible);
QTLIBC_API void QDateEdit_OnSetVisible(QDateEdit* self, intptr_t slot);
QTLIBC_API void QDateEdit_QBaseSetVisible(QDateEdit* self, bool visible);
QTLIBC_API int QDateEdit_HeightForWidth(const QDateEdit* self, int param1);
QTLIBC_API void QDateEdit_OnHeightForWidth(const QDateEdit* self, intptr_t slot);
QTLIBC_API int QDateEdit_QBaseHeightForWidth(const QDateEdit* self, int param1);
QTLIBC_API bool QDateEdit_HasHeightForWidth(const QDateEdit* self);
QTLIBC_API void QDateEdit_OnHasHeightForWidth(const QDateEdit* self, intptr_t slot);
QTLIBC_API bool QDateEdit_QBaseHasHeightForWidth(const QDateEdit* self);
QTLIBC_API QPaintEngine* QDateEdit_PaintEngine(const QDateEdit* self);
QTLIBC_API void QDateEdit_OnPaintEngine(const QDateEdit* self, intptr_t slot);
QTLIBC_API QPaintEngine* QDateEdit_QBasePaintEngine(const QDateEdit* self);
QTLIBC_API void QDateEdit_MouseDoubleClickEvent(QDateEdit* self, QMouseEvent* event);
QTLIBC_API void QDateEdit_OnMouseDoubleClickEvent(QDateEdit* self, intptr_t slot);
QTLIBC_API void QDateEdit_QBaseMouseDoubleClickEvent(QDateEdit* self, QMouseEvent* event);
QTLIBC_API void QDateEdit_EnterEvent(QDateEdit* self, QEnterEvent* event);
QTLIBC_API void QDateEdit_OnEnterEvent(QDateEdit* self, intptr_t slot);
QTLIBC_API void QDateEdit_QBaseEnterEvent(QDateEdit* self, QEnterEvent* event);
QTLIBC_API void QDateEdit_LeaveEvent(QDateEdit* self, QEvent* event);
QTLIBC_API void QDateEdit_OnLeaveEvent(QDateEdit* self, intptr_t slot);
QTLIBC_API void QDateEdit_QBaseLeaveEvent(QDateEdit* self, QEvent* event);
QTLIBC_API void QDateEdit_MoveEvent(QDateEdit* self, QMoveEvent* event);
QTLIBC_API void QDateEdit_OnMoveEvent(QDateEdit* self, intptr_t slot);
QTLIBC_API void QDateEdit_QBaseMoveEvent(QDateEdit* self, QMoveEvent* event);
QTLIBC_API void QDateEdit_TabletEvent(QDateEdit* self, QTabletEvent* event);
QTLIBC_API void QDateEdit_OnTabletEvent(QDateEdit* self, intptr_t slot);
QTLIBC_API void QDateEdit_QBaseTabletEvent(QDateEdit* self, QTabletEvent* event);
QTLIBC_API void QDateEdit_ActionEvent(QDateEdit* self, QActionEvent* event);
QTLIBC_API void QDateEdit_OnActionEvent(QDateEdit* self, intptr_t slot);
QTLIBC_API void QDateEdit_QBaseActionEvent(QDateEdit* self, QActionEvent* event);
QTLIBC_API void QDateEdit_DragEnterEvent(QDateEdit* self, QDragEnterEvent* event);
QTLIBC_API void QDateEdit_OnDragEnterEvent(QDateEdit* self, intptr_t slot);
QTLIBC_API void QDateEdit_QBaseDragEnterEvent(QDateEdit* self, QDragEnterEvent* event);
QTLIBC_API void QDateEdit_DragMoveEvent(QDateEdit* self, QDragMoveEvent* event);
QTLIBC_API void QDateEdit_OnDragMoveEvent(QDateEdit* self, intptr_t slot);
QTLIBC_API void QDateEdit_QBaseDragMoveEvent(QDateEdit* self, QDragMoveEvent* event);
QTLIBC_API void QDateEdit_DragLeaveEvent(QDateEdit* self, QDragLeaveEvent* event);
QTLIBC_API void QDateEdit_OnDragLeaveEvent(QDateEdit* self, intptr_t slot);
QTLIBC_API void QDateEdit_QBaseDragLeaveEvent(QDateEdit* self, QDragLeaveEvent* event);
QTLIBC_API void QDateEdit_DropEvent(QDateEdit* self, QDropEvent* event);
QTLIBC_API void QDateEdit_OnDropEvent(QDateEdit* self, intptr_t slot);
QTLIBC_API void QDateEdit_QBaseDropEvent(QDateEdit* self, QDropEvent* event);
QTLIBC_API bool QDateEdit_NativeEvent(QDateEdit* self, libqt_string eventType, void* message, intptr_t* result);
QTLIBC_API void QDateEdit_OnNativeEvent(QDateEdit* self, intptr_t slot);
QTLIBC_API bool QDateEdit_QBaseNativeEvent(QDateEdit* self, libqt_string eventType, void* message, intptr_t* result);
QTLIBC_API void QDateEdit_InputMethodEvent(QDateEdit* self, QInputMethodEvent* param1);
QTLIBC_API void QDateEdit_OnInputMethodEvent(QDateEdit* self, intptr_t slot);
QTLIBC_API void QDateEdit_QBaseInputMethodEvent(QDateEdit* self, QInputMethodEvent* param1);
QTLIBC_API bool QDateEdit_EventFilter(QDateEdit* self, QObject* watched, QEvent* event);
QTLIBC_API void QDateEdit_OnEventFilter(QDateEdit* self, intptr_t slot);
QTLIBC_API bool QDateEdit_QBaseEventFilter(QDateEdit* self, QObject* watched, QEvent* event);
QTLIBC_API void QDateEdit_ChildEvent(QDateEdit* self, QChildEvent* event);
QTLIBC_API void QDateEdit_OnChildEvent(QDateEdit* self, intptr_t slot);
QTLIBC_API void QDateEdit_QBaseChildEvent(QDateEdit* self, QChildEvent* event);
QTLIBC_API void QDateEdit_CustomEvent(QDateEdit* self, QEvent* event);
QTLIBC_API void QDateEdit_OnCustomEvent(QDateEdit* self, intptr_t slot);
QTLIBC_API void QDateEdit_QBaseCustomEvent(QDateEdit* self, QEvent* event);
QTLIBC_API void QDateEdit_ConnectNotify(QDateEdit* self, QMetaMethod* signal);
QTLIBC_API void QDateEdit_OnConnectNotify(QDateEdit* self, intptr_t slot);
QTLIBC_API void QDateEdit_QBaseConnectNotify(QDateEdit* self, QMetaMethod* signal);
QTLIBC_API void QDateEdit_DisconnectNotify(QDateEdit* self, QMetaMethod* signal);
QTLIBC_API void QDateEdit_OnDisconnectNotify(QDateEdit* self, intptr_t slot);
QTLIBC_API void QDateEdit_QBaseDisconnectNotify(QDateEdit* self, QMetaMethod* signal);
QTLIBC_API QDateTime* QDateEdit_DateTimeFromText(const QDateEdit* self, libqt_string text);
QTLIBC_API void QDateEdit_OnDateTimeFromText(const QDateEdit* self, intptr_t slot);
QTLIBC_API QDateTime* QDateEdit_QBaseDateTimeFromText(const QDateEdit* self, libqt_string text);
QTLIBC_API libqt_string QDateEdit_TextFromDateTime(const QDateEdit* self, QDateTime* dt);
QTLIBC_API void QDateEdit_OnTextFromDateTime(const QDateEdit* self, intptr_t slot);
QTLIBC_API libqt_string QDateEdit_QBaseTextFromDateTime(const QDateEdit* self, QDateTime* dt);
QTLIBC_API int QDateEdit_StepEnabled(const QDateEdit* self);
QTLIBC_API void QDateEdit_OnStepEnabled(const QDateEdit* self, intptr_t slot);
QTLIBC_API int QDateEdit_QBaseStepEnabled(const QDateEdit* self);
QTLIBC_API void QDateEdit_InitStyleOption(const QDateEdit* self, QStyleOptionSpinBox* option);
QTLIBC_API void QDateEdit_OnInitStyleOption(const QDateEdit* self, intptr_t slot);
QTLIBC_API void QDateEdit_QBaseInitStyleOption(const QDateEdit* self, QStyleOptionSpinBox* option);
QTLIBC_API int QDateEdit_Metric(const QDateEdit* self, int param1);
QTLIBC_API void QDateEdit_OnMetric(const QDateEdit* self, intptr_t slot);
QTLIBC_API int QDateEdit_QBaseMetric(const QDateEdit* self, int param1);
QTLIBC_API void QDateEdit_InitPainter(const QDateEdit* self, QPainter* painter);
QTLIBC_API void QDateEdit_OnInitPainter(const QDateEdit* self, intptr_t slot);
QTLIBC_API void QDateEdit_QBaseInitPainter(const QDateEdit* self, QPainter* painter);
QTLIBC_API QPaintDevice* QDateEdit_Redirected(const QDateEdit* self, QPoint* offset);
QTLIBC_API void QDateEdit_OnRedirected(const QDateEdit* self, intptr_t slot);
QTLIBC_API QPaintDevice* QDateEdit_QBaseRedirected(const QDateEdit* self, QPoint* offset);
QTLIBC_API QPainter* QDateEdit_SharedPainter(const QDateEdit* self);
QTLIBC_API void QDateEdit_OnSharedPainter(const QDateEdit* self, intptr_t slot);
QTLIBC_API QPainter* QDateEdit_QBaseSharedPainter(const QDateEdit* self);
QTLIBC_API QLineEdit* QDateEdit_LineEdit(const QDateEdit* self);
QTLIBC_API void QDateEdit_OnLineEdit(const QDateEdit* self, intptr_t slot);
QTLIBC_API QLineEdit* QDateEdit_QBaseLineEdit(const QDateEdit* self);
QTLIBC_API void QDateEdit_SetLineEdit(QDateEdit* self, QLineEdit* edit);
QTLIBC_API void QDateEdit_OnSetLineEdit(QDateEdit* self, intptr_t slot);
QTLIBC_API void QDateEdit_QBaseSetLineEdit(QDateEdit* self, QLineEdit* edit);
QTLIBC_API void QDateEdit_UpdateMicroFocus(QDateEdit* self);
QTLIBC_API void QDateEdit_OnUpdateMicroFocus(QDateEdit* self, intptr_t slot);
QTLIBC_API void QDateEdit_QBaseUpdateMicroFocus(QDateEdit* self);
QTLIBC_API void QDateEdit_Create(QDateEdit* self);
QTLIBC_API void QDateEdit_OnCreate(QDateEdit* self, intptr_t slot);
QTLIBC_API void QDateEdit_QBaseCreate(QDateEdit* self);
QTLIBC_API void QDateEdit_Destroy(QDateEdit* self);
QTLIBC_API void QDateEdit_OnDestroy(QDateEdit* self, intptr_t slot);
QTLIBC_API void QDateEdit_QBaseDestroy(QDateEdit* self);
QTLIBC_API bool QDateEdit_FocusNextChild(QDateEdit* self);
QTLIBC_API void QDateEdit_OnFocusNextChild(QDateEdit* self, intptr_t slot);
QTLIBC_API bool QDateEdit_QBaseFocusNextChild(QDateEdit* self);
QTLIBC_API bool QDateEdit_FocusPreviousChild(QDateEdit* self);
QTLIBC_API void QDateEdit_OnFocusPreviousChild(QDateEdit* self, intptr_t slot);
QTLIBC_API bool QDateEdit_QBaseFocusPreviousChild(QDateEdit* self);
QTLIBC_API QObject* QDateEdit_Sender(const QDateEdit* self);
QTLIBC_API void QDateEdit_OnSender(const QDateEdit* self, intptr_t slot);
QTLIBC_API QObject* QDateEdit_QBaseSender(const QDateEdit* self);
QTLIBC_API int QDateEdit_SenderSignalIndex(const QDateEdit* self);
QTLIBC_API void QDateEdit_OnSenderSignalIndex(const QDateEdit* self, intptr_t slot);
QTLIBC_API int QDateEdit_QBaseSenderSignalIndex(const QDateEdit* self);
QTLIBC_API int QDateEdit_Receivers(const QDateEdit* self, const char* signal);
QTLIBC_API void QDateEdit_OnReceivers(const QDateEdit* self, intptr_t slot);
QTLIBC_API int QDateEdit_QBaseReceivers(const QDateEdit* self, const char* signal);
QTLIBC_API bool QDateEdit_IsSignalConnected(const QDateEdit* self, QMetaMethod* signal);
QTLIBC_API void QDateEdit_OnIsSignalConnected(const QDateEdit* self, intptr_t slot);
QTLIBC_API bool QDateEdit_QBaseIsSignalConnected(const QDateEdit* self, QMetaMethod* signal);
QTLIBC_API void QDateEdit_Delete(QDateEdit* self);

#ifdef __cplusplus
} /* extern C */
#endif

#endif
