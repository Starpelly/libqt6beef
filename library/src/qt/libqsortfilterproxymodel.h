#pragma once
#ifndef SRC_QTC_LIBQSORTFILTERPROXYMODEL_H
#define SRC_QTC_LIBQSORTFILTERPROXYMODEL_H

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>

#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

#include "qtlibc.h"

#ifdef __cplusplus
extern "C" {
#endif

#ifdef __cplusplus
#if defined(WORKAROUND_INNER_CLASS_DEFINITION_QMetaObject__Connection)
typedef QMetaObject::Connection QMetaObject__Connection;
#endif
#else
typedef struct QAbstractItemModel QAbstractItemModel;
typedef struct QAbstractProxyModel QAbstractProxyModel;
typedef struct QAnyStringView QAnyStringView;
typedef struct QBindingStorage QBindingStorage;
typedef struct QChildEvent QChildEvent;
typedef struct QDataStream QDataStream;
typedef struct QEvent QEvent;
typedef struct QItemSelection QItemSelection;
typedef struct QMetaMethod QMetaMethod;
typedef struct QMetaObject QMetaObject;
typedef struct QMetaObject__Connection QMetaObject__Connection;
typedef struct QMimeData QMimeData;
typedef struct QModelIndex QModelIndex;
typedef struct QModelRoleDataSpan QModelRoleDataSpan;
typedef struct QObject QObject;
typedef struct QPersistentModelIndex QPersistentModelIndex;
typedef struct QRegularExpression QRegularExpression;
typedef struct QSize QSize;
typedef struct QSortFilterProxyModel QSortFilterProxyModel;
typedef struct QThread QThread;
typedef struct QTimerEvent QTimerEvent;
typedef struct QVariant QVariant;
#endif

QTLIBC_API QSortFilterProxyModel* QSortFilterProxyModel_new();
QTLIBC_API QSortFilterProxyModel* QSortFilterProxyModel_new2(QObject* parent);
QTLIBC_API QMetaObject* QSortFilterProxyModel_MetaObject(const QSortFilterProxyModel* self);
QTLIBC_API void* QSortFilterProxyModel_Metacast(QSortFilterProxyModel* self, const char* param1);
QTLIBC_API int QSortFilterProxyModel_Metacall(QSortFilterProxyModel* self, int param1, int param2, void** param3);
QTLIBC_API void QSortFilterProxyModel_OnMetacall(QSortFilterProxyModel* self, intptr_t slot);
QTLIBC_API int QSortFilterProxyModel_QBaseMetacall(QSortFilterProxyModel* self, int param1, int param2, void** param3);
QTLIBC_API libqt_string QSortFilterProxyModel_Tr(const char* s);
QTLIBC_API void QSortFilterProxyModel_SetSourceModel(QSortFilterProxyModel* self, QAbstractItemModel* sourceModel);
QTLIBC_API void QSortFilterProxyModel_OnSetSourceModel(QSortFilterProxyModel* self, intptr_t slot);
QTLIBC_API void QSortFilterProxyModel_QBaseSetSourceModel(QSortFilterProxyModel* self, QAbstractItemModel* sourceModel);
QTLIBC_API QModelIndex* QSortFilterProxyModel_MapToSource(const QSortFilterProxyModel* self, QModelIndex* proxyIndex);
QTLIBC_API void QSortFilterProxyModel_OnMapToSource(const QSortFilterProxyModel* self, intptr_t slot);
QTLIBC_API QModelIndex* QSortFilterProxyModel_QBaseMapToSource(const QSortFilterProxyModel* self, QModelIndex* proxyIndex);
QTLIBC_API QModelIndex* QSortFilterProxyModel_MapFromSource(const QSortFilterProxyModel* self, QModelIndex* sourceIndex);
QTLIBC_API void QSortFilterProxyModel_OnMapFromSource(const QSortFilterProxyModel* self, intptr_t slot);
QTLIBC_API QModelIndex* QSortFilterProxyModel_QBaseMapFromSource(const QSortFilterProxyModel* self, QModelIndex* sourceIndex);
QTLIBC_API QItemSelection* QSortFilterProxyModel_MapSelectionToSource(const QSortFilterProxyModel* self, QItemSelection* proxySelection);
QTLIBC_API void QSortFilterProxyModel_OnMapSelectionToSource(const QSortFilterProxyModel* self, intptr_t slot);
QTLIBC_API QItemSelection* QSortFilterProxyModel_QBaseMapSelectionToSource(const QSortFilterProxyModel* self, QItemSelection* proxySelection);
QTLIBC_API QItemSelection* QSortFilterProxyModel_MapSelectionFromSource(const QSortFilterProxyModel* self, QItemSelection* sourceSelection);
QTLIBC_API void QSortFilterProxyModel_OnMapSelectionFromSource(const QSortFilterProxyModel* self, intptr_t slot);
QTLIBC_API QItemSelection* QSortFilterProxyModel_QBaseMapSelectionFromSource(const QSortFilterProxyModel* self, QItemSelection* sourceSelection);
QTLIBC_API QRegularExpression* QSortFilterProxyModel_FilterRegularExpression(const QSortFilterProxyModel* self);
QTLIBC_API int QSortFilterProxyModel_FilterKeyColumn(const QSortFilterProxyModel* self);
QTLIBC_API void QSortFilterProxyModel_SetFilterKeyColumn(QSortFilterProxyModel* self, int column);
QTLIBC_API int QSortFilterProxyModel_FilterCaseSensitivity(const QSortFilterProxyModel* self);
QTLIBC_API void QSortFilterProxyModel_SetFilterCaseSensitivity(QSortFilterProxyModel* self, int cs);
QTLIBC_API int QSortFilterProxyModel_SortCaseSensitivity(const QSortFilterProxyModel* self);
QTLIBC_API void QSortFilterProxyModel_SetSortCaseSensitivity(QSortFilterProxyModel* self, int cs);
QTLIBC_API bool QSortFilterProxyModel_IsSortLocaleAware(const QSortFilterProxyModel* self);
QTLIBC_API void QSortFilterProxyModel_SetSortLocaleAware(QSortFilterProxyModel* self, bool on);
QTLIBC_API int QSortFilterProxyModel_SortColumn(const QSortFilterProxyModel* self);
QTLIBC_API int QSortFilterProxyModel_SortOrder(const QSortFilterProxyModel* self);
QTLIBC_API bool QSortFilterProxyModel_DynamicSortFilter(const QSortFilterProxyModel* self);
QTLIBC_API void QSortFilterProxyModel_SetDynamicSortFilter(QSortFilterProxyModel* self, bool enable);
QTLIBC_API int QSortFilterProxyModel_SortRole(const QSortFilterProxyModel* self);
QTLIBC_API void QSortFilterProxyModel_SetSortRole(QSortFilterProxyModel* self, int role);
QTLIBC_API int QSortFilterProxyModel_FilterRole(const QSortFilterProxyModel* self);
QTLIBC_API void QSortFilterProxyModel_SetFilterRole(QSortFilterProxyModel* self, int role);
QTLIBC_API bool QSortFilterProxyModel_IsRecursiveFilteringEnabled(const QSortFilterProxyModel* self);
QTLIBC_API void QSortFilterProxyModel_SetRecursiveFilteringEnabled(QSortFilterProxyModel* self, bool recursive);
QTLIBC_API bool QSortFilterProxyModel_AutoAcceptChildRows(const QSortFilterProxyModel* self);
QTLIBC_API void QSortFilterProxyModel_SetAutoAcceptChildRows(QSortFilterProxyModel* self, bool accept);
QTLIBC_API void QSortFilterProxyModel_SetFilterRegularExpression(QSortFilterProxyModel* self, libqt_string pattern);
QTLIBC_API void QSortFilterProxyModel_SetFilterRegularExpressionWithRegularExpression(QSortFilterProxyModel* self, QRegularExpression* regularExpression);
QTLIBC_API void QSortFilterProxyModel_SetFilterWildcard(QSortFilterProxyModel* self, libqt_string pattern);
QTLIBC_API void QSortFilterProxyModel_SetFilterFixedString(QSortFilterProxyModel* self, libqt_string pattern);
QTLIBC_API void QSortFilterProxyModel_Invalidate(QSortFilterProxyModel* self);
QTLIBC_API bool QSortFilterProxyModel_FilterAcceptsRow(const QSortFilterProxyModel* self, int source_row, QModelIndex* source_parent);
QTLIBC_API void QSortFilterProxyModel_OnFilterAcceptsRow(const QSortFilterProxyModel* self, intptr_t slot);
QTLIBC_API bool QSortFilterProxyModel_QBaseFilterAcceptsRow(const QSortFilterProxyModel* self, int source_row, QModelIndex* source_parent);
QTLIBC_API bool QSortFilterProxyModel_FilterAcceptsColumn(const QSortFilterProxyModel* self, int source_column, QModelIndex* source_parent);
QTLIBC_API void QSortFilterProxyModel_OnFilterAcceptsColumn(const QSortFilterProxyModel* self, intptr_t slot);
QTLIBC_API bool QSortFilterProxyModel_QBaseFilterAcceptsColumn(const QSortFilterProxyModel* self, int source_column, QModelIndex* source_parent);
QTLIBC_API bool QSortFilterProxyModel_LessThan(const QSortFilterProxyModel* self, QModelIndex* source_left, QModelIndex* source_right);
QTLIBC_API void QSortFilterProxyModel_OnLessThan(const QSortFilterProxyModel* self, intptr_t slot);
QTLIBC_API bool QSortFilterProxyModel_QBaseLessThan(const QSortFilterProxyModel* self, QModelIndex* source_left, QModelIndex* source_right);
QTLIBC_API QModelIndex* QSortFilterProxyModel_Index(const QSortFilterProxyModel* self, int row, int column, QModelIndex* parent);
QTLIBC_API void QSortFilterProxyModel_OnIndex(const QSortFilterProxyModel* self, intptr_t slot);
QTLIBC_API QModelIndex* QSortFilterProxyModel_QBaseIndex(const QSortFilterProxyModel* self, int row, int column, QModelIndex* parent);
QTLIBC_API QModelIndex* QSortFilterProxyModel_Parent(const QSortFilterProxyModel* self, QModelIndex* child);
QTLIBC_API void QSortFilterProxyModel_OnParent(const QSortFilterProxyModel* self, intptr_t slot);
QTLIBC_API QModelIndex* QSortFilterProxyModel_QBaseParent(const QSortFilterProxyModel* self, QModelIndex* child);
QTLIBC_API QModelIndex* QSortFilterProxyModel_Sibling(const QSortFilterProxyModel* self, int row, int column, QModelIndex* idx);
QTLIBC_API void QSortFilterProxyModel_OnSibling(const QSortFilterProxyModel* self, intptr_t slot);
QTLIBC_API QModelIndex* QSortFilterProxyModel_QBaseSibling(const QSortFilterProxyModel* self, int row, int column, QModelIndex* idx);
QTLIBC_API int QSortFilterProxyModel_RowCount(const QSortFilterProxyModel* self, QModelIndex* parent);
QTLIBC_API void QSortFilterProxyModel_OnRowCount(const QSortFilterProxyModel* self, intptr_t slot);
QTLIBC_API int QSortFilterProxyModel_QBaseRowCount(const QSortFilterProxyModel* self, QModelIndex* parent);
QTLIBC_API int QSortFilterProxyModel_ColumnCount(const QSortFilterProxyModel* self, QModelIndex* parent);
QTLIBC_API void QSortFilterProxyModel_OnColumnCount(const QSortFilterProxyModel* self, intptr_t slot);
QTLIBC_API int QSortFilterProxyModel_QBaseColumnCount(const QSortFilterProxyModel* self, QModelIndex* parent);
QTLIBC_API bool QSortFilterProxyModel_HasChildren(const QSortFilterProxyModel* self, QModelIndex* parent);
QTLIBC_API void QSortFilterProxyModel_OnHasChildren(const QSortFilterProxyModel* self, intptr_t slot);
QTLIBC_API bool QSortFilterProxyModel_QBaseHasChildren(const QSortFilterProxyModel* self, QModelIndex* parent);
QTLIBC_API QVariant* QSortFilterProxyModel_Data(const QSortFilterProxyModel* self, QModelIndex* index, int role);
QTLIBC_API void QSortFilterProxyModel_OnData(const QSortFilterProxyModel* self, intptr_t slot);
QTLIBC_API QVariant* QSortFilterProxyModel_QBaseData(const QSortFilterProxyModel* self, QModelIndex* index, int role);
QTLIBC_API bool QSortFilterProxyModel_SetData(QSortFilterProxyModel* self, QModelIndex* index, QVariant* value, int role);
QTLIBC_API void QSortFilterProxyModel_OnSetData(QSortFilterProxyModel* self, intptr_t slot);
QTLIBC_API bool QSortFilterProxyModel_QBaseSetData(QSortFilterProxyModel* self, QModelIndex* index, QVariant* value, int role);
QTLIBC_API QVariant* QSortFilterProxyModel_HeaderData(const QSortFilterProxyModel* self, int section, int orientation, int role);
QTLIBC_API void QSortFilterProxyModel_OnHeaderData(const QSortFilterProxyModel* self, intptr_t slot);
QTLIBC_API QVariant* QSortFilterProxyModel_QBaseHeaderData(const QSortFilterProxyModel* self, int section, int orientation, int role);
QTLIBC_API bool QSortFilterProxyModel_SetHeaderData(QSortFilterProxyModel* self, int section, int orientation, QVariant* value, int role);
QTLIBC_API void QSortFilterProxyModel_OnSetHeaderData(QSortFilterProxyModel* self, intptr_t slot);
QTLIBC_API bool QSortFilterProxyModel_QBaseSetHeaderData(QSortFilterProxyModel* self, int section, int orientation, QVariant* value, int role);
QTLIBC_API QMimeData* QSortFilterProxyModel_MimeData(const QSortFilterProxyModel* self, libqt_list /* of QModelIndex* */ indexes);
QTLIBC_API void QSortFilterProxyModel_OnMimeData(const QSortFilterProxyModel* self, intptr_t slot);
QTLIBC_API QMimeData* QSortFilterProxyModel_QBaseMimeData(const QSortFilterProxyModel* self, libqt_list /* of QModelIndex* */ indexes);
QTLIBC_API bool QSortFilterProxyModel_DropMimeData(QSortFilterProxyModel* self, QMimeData* data, int action, int row, int column, QModelIndex* parent);
QTLIBC_API void QSortFilterProxyModel_OnDropMimeData(QSortFilterProxyModel* self, intptr_t slot);
QTLIBC_API bool QSortFilterProxyModel_QBaseDropMimeData(QSortFilterProxyModel* self, QMimeData* data, int action, int row, int column, QModelIndex* parent);
QTLIBC_API bool QSortFilterProxyModel_InsertRows(QSortFilterProxyModel* self, int row, int count, QModelIndex* parent);
QTLIBC_API void QSortFilterProxyModel_OnInsertRows(QSortFilterProxyModel* self, intptr_t slot);
QTLIBC_API bool QSortFilterProxyModel_QBaseInsertRows(QSortFilterProxyModel* self, int row, int count, QModelIndex* parent);
QTLIBC_API bool QSortFilterProxyModel_InsertColumns(QSortFilterProxyModel* self, int column, int count, QModelIndex* parent);
QTLIBC_API void QSortFilterProxyModel_OnInsertColumns(QSortFilterProxyModel* self, intptr_t slot);
QTLIBC_API bool QSortFilterProxyModel_QBaseInsertColumns(QSortFilterProxyModel* self, int column, int count, QModelIndex* parent);
QTLIBC_API bool QSortFilterProxyModel_RemoveRows(QSortFilterProxyModel* self, int row, int count, QModelIndex* parent);
QTLIBC_API void QSortFilterProxyModel_OnRemoveRows(QSortFilterProxyModel* self, intptr_t slot);
QTLIBC_API bool QSortFilterProxyModel_QBaseRemoveRows(QSortFilterProxyModel* self, int row, int count, QModelIndex* parent);
QTLIBC_API bool QSortFilterProxyModel_RemoveColumns(QSortFilterProxyModel* self, int column, int count, QModelIndex* parent);
QTLIBC_API void QSortFilterProxyModel_OnRemoveColumns(QSortFilterProxyModel* self, intptr_t slot);
QTLIBC_API bool QSortFilterProxyModel_QBaseRemoveColumns(QSortFilterProxyModel* self, int column, int count, QModelIndex* parent);
QTLIBC_API void QSortFilterProxyModel_FetchMore(QSortFilterProxyModel* self, QModelIndex* parent);
QTLIBC_API void QSortFilterProxyModel_OnFetchMore(QSortFilterProxyModel* self, intptr_t slot);
QTLIBC_API void QSortFilterProxyModel_QBaseFetchMore(QSortFilterProxyModel* self, QModelIndex* parent);
QTLIBC_API bool QSortFilterProxyModel_CanFetchMore(const QSortFilterProxyModel* self, QModelIndex* parent);
QTLIBC_API void QSortFilterProxyModel_OnCanFetchMore(const QSortFilterProxyModel* self, intptr_t slot);
QTLIBC_API bool QSortFilterProxyModel_QBaseCanFetchMore(const QSortFilterProxyModel* self, QModelIndex* parent);
QTLIBC_API int QSortFilterProxyModel_Flags(const QSortFilterProxyModel* self, QModelIndex* index);
QTLIBC_API void QSortFilterProxyModel_OnFlags(const QSortFilterProxyModel* self, intptr_t slot);
QTLIBC_API int QSortFilterProxyModel_QBaseFlags(const QSortFilterProxyModel* self, QModelIndex* index);
QTLIBC_API QModelIndex* QSortFilterProxyModel_Buddy(const QSortFilterProxyModel* self, QModelIndex* index);
QTLIBC_API void QSortFilterProxyModel_OnBuddy(const QSortFilterProxyModel* self, intptr_t slot);
QTLIBC_API QModelIndex* QSortFilterProxyModel_QBaseBuddy(const QSortFilterProxyModel* self, QModelIndex* index);
QTLIBC_API libqt_list /* of QModelIndex* */ QSortFilterProxyModel_Match(const QSortFilterProxyModel* self, QModelIndex* start, int role, QVariant* value, int hits, int flags);
QTLIBC_API void QSortFilterProxyModel_OnMatch(const QSortFilterProxyModel* self, intptr_t slot);
QTLIBC_API libqt_list /* of QModelIndex* */ QSortFilterProxyModel_QBaseMatch(const QSortFilterProxyModel* self, QModelIndex* start, int role, QVariant* value, int hits, int flags);
QTLIBC_API QSize* QSortFilterProxyModel_Span(const QSortFilterProxyModel* self, QModelIndex* index);
QTLIBC_API void QSortFilterProxyModel_OnSpan(const QSortFilterProxyModel* self, intptr_t slot);
QTLIBC_API QSize* QSortFilterProxyModel_QBaseSpan(const QSortFilterProxyModel* self, QModelIndex* index);
QTLIBC_API void QSortFilterProxyModel_Sort(QSortFilterProxyModel* self, int column, int order);
QTLIBC_API void QSortFilterProxyModel_OnSort(QSortFilterProxyModel* self, intptr_t slot);
QTLIBC_API void QSortFilterProxyModel_QBaseSort(QSortFilterProxyModel* self, int column, int order);
QTLIBC_API libqt_list /* of libqt_string */ QSortFilterProxyModel_MimeTypes(const QSortFilterProxyModel* self);
QTLIBC_API void QSortFilterProxyModel_OnMimeTypes(const QSortFilterProxyModel* self, intptr_t slot);
QTLIBC_API libqt_list /* of libqt_string */ QSortFilterProxyModel_QBaseMimeTypes(const QSortFilterProxyModel* self);
QTLIBC_API int QSortFilterProxyModel_SupportedDropActions(const QSortFilterProxyModel* self);
QTLIBC_API void QSortFilterProxyModel_OnSupportedDropActions(const QSortFilterProxyModel* self, intptr_t slot);
QTLIBC_API int QSortFilterProxyModel_QBaseSupportedDropActions(const QSortFilterProxyModel* self);
QTLIBC_API void QSortFilterProxyModel_DynamicSortFilterChanged(QSortFilterProxyModel* self, bool dynamicSortFilter);
void QSortFilterProxyModel_Connect_DynamicSortFilterChanged(QSortFilterProxyModel* self, intptr_t slot);
QTLIBC_API void QSortFilterProxyModel_FilterCaseSensitivityChanged(QSortFilterProxyModel* self, int filterCaseSensitivity);
void QSortFilterProxyModel_Connect_FilterCaseSensitivityChanged(QSortFilterProxyModel* self, intptr_t slot);
QTLIBC_API void QSortFilterProxyModel_SortCaseSensitivityChanged(QSortFilterProxyModel* self, int sortCaseSensitivity);
void QSortFilterProxyModel_Connect_SortCaseSensitivityChanged(QSortFilterProxyModel* self, intptr_t slot);
QTLIBC_API void QSortFilterProxyModel_SortLocaleAwareChanged(QSortFilterProxyModel* self, bool sortLocaleAware);
void QSortFilterProxyModel_Connect_SortLocaleAwareChanged(QSortFilterProxyModel* self, intptr_t slot);
QTLIBC_API void QSortFilterProxyModel_SortRoleChanged(QSortFilterProxyModel* self, int sortRole);
void QSortFilterProxyModel_Connect_SortRoleChanged(QSortFilterProxyModel* self, intptr_t slot);
QTLIBC_API void QSortFilterProxyModel_FilterRoleChanged(QSortFilterProxyModel* self, int filterRole);
void QSortFilterProxyModel_Connect_FilterRoleChanged(QSortFilterProxyModel* self, intptr_t slot);
QTLIBC_API void QSortFilterProxyModel_RecursiveFilteringEnabledChanged(QSortFilterProxyModel* self, bool recursiveFilteringEnabled);
void QSortFilterProxyModel_Connect_RecursiveFilteringEnabledChanged(QSortFilterProxyModel* self, intptr_t slot);
QTLIBC_API void QSortFilterProxyModel_AutoAcceptChildRowsChanged(QSortFilterProxyModel* self, bool autoAcceptChildRows);
void QSortFilterProxyModel_Connect_AutoAcceptChildRowsChanged(QSortFilterProxyModel* self, intptr_t slot);
QTLIBC_API libqt_string QSortFilterProxyModel_Tr2(const char* s, const char* c);
QTLIBC_API libqt_string QSortFilterProxyModel_Tr3(const char* s, const char* c, int n);
QTLIBC_API bool QSortFilterProxyModel_Submit(QSortFilterProxyModel* self);
QTLIBC_API void QSortFilterProxyModel_OnSubmit(QSortFilterProxyModel* self, intptr_t slot);
QTLIBC_API bool QSortFilterProxyModel_QBaseSubmit(QSortFilterProxyModel* self);
QTLIBC_API void QSortFilterProxyModel_Revert(QSortFilterProxyModel* self);
QTLIBC_API void QSortFilterProxyModel_OnRevert(QSortFilterProxyModel* self, intptr_t slot);
QTLIBC_API void QSortFilterProxyModel_QBaseRevert(QSortFilterProxyModel* self);
QTLIBC_API libqt_map /* of int to QVariant* */ QSortFilterProxyModel_ItemData(const QSortFilterProxyModel* self, QModelIndex* index);
QTLIBC_API void QSortFilterProxyModel_OnItemData(const QSortFilterProxyModel* self, intptr_t slot);
QTLIBC_API libqt_map /* of int to QVariant* */ QSortFilterProxyModel_QBaseItemData(const QSortFilterProxyModel* self, QModelIndex* index);
QTLIBC_API bool QSortFilterProxyModel_SetItemData(QSortFilterProxyModel* self, QModelIndex* index, libqt_map /* of int to QVariant* */ roles);
QTLIBC_API void QSortFilterProxyModel_OnSetItemData(QSortFilterProxyModel* self, intptr_t slot);
QTLIBC_API bool QSortFilterProxyModel_QBaseSetItemData(QSortFilterProxyModel* self, QModelIndex* index, libqt_map /* of int to QVariant* */ roles);
QTLIBC_API bool QSortFilterProxyModel_ClearItemData(QSortFilterProxyModel* self, QModelIndex* index);
QTLIBC_API void QSortFilterProxyModel_OnClearItemData(QSortFilterProxyModel* self, intptr_t slot);
QTLIBC_API bool QSortFilterProxyModel_QBaseClearItemData(QSortFilterProxyModel* self, QModelIndex* index);
QTLIBC_API bool QSortFilterProxyModel_CanDropMimeData(const QSortFilterProxyModel* self, QMimeData* data, int action, int row, int column, QModelIndex* parent);
QTLIBC_API void QSortFilterProxyModel_OnCanDropMimeData(const QSortFilterProxyModel* self, intptr_t slot);
QTLIBC_API bool QSortFilterProxyModel_QBaseCanDropMimeData(const QSortFilterProxyModel* self, QMimeData* data, int action, int row, int column, QModelIndex* parent);
QTLIBC_API int QSortFilterProxyModel_SupportedDragActions(const QSortFilterProxyModel* self);
QTLIBC_API void QSortFilterProxyModel_OnSupportedDragActions(const QSortFilterProxyModel* self, intptr_t slot);
QTLIBC_API int QSortFilterProxyModel_QBaseSupportedDragActions(const QSortFilterProxyModel* self);
QTLIBC_API libqt_map /* of int to libqt_string */ QSortFilterProxyModel_RoleNames(const QSortFilterProxyModel* self);
QTLIBC_API void QSortFilterProxyModel_OnRoleNames(const QSortFilterProxyModel* self, intptr_t slot);
QTLIBC_API libqt_map /* of int to libqt_string */ QSortFilterProxyModel_QBaseRoleNames(const QSortFilterProxyModel* self);
QTLIBC_API bool QSortFilterProxyModel_MoveRows(QSortFilterProxyModel* self, QModelIndex* sourceParent, int sourceRow, int count, QModelIndex* destinationParent, int destinationChild);
QTLIBC_API void QSortFilterProxyModel_OnMoveRows(QSortFilterProxyModel* self, intptr_t slot);
QTLIBC_API bool QSortFilterProxyModel_QBaseMoveRows(QSortFilterProxyModel* self, QModelIndex* sourceParent, int sourceRow, int count, QModelIndex* destinationParent, int destinationChild);
QTLIBC_API bool QSortFilterProxyModel_MoveColumns(QSortFilterProxyModel* self, QModelIndex* sourceParent, int sourceColumn, int count, QModelIndex* destinationParent, int destinationChild);
QTLIBC_API void QSortFilterProxyModel_OnMoveColumns(QSortFilterProxyModel* self, intptr_t slot);
QTLIBC_API bool QSortFilterProxyModel_QBaseMoveColumns(QSortFilterProxyModel* self, QModelIndex* sourceParent, int sourceColumn, int count, QModelIndex* destinationParent, int destinationChild);
QTLIBC_API void QSortFilterProxyModel_MultiData(const QSortFilterProxyModel* self, QModelIndex* index, QModelRoleDataSpan* roleDataSpan);
QTLIBC_API void QSortFilterProxyModel_OnMultiData(const QSortFilterProxyModel* self, intptr_t slot);
QTLIBC_API void QSortFilterProxyModel_QBaseMultiData(const QSortFilterProxyModel* self, QModelIndex* index, QModelRoleDataSpan* roleDataSpan);
QTLIBC_API void QSortFilterProxyModel_ResetInternalData(QSortFilterProxyModel* self);
QTLIBC_API void QSortFilterProxyModel_OnResetInternalData(QSortFilterProxyModel* self, intptr_t slot);
QTLIBC_API void QSortFilterProxyModel_QBaseResetInternalData(QSortFilterProxyModel* self);
QTLIBC_API bool QSortFilterProxyModel_Event(QSortFilterProxyModel* self, QEvent* event);
QTLIBC_API void QSortFilterProxyModel_OnEvent(QSortFilterProxyModel* self, intptr_t slot);
QTLIBC_API bool QSortFilterProxyModel_QBaseEvent(QSortFilterProxyModel* self, QEvent* event);
QTLIBC_API bool QSortFilterProxyModel_EventFilter(QSortFilterProxyModel* self, QObject* watched, QEvent* event);
QTLIBC_API void QSortFilterProxyModel_OnEventFilter(QSortFilterProxyModel* self, intptr_t slot);
QTLIBC_API bool QSortFilterProxyModel_QBaseEventFilter(QSortFilterProxyModel* self, QObject* watched, QEvent* event);
QTLIBC_API void QSortFilterProxyModel_TimerEvent(QSortFilterProxyModel* self, QTimerEvent* event);
QTLIBC_API void QSortFilterProxyModel_OnTimerEvent(QSortFilterProxyModel* self, intptr_t slot);
QTLIBC_API void QSortFilterProxyModel_QBaseTimerEvent(QSortFilterProxyModel* self, QTimerEvent* event);
QTLIBC_API void QSortFilterProxyModel_ChildEvent(QSortFilterProxyModel* self, QChildEvent* event);
QTLIBC_API void QSortFilterProxyModel_OnChildEvent(QSortFilterProxyModel* self, intptr_t slot);
QTLIBC_API void QSortFilterProxyModel_QBaseChildEvent(QSortFilterProxyModel* self, QChildEvent* event);
QTLIBC_API void QSortFilterProxyModel_CustomEvent(QSortFilterProxyModel* self, QEvent* event);
QTLIBC_API void QSortFilterProxyModel_OnCustomEvent(QSortFilterProxyModel* self, intptr_t slot);
QTLIBC_API void QSortFilterProxyModel_QBaseCustomEvent(QSortFilterProxyModel* self, QEvent* event);
QTLIBC_API void QSortFilterProxyModel_ConnectNotify(QSortFilterProxyModel* self, QMetaMethod* signal);
QTLIBC_API void QSortFilterProxyModel_OnConnectNotify(QSortFilterProxyModel* self, intptr_t slot);
QTLIBC_API void QSortFilterProxyModel_QBaseConnectNotify(QSortFilterProxyModel* self, QMetaMethod* signal);
QTLIBC_API void QSortFilterProxyModel_DisconnectNotify(QSortFilterProxyModel* self, QMetaMethod* signal);
QTLIBC_API void QSortFilterProxyModel_OnDisconnectNotify(QSortFilterProxyModel* self, intptr_t slot);
QTLIBC_API void QSortFilterProxyModel_QBaseDisconnectNotify(QSortFilterProxyModel* self, QMetaMethod* signal);
QTLIBC_API void QSortFilterProxyModel_InvalidateFilter(QSortFilterProxyModel* self);
QTLIBC_API void QSortFilterProxyModel_OnInvalidateFilter(QSortFilterProxyModel* self, intptr_t slot);
QTLIBC_API void QSortFilterProxyModel_QBaseInvalidateFilter(QSortFilterProxyModel* self);
QTLIBC_API void QSortFilterProxyModel_InvalidateRowsFilter(QSortFilterProxyModel* self);
QTLIBC_API void QSortFilterProxyModel_OnInvalidateRowsFilter(QSortFilterProxyModel* self, intptr_t slot);
QTLIBC_API void QSortFilterProxyModel_QBaseInvalidateRowsFilter(QSortFilterProxyModel* self);
QTLIBC_API void QSortFilterProxyModel_InvalidateColumnsFilter(QSortFilterProxyModel* self);
QTLIBC_API void QSortFilterProxyModel_OnInvalidateColumnsFilter(QSortFilterProxyModel* self, intptr_t slot);
QTLIBC_API void QSortFilterProxyModel_QBaseInvalidateColumnsFilter(QSortFilterProxyModel* self);
QTLIBC_API QModelIndex* QSortFilterProxyModel_CreateSourceIndex(const QSortFilterProxyModel* self, int row, int col, void* internalPtr);
QTLIBC_API void QSortFilterProxyModel_OnCreateSourceIndex(const QSortFilterProxyModel* self, intptr_t slot);
QTLIBC_API QModelIndex* QSortFilterProxyModel_QBaseCreateSourceIndex(const QSortFilterProxyModel* self, int row, int col, void* internalPtr);
QTLIBC_API QModelIndex* QSortFilterProxyModel_CreateIndex(const QSortFilterProxyModel* self, int row, int column);
QTLIBC_API void QSortFilterProxyModel_OnCreateIndex(const QSortFilterProxyModel* self, intptr_t slot);
QTLIBC_API QModelIndex* QSortFilterProxyModel_QBaseCreateIndex(const QSortFilterProxyModel* self, int row, int column);
QTLIBC_API void QSortFilterProxyModel_EncodeData(const QSortFilterProxyModel* self, libqt_list /* of QModelIndex* */ indexes, QDataStream* stream);
QTLIBC_API void QSortFilterProxyModel_OnEncodeData(const QSortFilterProxyModel* self, intptr_t slot);
QTLIBC_API void QSortFilterProxyModel_QBaseEncodeData(const QSortFilterProxyModel* self, libqt_list /* of QModelIndex* */ indexes, QDataStream* stream);
QTLIBC_API bool QSortFilterProxyModel_DecodeData(QSortFilterProxyModel* self, int row, int column, QModelIndex* parent, QDataStream* stream);
QTLIBC_API void QSortFilterProxyModel_OnDecodeData(QSortFilterProxyModel* self, intptr_t slot);
QTLIBC_API bool QSortFilterProxyModel_QBaseDecodeData(QSortFilterProxyModel* self, int row, int column, QModelIndex* parent, QDataStream* stream);
QTLIBC_API void QSortFilterProxyModel_BeginInsertRows(QSortFilterProxyModel* self, QModelIndex* parent, int first, int last);
QTLIBC_API void QSortFilterProxyModel_OnBeginInsertRows(QSortFilterProxyModel* self, intptr_t slot);
QTLIBC_API void QSortFilterProxyModel_QBaseBeginInsertRows(QSortFilterProxyModel* self, QModelIndex* parent, int first, int last);
QTLIBC_API void QSortFilterProxyModel_EndInsertRows(QSortFilterProxyModel* self);
QTLIBC_API void QSortFilterProxyModel_OnEndInsertRows(QSortFilterProxyModel* self, intptr_t slot);
QTLIBC_API void QSortFilterProxyModel_QBaseEndInsertRows(QSortFilterProxyModel* self);
QTLIBC_API void QSortFilterProxyModel_BeginRemoveRows(QSortFilterProxyModel* self, QModelIndex* parent, int first, int last);
QTLIBC_API void QSortFilterProxyModel_OnBeginRemoveRows(QSortFilterProxyModel* self, intptr_t slot);
QTLIBC_API void QSortFilterProxyModel_QBaseBeginRemoveRows(QSortFilterProxyModel* self, QModelIndex* parent, int first, int last);
QTLIBC_API void QSortFilterProxyModel_EndRemoveRows(QSortFilterProxyModel* self);
QTLIBC_API void QSortFilterProxyModel_OnEndRemoveRows(QSortFilterProxyModel* self, intptr_t slot);
QTLIBC_API void QSortFilterProxyModel_QBaseEndRemoveRows(QSortFilterProxyModel* self);
QTLIBC_API bool QSortFilterProxyModel_BeginMoveRows(QSortFilterProxyModel* self, QModelIndex* sourceParent, int sourceFirst, int sourceLast, QModelIndex* destinationParent, int destinationRow);
QTLIBC_API void QSortFilterProxyModel_OnBeginMoveRows(QSortFilterProxyModel* self, intptr_t slot);
QTLIBC_API bool QSortFilterProxyModel_QBaseBeginMoveRows(QSortFilterProxyModel* self, QModelIndex* sourceParent, int sourceFirst, int sourceLast, QModelIndex* destinationParent, int destinationRow);
QTLIBC_API void QSortFilterProxyModel_EndMoveRows(QSortFilterProxyModel* self);
QTLIBC_API void QSortFilterProxyModel_OnEndMoveRows(QSortFilterProxyModel* self, intptr_t slot);
QTLIBC_API void QSortFilterProxyModel_QBaseEndMoveRows(QSortFilterProxyModel* self);
QTLIBC_API void QSortFilterProxyModel_BeginInsertColumns(QSortFilterProxyModel* self, QModelIndex* parent, int first, int last);
QTLIBC_API void QSortFilterProxyModel_OnBeginInsertColumns(QSortFilterProxyModel* self, intptr_t slot);
QTLIBC_API void QSortFilterProxyModel_QBaseBeginInsertColumns(QSortFilterProxyModel* self, QModelIndex* parent, int first, int last);
QTLIBC_API void QSortFilterProxyModel_EndInsertColumns(QSortFilterProxyModel* self);
QTLIBC_API void QSortFilterProxyModel_OnEndInsertColumns(QSortFilterProxyModel* self, intptr_t slot);
QTLIBC_API void QSortFilterProxyModel_QBaseEndInsertColumns(QSortFilterProxyModel* self);
QTLIBC_API void QSortFilterProxyModel_BeginRemoveColumns(QSortFilterProxyModel* self, QModelIndex* parent, int first, int last);
QTLIBC_API void QSortFilterProxyModel_OnBeginRemoveColumns(QSortFilterProxyModel* self, intptr_t slot);
QTLIBC_API void QSortFilterProxyModel_QBaseBeginRemoveColumns(QSortFilterProxyModel* self, QModelIndex* parent, int first, int last);
QTLIBC_API void QSortFilterProxyModel_EndRemoveColumns(QSortFilterProxyModel* self);
QTLIBC_API void QSortFilterProxyModel_OnEndRemoveColumns(QSortFilterProxyModel* self, intptr_t slot);
QTLIBC_API void QSortFilterProxyModel_QBaseEndRemoveColumns(QSortFilterProxyModel* self);
QTLIBC_API bool QSortFilterProxyModel_BeginMoveColumns(QSortFilterProxyModel* self, QModelIndex* sourceParent, int sourceFirst, int sourceLast, QModelIndex* destinationParent, int destinationColumn);
QTLIBC_API void QSortFilterProxyModel_OnBeginMoveColumns(QSortFilterProxyModel* self, intptr_t slot);
QTLIBC_API bool QSortFilterProxyModel_QBaseBeginMoveColumns(QSortFilterProxyModel* self, QModelIndex* sourceParent, int sourceFirst, int sourceLast, QModelIndex* destinationParent, int destinationColumn);
QTLIBC_API void QSortFilterProxyModel_EndMoveColumns(QSortFilterProxyModel* self);
QTLIBC_API void QSortFilterProxyModel_OnEndMoveColumns(QSortFilterProxyModel* self, intptr_t slot);
QTLIBC_API void QSortFilterProxyModel_QBaseEndMoveColumns(QSortFilterProxyModel* self);
QTLIBC_API void QSortFilterProxyModel_BeginResetModel(QSortFilterProxyModel* self);
QTLIBC_API void QSortFilterProxyModel_OnBeginResetModel(QSortFilterProxyModel* self, intptr_t slot);
QTLIBC_API void QSortFilterProxyModel_QBaseBeginResetModel(QSortFilterProxyModel* self);
QTLIBC_API void QSortFilterProxyModel_EndResetModel(QSortFilterProxyModel* self);
QTLIBC_API void QSortFilterProxyModel_OnEndResetModel(QSortFilterProxyModel* self, intptr_t slot);
QTLIBC_API void QSortFilterProxyModel_QBaseEndResetModel(QSortFilterProxyModel* self);
QTLIBC_API void QSortFilterProxyModel_ChangePersistentIndex(QSortFilterProxyModel* self, QModelIndex* from, QModelIndex* to);
QTLIBC_API void QSortFilterProxyModel_OnChangePersistentIndex(QSortFilterProxyModel* self, intptr_t slot);
QTLIBC_API void QSortFilterProxyModel_QBaseChangePersistentIndex(QSortFilterProxyModel* self, QModelIndex* from, QModelIndex* to);
QTLIBC_API void QSortFilterProxyModel_ChangePersistentIndexList(QSortFilterProxyModel* self, libqt_list /* of QModelIndex* */ from, libqt_list /* of QModelIndex* */ to);
QTLIBC_API void QSortFilterProxyModel_OnChangePersistentIndexList(QSortFilterProxyModel* self, intptr_t slot);
QTLIBC_API void QSortFilterProxyModel_QBaseChangePersistentIndexList(QSortFilterProxyModel* self, libqt_list /* of QModelIndex* */ from, libqt_list /* of QModelIndex* */ to);
QTLIBC_API libqt_list /* of QModelIndex* */ QSortFilterProxyModel_PersistentIndexList(const QSortFilterProxyModel* self);
QTLIBC_API void QSortFilterProxyModel_OnPersistentIndexList(const QSortFilterProxyModel* self, intptr_t slot);
QTLIBC_API libqt_list /* of QModelIndex* */ QSortFilterProxyModel_QBasePersistentIndexList(const QSortFilterProxyModel* self);
QTLIBC_API QObject* QSortFilterProxyModel_Sender(const QSortFilterProxyModel* self);
QTLIBC_API void QSortFilterProxyModel_OnSender(const QSortFilterProxyModel* self, intptr_t slot);
QTLIBC_API QObject* QSortFilterProxyModel_QBaseSender(const QSortFilterProxyModel* self);
QTLIBC_API int QSortFilterProxyModel_SenderSignalIndex(const QSortFilterProxyModel* self);
QTLIBC_API void QSortFilterProxyModel_OnSenderSignalIndex(const QSortFilterProxyModel* self, intptr_t slot);
QTLIBC_API int QSortFilterProxyModel_QBaseSenderSignalIndex(const QSortFilterProxyModel* self);
QTLIBC_API int QSortFilterProxyModel_Receivers(const QSortFilterProxyModel* self, const char* signal);
QTLIBC_API void QSortFilterProxyModel_OnReceivers(const QSortFilterProxyModel* self, intptr_t slot);
QTLIBC_API int QSortFilterProxyModel_QBaseReceivers(const QSortFilterProxyModel* self, const char* signal);
QTLIBC_API bool QSortFilterProxyModel_IsSignalConnected(const QSortFilterProxyModel* self, QMetaMethod* signal);
QTLIBC_API void QSortFilterProxyModel_OnIsSignalConnected(const QSortFilterProxyModel* self, intptr_t slot);
QTLIBC_API bool QSortFilterProxyModel_QBaseIsSignalConnected(const QSortFilterProxyModel* self, QMetaMethod* signal);
QTLIBC_API void QSortFilterProxyModel_Delete(QSortFilterProxyModel* self);

#ifdef __cplusplus
} /* extern C */
#endif

#endif
