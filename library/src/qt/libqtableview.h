#pragma once
#ifndef SRC_QTC_LIBQTABLEVIEW_H
#define SRC_QTC_LIBQTABLEVIEW_H

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>

#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

#include "qtlibc.h"

#ifdef __cplusplus
extern "C" {
#endif

#ifdef __cplusplus
#if defined(WORKAROUND_INNER_CLASS_DEFINITION_QMetaObject__Connection)
typedef QMetaObject::Connection QMetaObject__Connection;
#endif
#else
typedef struct QAbstractItemDelegate QAbstractItemDelegate;
typedef struct QAbstractItemModel QAbstractItemModel;
typedef struct QAbstractItemView QAbstractItemView;
typedef struct QAbstractScrollArea QAbstractScrollArea;
typedef struct QAction QAction;
typedef struct QActionEvent QActionEvent;
typedef struct QAnyStringView QAnyStringView;
typedef struct QBackingStore QBackingStore;
typedef struct QBindingStorage QBindingStorage;
typedef struct QBitmap QBitmap;
typedef struct QChildEvent QChildEvent;
typedef struct QCloseEvent QCloseEvent;
typedef struct QContextMenuEvent QContextMenuEvent;
typedef struct QCursor QCursor;
typedef struct QDragEnterEvent QDragEnterEvent;
typedef struct QDragLeaveEvent QDragLeaveEvent;
typedef struct QDragMoveEvent QDragMoveEvent;
typedef struct QDropEvent QDropEvent;
typedef struct QEnterEvent QEnterEvent;
typedef struct QEvent QEvent;
typedef struct QFocusEvent QFocusEvent;
typedef struct QFont QFont;
typedef struct QFontInfo QFontInfo;
typedef struct QFontMetrics QFontMetrics;
typedef struct QFrame QFrame;
typedef struct QGraphicsEffect QGraphicsEffect;
typedef struct QGraphicsProxyWidget QGraphicsProxyWidget;
typedef struct QHeaderView QHeaderView;
typedef struct QHideEvent QHideEvent;
typedef struct QIcon QIcon;
typedef struct QInputMethodEvent QInputMethodEvent;
typedef struct QItemSelection QItemSelection;
typedef struct QItemSelectionModel QItemSelectionModel;
typedef struct QKeyEvent QKeyEvent;
typedef struct QKeySequence QKeySequence;
typedef struct QLayout QLayout;
typedef struct QLocale QLocale;
typedef struct QMargins QMargins;
typedef struct QMetaMethod QMetaMethod;
typedef struct QMetaObject QMetaObject;
typedef struct QMetaObject__Connection QMetaObject__Connection;
typedef struct QModelIndex QModelIndex;
typedef struct QMouseEvent QMouseEvent;
typedef struct QMoveEvent QMoveEvent;
typedef struct QObject QObject;
typedef struct QPaintDevice QPaintDevice;
typedef struct QPaintEngine QPaintEngine;
typedef struct QPaintEvent QPaintEvent;
typedef struct QPainter QPainter;
typedef struct QPalette QPalette;
typedef struct QPixmap QPixmap;
typedef struct QPoint QPoint;
typedef struct QPointF QPointF;
typedef struct QRect QRect;
typedef struct QRegion QRegion;
typedef struct QResizeEvent QResizeEvent;
typedef struct QScreen QScreen;
typedef struct QScrollBar QScrollBar;
typedef struct QShowEvent QShowEvent;
typedef struct QSize QSize;
typedef struct QSizePolicy QSizePolicy;
typedef struct QStyle QStyle;
typedef struct QStyleOptionFrame QStyleOptionFrame;
typedef struct QStyleOptionViewItem QStyleOptionViewItem;
typedef struct QTableView QTableView;
typedef struct QTabletEvent QTabletEvent;
typedef struct QThread QThread;
typedef struct QTimerEvent QTimerEvent;
typedef struct QVariant QVariant;
typedef struct QWheelEvent QWheelEvent;
typedef struct QWidget QWidget;
typedef struct QWindow QWindow;
#endif

QTLIBC_API QTableView* QTableView_new(QWidget* parent);
QTLIBC_API QTableView* QTableView_new2();
QTLIBC_API QMetaObject* QTableView_MetaObject(const QTableView* self);
QTLIBC_API void* QTableView_Metacast(QTableView* self, const char* param1);
QTLIBC_API int QTableView_Metacall(QTableView* self, int param1, int param2, void** param3);
QTLIBC_API void QTableView_OnMetacall(QTableView* self, intptr_t slot);
QTLIBC_API int QTableView_QBaseMetacall(QTableView* self, int param1, int param2, void** param3);
QTLIBC_API libqt_string QTableView_Tr(const char* s);
QTLIBC_API void QTableView_SetModel(QTableView* self, QAbstractItemModel* model);
QTLIBC_API void QTableView_OnSetModel(QTableView* self, intptr_t slot);
QTLIBC_API void QTableView_QBaseSetModel(QTableView* self, QAbstractItemModel* model);
QTLIBC_API void QTableView_SetRootIndex(QTableView* self, QModelIndex* index);
QTLIBC_API void QTableView_OnSetRootIndex(QTableView* self, intptr_t slot);
QTLIBC_API void QTableView_QBaseSetRootIndex(QTableView* self, QModelIndex* index);
QTLIBC_API void QTableView_SetSelectionModel(QTableView* self, QItemSelectionModel* selectionModel);
QTLIBC_API void QTableView_OnSetSelectionModel(QTableView* self, intptr_t slot);
QTLIBC_API void QTableView_QBaseSetSelectionModel(QTableView* self, QItemSelectionModel* selectionModel);
QTLIBC_API void QTableView_DoItemsLayout(QTableView* self);
QTLIBC_API void QTableView_OnDoItemsLayout(QTableView* self, intptr_t slot);
QTLIBC_API void QTableView_QBaseDoItemsLayout(QTableView* self);
QTLIBC_API QHeaderView* QTableView_HorizontalHeader(const QTableView* self);
QTLIBC_API QHeaderView* QTableView_VerticalHeader(const QTableView* self);
QTLIBC_API void QTableView_SetHorizontalHeader(QTableView* self, QHeaderView* header);
QTLIBC_API void QTableView_SetVerticalHeader(QTableView* self, QHeaderView* header);
QTLIBC_API int QTableView_RowViewportPosition(const QTableView* self, int row);
QTLIBC_API int QTableView_RowAt(const QTableView* self, int y);
QTLIBC_API void QTableView_SetRowHeight(QTableView* self, int row, int height);
QTLIBC_API int QTableView_RowHeight(const QTableView* self, int row);
QTLIBC_API int QTableView_ColumnViewportPosition(const QTableView* self, int column);
QTLIBC_API int QTableView_ColumnAt(const QTableView* self, int x);
QTLIBC_API void QTableView_SetColumnWidth(QTableView* self, int column, int width);
QTLIBC_API int QTableView_ColumnWidth(const QTableView* self, int column);
QTLIBC_API bool QTableView_IsRowHidden(const QTableView* self, int row);
QTLIBC_API void QTableView_SetRowHidden(QTableView* self, int row, bool hide);
QTLIBC_API bool QTableView_IsColumnHidden(const QTableView* self, int column);
QTLIBC_API void QTableView_SetColumnHidden(QTableView* self, int column, bool hide);
QTLIBC_API void QTableView_SetSortingEnabled(QTableView* self, bool enable);
QTLIBC_API bool QTableView_IsSortingEnabled(const QTableView* self);
QTLIBC_API bool QTableView_ShowGrid(const QTableView* self);
QTLIBC_API int QTableView_GridStyle(const QTableView* self);
QTLIBC_API void QTableView_SetGridStyle(QTableView* self, int style);
QTLIBC_API void QTableView_SetWordWrap(QTableView* self, bool on);
QTLIBC_API bool QTableView_WordWrap(const QTableView* self);
QTLIBC_API void QTableView_SetCornerButtonEnabled(QTableView* self, bool enable);
QTLIBC_API bool QTableView_IsCornerButtonEnabled(const QTableView* self);
QTLIBC_API QRect* QTableView_VisualRect(const QTableView* self, QModelIndex* index);
QTLIBC_API void QTableView_OnVisualRect(const QTableView* self, intptr_t slot);
QTLIBC_API QRect* QTableView_QBaseVisualRect(const QTableView* self, QModelIndex* index);
QTLIBC_API void QTableView_ScrollTo(QTableView* self, QModelIndex* index, int hint);
QTLIBC_API void QTableView_OnScrollTo(QTableView* self, intptr_t slot);
QTLIBC_API void QTableView_QBaseScrollTo(QTableView* self, QModelIndex* index, int hint);
QTLIBC_API QModelIndex* QTableView_IndexAt(const QTableView* self, QPoint* p);
QTLIBC_API void QTableView_OnIndexAt(const QTableView* self, intptr_t slot);
QTLIBC_API QModelIndex* QTableView_QBaseIndexAt(const QTableView* self, QPoint* p);
QTLIBC_API void QTableView_SetSpan(QTableView* self, int row, int column, int rowSpan, int columnSpan);
QTLIBC_API int QTableView_RowSpan(const QTableView* self, int row, int column);
QTLIBC_API int QTableView_ColumnSpan(const QTableView* self, int row, int column);
QTLIBC_API void QTableView_ClearSpans(QTableView* self);
QTLIBC_API void QTableView_SelectRow(QTableView* self, int row);
QTLIBC_API void QTableView_SelectColumn(QTableView* self, int column);
QTLIBC_API void QTableView_HideRow(QTableView* self, int row);
QTLIBC_API void QTableView_HideColumn(QTableView* self, int column);
QTLIBC_API void QTableView_ShowRow(QTableView* self, int row);
QTLIBC_API void QTableView_ShowColumn(QTableView* self, int column);
QTLIBC_API void QTableView_ResizeRowToContents(QTableView* self, int row);
QTLIBC_API void QTableView_ResizeRowsToContents(QTableView* self);
QTLIBC_API void QTableView_ResizeColumnToContents(QTableView* self, int column);
QTLIBC_API void QTableView_ResizeColumnsToContents(QTableView* self);
QTLIBC_API void QTableView_SortByColumn(QTableView* self, int column, int order);
QTLIBC_API void QTableView_SetShowGrid(QTableView* self, bool show);
QTLIBC_API void QTableView_ScrollContentsBy(QTableView* self, int dx, int dy);
QTLIBC_API void QTableView_OnScrollContentsBy(QTableView* self, intptr_t slot);
QTLIBC_API void QTableView_QBaseScrollContentsBy(QTableView* self, int dx, int dy);
QTLIBC_API void QTableView_InitViewItemOption(const QTableView* self, QStyleOptionViewItem* option);
QTLIBC_API void QTableView_OnInitViewItemOption(const QTableView* self, intptr_t slot);
QTLIBC_API void QTableView_QBaseInitViewItemOption(const QTableView* self, QStyleOptionViewItem* option);
QTLIBC_API void QTableView_PaintEvent(QTableView* self, QPaintEvent* e);
QTLIBC_API void QTableView_OnPaintEvent(QTableView* self, intptr_t slot);
QTLIBC_API void QTableView_QBasePaintEvent(QTableView* self, QPaintEvent* e);
QTLIBC_API void QTableView_TimerEvent(QTableView* self, QTimerEvent* event);
QTLIBC_API void QTableView_OnTimerEvent(QTableView* self, intptr_t slot);
QTLIBC_API void QTableView_QBaseTimerEvent(QTableView* self, QTimerEvent* event);
QTLIBC_API int QTableView_HorizontalOffset(const QTableView* self);
QTLIBC_API void QTableView_OnHorizontalOffset(const QTableView* self, intptr_t slot);
QTLIBC_API int QTableView_QBaseHorizontalOffset(const QTableView* self);
QTLIBC_API int QTableView_VerticalOffset(const QTableView* self);
QTLIBC_API void QTableView_OnVerticalOffset(const QTableView* self, intptr_t slot);
QTLIBC_API int QTableView_QBaseVerticalOffset(const QTableView* self);
QTLIBC_API QModelIndex* QTableView_MoveCursor(QTableView* self, int cursorAction, int modifiers);
QTLIBC_API void QTableView_OnMoveCursor(QTableView* self, intptr_t slot);
QTLIBC_API QModelIndex* QTableView_QBaseMoveCursor(QTableView* self, int cursorAction, int modifiers);
QTLIBC_API void QTableView_SetSelection(QTableView* self, QRect* rect, int command);
QTLIBC_API void QTableView_OnSetSelection(QTableView* self, intptr_t slot);
QTLIBC_API void QTableView_QBaseSetSelection(QTableView* self, QRect* rect, int command);
QTLIBC_API QRegion* QTableView_VisualRegionForSelection(const QTableView* self, QItemSelection* selection);
QTLIBC_API void QTableView_OnVisualRegionForSelection(const QTableView* self, intptr_t slot);
QTLIBC_API QRegion* QTableView_QBaseVisualRegionForSelection(const QTableView* self, QItemSelection* selection);
QTLIBC_API libqt_list /* of QModelIndex* */ QTableView_SelectedIndexes(const QTableView* self);
QTLIBC_API void QTableView_OnSelectedIndexes(const QTableView* self, intptr_t slot);
QTLIBC_API libqt_list /* of QModelIndex* */ QTableView_QBaseSelectedIndexes(const QTableView* self);
QTLIBC_API void QTableView_UpdateGeometries(QTableView* self);
QTLIBC_API void QTableView_OnUpdateGeometries(QTableView* self, intptr_t slot);
QTLIBC_API void QTableView_QBaseUpdateGeometries(QTableView* self);
QTLIBC_API QSize* QTableView_ViewportSizeHint(const QTableView* self);
QTLIBC_API void QTableView_OnViewportSizeHint(const QTableView* self, intptr_t slot);
QTLIBC_API QSize* QTableView_QBaseViewportSizeHint(const QTableView* self);
QTLIBC_API int QTableView_SizeHintForRow(const QTableView* self, int row);
QTLIBC_API void QTableView_OnSizeHintForRow(const QTableView* self, intptr_t slot);
QTLIBC_API int QTableView_QBaseSizeHintForRow(const QTableView* self, int row);
QTLIBC_API int QTableView_SizeHintForColumn(const QTableView* self, int column);
QTLIBC_API void QTableView_OnSizeHintForColumn(const QTableView* self, intptr_t slot);
QTLIBC_API int QTableView_QBaseSizeHintForColumn(const QTableView* self, int column);
QTLIBC_API void QTableView_VerticalScrollbarAction(QTableView* self, int action);
QTLIBC_API void QTableView_OnVerticalScrollbarAction(QTableView* self, intptr_t slot);
QTLIBC_API void QTableView_QBaseVerticalScrollbarAction(QTableView* self, int action);
QTLIBC_API void QTableView_HorizontalScrollbarAction(QTableView* self, int action);
QTLIBC_API void QTableView_OnHorizontalScrollbarAction(QTableView* self, intptr_t slot);
QTLIBC_API void QTableView_QBaseHorizontalScrollbarAction(QTableView* self, int action);
QTLIBC_API bool QTableView_IsIndexHidden(const QTableView* self, QModelIndex* index);
QTLIBC_API void QTableView_OnIsIndexHidden(const QTableView* self, intptr_t slot);
QTLIBC_API bool QTableView_QBaseIsIndexHidden(const QTableView* self, QModelIndex* index);
QTLIBC_API void QTableView_SelectionChanged(QTableView* self, QItemSelection* selected, QItemSelection* deselected);
QTLIBC_API void QTableView_OnSelectionChanged(QTableView* self, intptr_t slot);
QTLIBC_API void QTableView_QBaseSelectionChanged(QTableView* self, QItemSelection* selected, QItemSelection* deselected);
QTLIBC_API void QTableView_CurrentChanged(QTableView* self, QModelIndex* current, QModelIndex* previous);
QTLIBC_API void QTableView_OnCurrentChanged(QTableView* self, intptr_t slot);
QTLIBC_API void QTableView_QBaseCurrentChanged(QTableView* self, QModelIndex* current, QModelIndex* previous);
QTLIBC_API libqt_string QTableView_Tr2(const char* s, const char* c);
QTLIBC_API libqt_string QTableView_Tr3(const char* s, const char* c, int n);
QTLIBC_API void QTableView_KeyboardSearch(QTableView* self, libqt_string search);
QTLIBC_API void QTableView_OnKeyboardSearch(QTableView* self, intptr_t slot);
QTLIBC_API void QTableView_QBaseKeyboardSearch(QTableView* self, libqt_string search);
QTLIBC_API QAbstractItemDelegate* QTableView_ItemDelegateForIndex(const QTableView* self, QModelIndex* index);
QTLIBC_API void QTableView_OnItemDelegateForIndex(const QTableView* self, intptr_t slot);
QTLIBC_API QAbstractItemDelegate* QTableView_QBaseItemDelegateForIndex(const QTableView* self, QModelIndex* index);
QTLIBC_API QVariant* QTableView_InputMethodQuery(const QTableView* self, int query);
QTLIBC_API void QTableView_OnInputMethodQuery(const QTableView* self, intptr_t slot);
QTLIBC_API QVariant* QTableView_QBaseInputMethodQuery(const QTableView* self, int query);
QTLIBC_API void QTableView_Reset(QTableView* self);
QTLIBC_API void QTableView_OnReset(QTableView* self, intptr_t slot);
QTLIBC_API void QTableView_QBaseReset(QTableView* self);
QTLIBC_API void QTableView_SelectAll(QTableView* self);
QTLIBC_API void QTableView_OnSelectAll(QTableView* self, intptr_t slot);
QTLIBC_API void QTableView_QBaseSelectAll(QTableView* self);
QTLIBC_API void QTableView_DataChanged(QTableView* self, QModelIndex* topLeft, QModelIndex* bottomRight, libqt_list /* of int */ roles);
QTLIBC_API void QTableView_OnDataChanged(QTableView* self, intptr_t slot);
QTLIBC_API void QTableView_QBaseDataChanged(QTableView* self, QModelIndex* topLeft, QModelIndex* bottomRight, libqt_list /* of int */ roles);
QTLIBC_API void QTableView_RowsInserted(QTableView* self, QModelIndex* parent, int start, int end);
QTLIBC_API void QTableView_OnRowsInserted(QTableView* self, intptr_t slot);
QTLIBC_API void QTableView_QBaseRowsInserted(QTableView* self, QModelIndex* parent, int start, int end);
QTLIBC_API void QTableView_RowsAboutToBeRemoved(QTableView* self, QModelIndex* parent, int start, int end);
QTLIBC_API void QTableView_OnRowsAboutToBeRemoved(QTableView* self, intptr_t slot);
QTLIBC_API void QTableView_QBaseRowsAboutToBeRemoved(QTableView* self, QModelIndex* parent, int start, int end);
QTLIBC_API void QTableView_UpdateEditorData(QTableView* self);
QTLIBC_API void QTableView_OnUpdateEditorData(QTableView* self, intptr_t slot);
QTLIBC_API void QTableView_QBaseUpdateEditorData(QTableView* self);
QTLIBC_API void QTableView_UpdateEditorGeometries(QTableView* self);
QTLIBC_API void QTableView_OnUpdateEditorGeometries(QTableView* self, intptr_t slot);
QTLIBC_API void QTableView_QBaseUpdateEditorGeometries(QTableView* self);
QTLIBC_API void QTableView_VerticalScrollbarValueChanged(QTableView* self, int value);
QTLIBC_API void QTableView_OnVerticalScrollbarValueChanged(QTableView* self, intptr_t slot);
QTLIBC_API void QTableView_QBaseVerticalScrollbarValueChanged(QTableView* self, int value);
QTLIBC_API void QTableView_HorizontalScrollbarValueChanged(QTableView* self, int value);
QTLIBC_API void QTableView_OnHorizontalScrollbarValueChanged(QTableView* self, intptr_t slot);
QTLIBC_API void QTableView_QBaseHorizontalScrollbarValueChanged(QTableView* self, int value);
QTLIBC_API void QTableView_CloseEditor(QTableView* self, QWidget* editor, int hint);
QTLIBC_API void QTableView_OnCloseEditor(QTableView* self, intptr_t slot);
QTLIBC_API void QTableView_QBaseCloseEditor(QTableView* self, QWidget* editor, int hint);
QTLIBC_API void QTableView_CommitData(QTableView* self, QWidget* editor);
QTLIBC_API void QTableView_OnCommitData(QTableView* self, intptr_t slot);
QTLIBC_API void QTableView_QBaseCommitData(QTableView* self, QWidget* editor);
QTLIBC_API void QTableView_EditorDestroyed(QTableView* self, QObject* editor);
QTLIBC_API void QTableView_OnEditorDestroyed(QTableView* self, intptr_t slot);
QTLIBC_API void QTableView_QBaseEditorDestroyed(QTableView* self, QObject* editor);
QTLIBC_API bool QTableView_Edit2(QTableView* self, QModelIndex* index, int trigger, QEvent* event);
QTLIBC_API void QTableView_OnEdit2(QTableView* self, intptr_t slot);
QTLIBC_API bool QTableView_QBaseEdit2(QTableView* self, QModelIndex* index, int trigger, QEvent* event);
QTLIBC_API void QTableView_StartDrag(QTableView* self, int supportedActions);
QTLIBC_API void QTableView_OnStartDrag(QTableView* self, intptr_t slot);
QTLIBC_API void QTableView_QBaseStartDrag(QTableView* self, int supportedActions);
QTLIBC_API bool QTableView_FocusNextPrevChild(QTableView* self, bool next);
QTLIBC_API void QTableView_OnFocusNextPrevChild(QTableView* self, intptr_t slot);
QTLIBC_API bool QTableView_QBaseFocusNextPrevChild(QTableView* self, bool next);
QTLIBC_API bool QTableView_Event(QTableView* self, QEvent* event);
QTLIBC_API void QTableView_OnEvent(QTableView* self, intptr_t slot);
QTLIBC_API bool QTableView_QBaseEvent(QTableView* self, QEvent* event);
QTLIBC_API bool QTableView_ViewportEvent(QTableView* self, QEvent* event);
QTLIBC_API void QTableView_OnViewportEvent(QTableView* self, intptr_t slot);
QTLIBC_API bool QTableView_QBaseViewportEvent(QTableView* self, QEvent* event);
QTLIBC_API void QTableView_MousePressEvent(QTableView* self, QMouseEvent* event);
QTLIBC_API void QTableView_OnMousePressEvent(QTableView* self, intptr_t slot);
QTLIBC_API void QTableView_QBaseMousePressEvent(QTableView* self, QMouseEvent* event);
QTLIBC_API void QTableView_MouseMoveEvent(QTableView* self, QMouseEvent* event);
QTLIBC_API void QTableView_OnMouseMoveEvent(QTableView* self, intptr_t slot);
QTLIBC_API void QTableView_QBaseMouseMoveEvent(QTableView* self, QMouseEvent* event);
QTLIBC_API void QTableView_MouseReleaseEvent(QTableView* self, QMouseEvent* event);
QTLIBC_API void QTableView_OnMouseReleaseEvent(QTableView* self, intptr_t slot);
QTLIBC_API void QTableView_QBaseMouseReleaseEvent(QTableView* self, QMouseEvent* event);
QTLIBC_API void QTableView_MouseDoubleClickEvent(QTableView* self, QMouseEvent* event);
QTLIBC_API void QTableView_OnMouseDoubleClickEvent(QTableView* self, intptr_t slot);
QTLIBC_API void QTableView_QBaseMouseDoubleClickEvent(QTableView* self, QMouseEvent* event);
QTLIBC_API void QTableView_DragEnterEvent(QTableView* self, QDragEnterEvent* event);
QTLIBC_API void QTableView_OnDragEnterEvent(QTableView* self, intptr_t slot);
QTLIBC_API void QTableView_QBaseDragEnterEvent(QTableView* self, QDragEnterEvent* event);
QTLIBC_API void QTableView_DragMoveEvent(QTableView* self, QDragMoveEvent* event);
QTLIBC_API void QTableView_OnDragMoveEvent(QTableView* self, intptr_t slot);
QTLIBC_API void QTableView_QBaseDragMoveEvent(QTableView* self, QDragMoveEvent* event);
QTLIBC_API void QTableView_DragLeaveEvent(QTableView* self, QDragLeaveEvent* event);
QTLIBC_API void QTableView_OnDragLeaveEvent(QTableView* self, intptr_t slot);
QTLIBC_API void QTableView_QBaseDragLeaveEvent(QTableView* self, QDragLeaveEvent* event);
QTLIBC_API void QTableView_DropEvent(QTableView* self, QDropEvent* event);
QTLIBC_API void QTableView_OnDropEvent(QTableView* self, intptr_t slot);
QTLIBC_API void QTableView_QBaseDropEvent(QTableView* self, QDropEvent* event);
QTLIBC_API void QTableView_FocusInEvent(QTableView* self, QFocusEvent* event);
QTLIBC_API void QTableView_OnFocusInEvent(QTableView* self, intptr_t slot);
QTLIBC_API void QTableView_QBaseFocusInEvent(QTableView* self, QFocusEvent* event);
QTLIBC_API void QTableView_FocusOutEvent(QTableView* self, QFocusEvent* event);
QTLIBC_API void QTableView_OnFocusOutEvent(QTableView* self, intptr_t slot);
QTLIBC_API void QTableView_QBaseFocusOutEvent(QTableView* self, QFocusEvent* event);
QTLIBC_API void QTableView_KeyPressEvent(QTableView* self, QKeyEvent* event);
QTLIBC_API void QTableView_OnKeyPressEvent(QTableView* self, intptr_t slot);
QTLIBC_API void QTableView_QBaseKeyPressEvent(QTableView* self, QKeyEvent* event);
QTLIBC_API void QTableView_ResizeEvent(QTableView* self, QResizeEvent* event);
QTLIBC_API void QTableView_OnResizeEvent(QTableView* self, intptr_t slot);
QTLIBC_API void QTableView_QBaseResizeEvent(QTableView* self, QResizeEvent* event);
QTLIBC_API void QTableView_InputMethodEvent(QTableView* self, QInputMethodEvent* event);
QTLIBC_API void QTableView_OnInputMethodEvent(QTableView* self, intptr_t slot);
QTLIBC_API void QTableView_QBaseInputMethodEvent(QTableView* self, QInputMethodEvent* event);
QTLIBC_API bool QTableView_EventFilter(QTableView* self, QObject* object, QEvent* event);
QTLIBC_API void QTableView_OnEventFilter(QTableView* self, intptr_t slot);
QTLIBC_API bool QTableView_QBaseEventFilter(QTableView* self, QObject* object, QEvent* event);
QTLIBC_API QSize* QTableView_MinimumSizeHint(const QTableView* self);
QTLIBC_API void QTableView_OnMinimumSizeHint(const QTableView* self, intptr_t slot);
QTLIBC_API QSize* QTableView_QBaseMinimumSizeHint(const QTableView* self);
QTLIBC_API QSize* QTableView_SizeHint(const QTableView* self);
QTLIBC_API void QTableView_OnSizeHint(const QTableView* self, intptr_t slot);
QTLIBC_API QSize* QTableView_QBaseSizeHint(const QTableView* self);
QTLIBC_API void QTableView_SetupViewport(QTableView* self, QWidget* viewport);
QTLIBC_API void QTableView_OnSetupViewport(QTableView* self, intptr_t slot);
QTLIBC_API void QTableView_QBaseSetupViewport(QTableView* self, QWidget* viewport);
QTLIBC_API void QTableView_WheelEvent(QTableView* self, QWheelEvent* param1);
QTLIBC_API void QTableView_OnWheelEvent(QTableView* self, intptr_t slot);
QTLIBC_API void QTableView_QBaseWheelEvent(QTableView* self, QWheelEvent* param1);
QTLIBC_API void QTableView_ContextMenuEvent(QTableView* self, QContextMenuEvent* param1);
QTLIBC_API void QTableView_OnContextMenuEvent(QTableView* self, intptr_t slot);
QTLIBC_API void QTableView_QBaseContextMenuEvent(QTableView* self, QContextMenuEvent* param1);
QTLIBC_API void QTableView_ChangeEvent(QTableView* self, QEvent* param1);
QTLIBC_API void QTableView_OnChangeEvent(QTableView* self, intptr_t slot);
QTLIBC_API void QTableView_QBaseChangeEvent(QTableView* self, QEvent* param1);
QTLIBC_API int QTableView_DevType(const QTableView* self);
QTLIBC_API void QTableView_OnDevType(const QTableView* self, intptr_t slot);
QTLIBC_API int QTableView_QBaseDevType(const QTableView* self);
QTLIBC_API void QTableView_SetVisible(QTableView* self, bool visible);
QTLIBC_API void QTableView_OnSetVisible(QTableView* self, intptr_t slot);
QTLIBC_API void QTableView_QBaseSetVisible(QTableView* self, bool visible);
QTLIBC_API int QTableView_HeightForWidth(const QTableView* self, int param1);
QTLIBC_API void QTableView_OnHeightForWidth(const QTableView* self, intptr_t slot);
QTLIBC_API int QTableView_QBaseHeightForWidth(const QTableView* self, int param1);
QTLIBC_API bool QTableView_HasHeightForWidth(const QTableView* self);
QTLIBC_API void QTableView_OnHasHeightForWidth(const QTableView* self, intptr_t slot);
QTLIBC_API bool QTableView_QBaseHasHeightForWidth(const QTableView* self);
QTLIBC_API QPaintEngine* QTableView_PaintEngine(const QTableView* self);
QTLIBC_API void QTableView_OnPaintEngine(const QTableView* self, intptr_t slot);
QTLIBC_API QPaintEngine* QTableView_QBasePaintEngine(const QTableView* self);
QTLIBC_API void QTableView_KeyReleaseEvent(QTableView* self, QKeyEvent* event);
QTLIBC_API void QTableView_OnKeyReleaseEvent(QTableView* self, intptr_t slot);
QTLIBC_API void QTableView_QBaseKeyReleaseEvent(QTableView* self, QKeyEvent* event);
QTLIBC_API void QTableView_EnterEvent(QTableView* self, QEnterEvent* event);
QTLIBC_API void QTableView_OnEnterEvent(QTableView* self, intptr_t slot);
QTLIBC_API void QTableView_QBaseEnterEvent(QTableView* self, QEnterEvent* event);
QTLIBC_API void QTableView_LeaveEvent(QTableView* self, QEvent* event);
QTLIBC_API void QTableView_OnLeaveEvent(QTableView* self, intptr_t slot);
QTLIBC_API void QTableView_QBaseLeaveEvent(QTableView* self, QEvent* event);
QTLIBC_API void QTableView_MoveEvent(QTableView* self, QMoveEvent* event);
QTLIBC_API void QTableView_OnMoveEvent(QTableView* self, intptr_t slot);
QTLIBC_API void QTableView_QBaseMoveEvent(QTableView* self, QMoveEvent* event);
QTLIBC_API void QTableView_CloseEvent(QTableView* self, QCloseEvent* event);
QTLIBC_API void QTableView_OnCloseEvent(QTableView* self, intptr_t slot);
QTLIBC_API void QTableView_QBaseCloseEvent(QTableView* self, QCloseEvent* event);
QTLIBC_API void QTableView_TabletEvent(QTableView* self, QTabletEvent* event);
QTLIBC_API void QTableView_OnTabletEvent(QTableView* self, intptr_t slot);
QTLIBC_API void QTableView_QBaseTabletEvent(QTableView* self, QTabletEvent* event);
QTLIBC_API void QTableView_ActionEvent(QTableView* self, QActionEvent* event);
QTLIBC_API void QTableView_OnActionEvent(QTableView* self, intptr_t slot);
QTLIBC_API void QTableView_QBaseActionEvent(QTableView* self, QActionEvent* event);
QTLIBC_API void QTableView_ShowEvent(QTableView* self, QShowEvent* event);
QTLIBC_API void QTableView_OnShowEvent(QTableView* self, intptr_t slot);
QTLIBC_API void QTableView_QBaseShowEvent(QTableView* self, QShowEvent* event);
QTLIBC_API void QTableView_HideEvent(QTableView* self, QHideEvent* event);
QTLIBC_API void QTableView_OnHideEvent(QTableView* self, intptr_t slot);
QTLIBC_API void QTableView_QBaseHideEvent(QTableView* self, QHideEvent* event);
QTLIBC_API bool QTableView_NativeEvent(QTableView* self, libqt_string eventType, void* message, intptr_t* result);
QTLIBC_API void QTableView_OnNativeEvent(QTableView* self, intptr_t slot);
QTLIBC_API bool QTableView_QBaseNativeEvent(QTableView* self, libqt_string eventType, void* message, intptr_t* result);
QTLIBC_API void QTableView_ChildEvent(QTableView* self, QChildEvent* event);
QTLIBC_API void QTableView_OnChildEvent(QTableView* self, intptr_t slot);
QTLIBC_API void QTableView_QBaseChildEvent(QTableView* self, QChildEvent* event);
QTLIBC_API void QTableView_CustomEvent(QTableView* self, QEvent* event);
QTLIBC_API void QTableView_OnCustomEvent(QTableView* self, intptr_t slot);
QTLIBC_API void QTableView_QBaseCustomEvent(QTableView* self, QEvent* event);
QTLIBC_API void QTableView_ConnectNotify(QTableView* self, QMetaMethod* signal);
QTLIBC_API void QTableView_OnConnectNotify(QTableView* self, intptr_t slot);
QTLIBC_API void QTableView_QBaseConnectNotify(QTableView* self, QMetaMethod* signal);
QTLIBC_API void QTableView_DisconnectNotify(QTableView* self, QMetaMethod* signal);
QTLIBC_API void QTableView_OnDisconnectNotify(QTableView* self, intptr_t slot);
QTLIBC_API void QTableView_QBaseDisconnectNotify(QTableView* self, QMetaMethod* signal);
QTLIBC_API int QTableView_SelectionCommand(const QTableView* self, QModelIndex* index, QEvent* event);
QTLIBC_API void QTableView_OnSelectionCommand(const QTableView* self, intptr_t slot);
QTLIBC_API int QTableView_QBaseSelectionCommand(const QTableView* self, QModelIndex* index, QEvent* event);
QTLIBC_API void QTableView_InitStyleOption(const QTableView* self, QStyleOptionFrame* option);
QTLIBC_API void QTableView_OnInitStyleOption(const QTableView* self, intptr_t slot);
QTLIBC_API void QTableView_QBaseInitStyleOption(const QTableView* self, QStyleOptionFrame* option);
QTLIBC_API int QTableView_Metric(const QTableView* self, int param1);
QTLIBC_API void QTableView_OnMetric(const QTableView* self, intptr_t slot);
QTLIBC_API int QTableView_QBaseMetric(const QTableView* self, int param1);
QTLIBC_API void QTableView_InitPainter(const QTableView* self, QPainter* painter);
QTLIBC_API void QTableView_OnInitPainter(const QTableView* self, intptr_t slot);
QTLIBC_API void QTableView_QBaseInitPainter(const QTableView* self, QPainter* painter);
QTLIBC_API QPaintDevice* QTableView_Redirected(const QTableView* self, QPoint* offset);
QTLIBC_API void QTableView_OnRedirected(const QTableView* self, intptr_t slot);
QTLIBC_API QPaintDevice* QTableView_QBaseRedirected(const QTableView* self, QPoint* offset);
QTLIBC_API QPainter* QTableView_SharedPainter(const QTableView* self);
QTLIBC_API void QTableView_OnSharedPainter(const QTableView* self, intptr_t slot);
QTLIBC_API QPainter* QTableView_QBaseSharedPainter(const QTableView* self);
QTLIBC_API void QTableView_RowMoved(QTableView* self, int row, int oldIndex, int newIndex);
QTLIBC_API void QTableView_OnRowMoved(QTableView* self, intptr_t slot);
QTLIBC_API void QTableView_QBaseRowMoved(QTableView* self, int row, int oldIndex, int newIndex);
QTLIBC_API void QTableView_ColumnMoved(QTableView* self, int column, int oldIndex, int newIndex);
QTLIBC_API void QTableView_OnColumnMoved(QTableView* self, intptr_t slot);
QTLIBC_API void QTableView_QBaseColumnMoved(QTableView* self, int column, int oldIndex, int newIndex);
QTLIBC_API void QTableView_RowResized(QTableView* self, int row, int oldHeight, int newHeight);
QTLIBC_API void QTableView_OnRowResized(QTableView* self, intptr_t slot);
QTLIBC_API void QTableView_QBaseRowResized(QTableView* self, int row, int oldHeight, int newHeight);
QTLIBC_API void QTableView_ColumnResized(QTableView* self, int column, int oldWidth, int newWidth);
QTLIBC_API void QTableView_OnColumnResized(QTableView* self, intptr_t slot);
QTLIBC_API void QTableView_QBaseColumnResized(QTableView* self, int column, int oldWidth, int newWidth);
QTLIBC_API void QTableView_RowCountChanged(QTableView* self, int oldCount, int newCount);
QTLIBC_API void QTableView_OnRowCountChanged(QTableView* self, intptr_t slot);
QTLIBC_API void QTableView_QBaseRowCountChanged(QTableView* self, int oldCount, int newCount);
QTLIBC_API void QTableView_ColumnCountChanged(QTableView* self, int oldCount, int newCount);
QTLIBC_API void QTableView_OnColumnCountChanged(QTableView* self, intptr_t slot);
QTLIBC_API void QTableView_QBaseColumnCountChanged(QTableView* self, int oldCount, int newCount);
QTLIBC_API int QTableView_State(const QTableView* self);
QTLIBC_API void QTableView_OnState(const QTableView* self, intptr_t slot);
QTLIBC_API int QTableView_QBaseState(const QTableView* self);
QTLIBC_API void QTableView_SetState(QTableView* self, int state);
QTLIBC_API void QTableView_OnSetState(QTableView* self, intptr_t slot);
QTLIBC_API void QTableView_QBaseSetState(QTableView* self, int state);
QTLIBC_API void QTableView_ScheduleDelayedItemsLayout(QTableView* self);
QTLIBC_API void QTableView_OnScheduleDelayedItemsLayout(QTableView* self, intptr_t slot);
QTLIBC_API void QTableView_QBaseScheduleDelayedItemsLayout(QTableView* self);
QTLIBC_API void QTableView_ExecuteDelayedItemsLayout(QTableView* self);
QTLIBC_API void QTableView_OnExecuteDelayedItemsLayout(QTableView* self, intptr_t slot);
QTLIBC_API void QTableView_QBaseExecuteDelayedItemsLayout(QTableView* self);
QTLIBC_API void QTableView_SetDirtyRegion(QTableView* self, QRegion* region);
QTLIBC_API void QTableView_OnSetDirtyRegion(QTableView* self, intptr_t slot);
QTLIBC_API void QTableView_QBaseSetDirtyRegion(QTableView* self, QRegion* region);
QTLIBC_API void QTableView_ScrollDirtyRegion(QTableView* self, int dx, int dy);
QTLIBC_API void QTableView_OnScrollDirtyRegion(QTableView* self, intptr_t slot);
QTLIBC_API void QTableView_QBaseScrollDirtyRegion(QTableView* self, int dx, int dy);
QTLIBC_API QPoint* QTableView_DirtyRegionOffset(const QTableView* self);
QTLIBC_API void QTableView_OnDirtyRegionOffset(const QTableView* self, intptr_t slot);
QTLIBC_API QPoint* QTableView_QBaseDirtyRegionOffset(const QTableView* self);
QTLIBC_API void QTableView_StartAutoScroll(QTableView* self);
QTLIBC_API void QTableView_OnStartAutoScroll(QTableView* self, intptr_t slot);
QTLIBC_API void QTableView_QBaseStartAutoScroll(QTableView* self);
QTLIBC_API void QTableView_StopAutoScroll(QTableView* self);
QTLIBC_API void QTableView_OnStopAutoScroll(QTableView* self, intptr_t slot);
QTLIBC_API void QTableView_QBaseStopAutoScroll(QTableView* self);
QTLIBC_API void QTableView_DoAutoScroll(QTableView* self);
QTLIBC_API void QTableView_OnDoAutoScroll(QTableView* self, intptr_t slot);
QTLIBC_API void QTableView_QBaseDoAutoScroll(QTableView* self);
QTLIBC_API int QTableView_DropIndicatorPosition(const QTableView* self);
QTLIBC_API void QTableView_OnDropIndicatorPosition(const QTableView* self, intptr_t slot);
QTLIBC_API int QTableView_QBaseDropIndicatorPosition(const QTableView* self);
QTLIBC_API void QTableView_SetViewportMargins(QTableView* self, int left, int top, int right, int bottom);
QTLIBC_API void QTableView_OnSetViewportMargins(QTableView* self, intptr_t slot);
QTLIBC_API void QTableView_QBaseSetViewportMargins(QTableView* self, int left, int top, int right, int bottom);
QTLIBC_API QMargins* QTableView_ViewportMargins(const QTableView* self);
QTLIBC_API void QTableView_OnViewportMargins(const QTableView* self, intptr_t slot);
QTLIBC_API QMargins* QTableView_QBaseViewportMargins(const QTableView* self);
QTLIBC_API void QTableView_DrawFrame(QTableView* self, QPainter* param1);
QTLIBC_API void QTableView_OnDrawFrame(QTableView* self, intptr_t slot);
QTLIBC_API void QTableView_QBaseDrawFrame(QTableView* self, QPainter* param1);
QTLIBC_API void QTableView_UpdateMicroFocus(QTableView* self);
QTLIBC_API void QTableView_OnUpdateMicroFocus(QTableView* self, intptr_t slot);
QTLIBC_API void QTableView_QBaseUpdateMicroFocus(QTableView* self);
QTLIBC_API void QTableView_Create(QTableView* self);
QTLIBC_API void QTableView_OnCreate(QTableView* self, intptr_t slot);
QTLIBC_API void QTableView_QBaseCreate(QTableView* self);
QTLIBC_API void QTableView_Destroy(QTableView* self);
QTLIBC_API void QTableView_OnDestroy(QTableView* self, intptr_t slot);
QTLIBC_API void QTableView_QBaseDestroy(QTableView* self);
QTLIBC_API bool QTableView_FocusNextChild(QTableView* self);
QTLIBC_API void QTableView_OnFocusNextChild(QTableView* self, intptr_t slot);
QTLIBC_API bool QTableView_QBaseFocusNextChild(QTableView* self);
QTLIBC_API bool QTableView_FocusPreviousChild(QTableView* self);
QTLIBC_API void QTableView_OnFocusPreviousChild(QTableView* self, intptr_t slot);
QTLIBC_API bool QTableView_QBaseFocusPreviousChild(QTableView* self);
QTLIBC_API QObject* QTableView_Sender(const QTableView* self);
QTLIBC_API void QTableView_OnSender(const QTableView* self, intptr_t slot);
QTLIBC_API QObject* QTableView_QBaseSender(const QTableView* self);
QTLIBC_API int QTableView_SenderSignalIndex(const QTableView* self);
QTLIBC_API void QTableView_OnSenderSignalIndex(const QTableView* self, intptr_t slot);
QTLIBC_API int QTableView_QBaseSenderSignalIndex(const QTableView* self);
QTLIBC_API int QTableView_Receivers(const QTableView* self, const char* signal);
QTLIBC_API void QTableView_OnReceivers(const QTableView* self, intptr_t slot);
QTLIBC_API int QTableView_QBaseReceivers(const QTableView* self, const char* signal);
QTLIBC_API bool QTableView_IsSignalConnected(const QTableView* self, QMetaMethod* signal);
QTLIBC_API void QTableView_OnIsSignalConnected(const QTableView* self, intptr_t slot);
QTLIBC_API bool QTableView_QBaseIsSignalConnected(const QTableView* self, QMetaMethod* signal);
QTLIBC_API void QTableView_Delete(QTableView* self);

#ifdef __cplusplus
} /* extern C */
#endif

#endif
