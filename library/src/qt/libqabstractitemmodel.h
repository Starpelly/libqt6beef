#pragma once
#ifndef SRC_QTC_LIBQABSTRACTITEMMODEL_H
#define SRC_QTC_LIBQABSTRACTITEMMODEL_H

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>

#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

#include "qtlibc.h"

#ifdef __cplusplus
extern "C" {
#endif

#ifdef __cplusplus
#if defined(WORKAROUND_INNER_CLASS_DEFINITION_QMetaObject__Connection)
typedef QMetaObject::Connection QMetaObject__Connection;
#endif
#else
typedef struct QAbstractItemModel QAbstractItemModel;
typedef struct QAbstractListModel QAbstractListModel;
typedef struct QAbstractTableModel QAbstractTableModel;
typedef struct QAnyStringView QAnyStringView;
typedef struct QBindingStorage QBindingStorage;
typedef struct QChildEvent QChildEvent;
typedef struct QDataStream QDataStream;
typedef struct QEvent QEvent;
typedef struct QMetaMethod QMetaMethod;
typedef struct QMetaObject QMetaObject;
typedef struct QMetaObject__Connection QMetaObject__Connection;
typedef struct QMimeData QMimeData;
typedef struct QModelIndex QModelIndex;
typedef struct QModelRoleData QModelRoleData;
typedef struct QModelRoleDataSpan QModelRoleDataSpan;
typedef struct QObject QObject;
typedef struct QPersistentModelIndex QPersistentModelIndex;
typedef struct QSize QSize;
typedef struct QThread QThread;
typedef struct QTimerEvent QTimerEvent;
typedef struct QVariant QVariant;
#endif

#ifdef __cplusplus
typedef QAbstractItemModel::CheckIndexOption CheckIndexOption;   // C++ enum
typedef QAbstractItemModel::CheckIndexOptions CheckIndexOptions; // C++ QFlags
typedef QAbstractItemModel::LayoutChangeHint LayoutChangeHint;   // C++ enum
#else
typedef int CheckIndexOption;  // C ABI enum
typedef int CheckIndexOptions; // C ABI QFlags
typedef int LayoutChangeHint;  // C ABI enum
#endif

QTLIBC_API QModelRoleData* QModelRoleData_new(int role);
QTLIBC_API QModelRoleData* QModelRoleData_new2(QModelRoleData* param1);
QTLIBC_API int QModelRoleData_Role(const QModelRoleData* self);
QTLIBC_API QVariant* QModelRoleData_Data(QModelRoleData* self);
QTLIBC_API QVariant* QModelRoleData_Data2(const QModelRoleData* self);
QTLIBC_API void QModelRoleData_ClearData(QModelRoleData* self);
QTLIBC_API void QModelRoleData_OperatorAssign(QModelRoleData* self, QModelRoleData* param1);
QTLIBC_API void QModelRoleData_Delete(QModelRoleData* self);

QTLIBC_API QModelRoleDataSpan* QModelRoleDataSpan_new(QModelRoleDataSpan* other);
QTLIBC_API QModelRoleDataSpan* QModelRoleDataSpan_new2(QModelRoleDataSpan* other);
QTLIBC_API QModelRoleDataSpan* QModelRoleDataSpan_new3();
QTLIBC_API QModelRoleDataSpan* QModelRoleDataSpan_new4(QModelRoleData* modelRoleData);
QTLIBC_API QModelRoleDataSpan* QModelRoleDataSpan_new5(QModelRoleData* modelRoleData, ptrdiff_t lenVal);
QTLIBC_API QModelRoleDataSpan* QModelRoleDataSpan_new6(QModelRoleDataSpan* param1);
QTLIBC_API void QModelRoleDataSpan_CopyAssign(QModelRoleDataSpan* self, QModelRoleDataSpan* other);
QTLIBC_API void QModelRoleDataSpan_MoveAssign(QModelRoleDataSpan* self, QModelRoleDataSpan* other);
QTLIBC_API ptrdiff_t QModelRoleDataSpan_Size(const QModelRoleDataSpan* self);
QTLIBC_API ptrdiff_t QModelRoleDataSpan_Length(const QModelRoleDataSpan* self);
QTLIBC_API QModelRoleData* QModelRoleDataSpan_Data(const QModelRoleDataSpan* self);
QTLIBC_API QModelRoleData* QModelRoleDataSpan_Begin(const QModelRoleDataSpan* self);
QTLIBC_API QModelRoleData* QModelRoleDataSpan_End(const QModelRoleDataSpan* self);
QTLIBC_API QModelRoleData* QModelRoleDataSpan_OperatorSubscript(const QModelRoleDataSpan* self, ptrdiff_t index);
QTLIBC_API QVariant* QModelRoleDataSpan_DataForRole(const QModelRoleDataSpan* self, int role);
QTLIBC_API void QModelRoleDataSpan_Delete(QModelRoleDataSpan* self);

QTLIBC_API QModelIndex* QModelIndex_new(QModelIndex* other);
QTLIBC_API QModelIndex* QModelIndex_new2(QModelIndex* other);
QTLIBC_API QModelIndex* QModelIndex_new3();
QTLIBC_API QModelIndex* QModelIndex_new4(QModelIndex* param1);
QTLIBC_API void QModelIndex_CopyAssign(QModelIndex* self, QModelIndex* other);
QTLIBC_API void QModelIndex_MoveAssign(QModelIndex* self, QModelIndex* other);
QTLIBC_API int QModelIndex_Row(const QModelIndex* self);
QTLIBC_API int QModelIndex_Column(const QModelIndex* self);
QTLIBC_API uintptr_t QModelIndex_InternalId(const QModelIndex* self);
QTLIBC_API void* QModelIndex_InternalPointer(const QModelIndex* self);
QTLIBC_API const void* QModelIndex_ConstInternalPointer(const QModelIndex* self);
QTLIBC_API QModelIndex* QModelIndex_Parent(const QModelIndex* self);
QTLIBC_API QModelIndex* QModelIndex_Sibling(const QModelIndex* self, int row, int column);
QTLIBC_API QModelIndex* QModelIndex_SiblingAtColumn(const QModelIndex* self, int column);
QTLIBC_API QModelIndex* QModelIndex_SiblingAtRow(const QModelIndex* self, int row);
QTLIBC_API QVariant* QModelIndex_Data(const QModelIndex* self);
QTLIBC_API void QModelIndex_MultiData(const QModelIndex* self, QModelRoleDataSpan* roleDataSpan);
QTLIBC_API int QModelIndex_Flags(const QModelIndex* self);
QTLIBC_API QAbstractItemModel* QModelIndex_Model(const QModelIndex* self);
QTLIBC_API bool QModelIndex_IsValid(const QModelIndex* self);
QTLIBC_API bool QModelIndex_OperatorEqual(const QModelIndex* self, QModelIndex* other);
QTLIBC_API bool QModelIndex_OperatorNotEqual(const QModelIndex* self, QModelIndex* other);
QTLIBC_API bool QModelIndex_OperatorLesser(const QModelIndex* self, QModelIndex* other);
QTLIBC_API QVariant* QModelIndex_Data1(const QModelIndex* self, int role);
QTLIBC_API void QModelIndex_Delete(QModelIndex* self);

QTLIBC_API QPersistentModelIndex* QPersistentModelIndex_new();
QTLIBC_API QPersistentModelIndex* QPersistentModelIndex_new2(QModelIndex* index);
QTLIBC_API QPersistentModelIndex* QPersistentModelIndex_new3(QPersistentModelIndex* other);
QTLIBC_API bool QPersistentModelIndex_OperatorLesser(const QPersistentModelIndex* self, QPersistentModelIndex* other);
QTLIBC_API bool QPersistentModelIndex_OperatorEqual(const QPersistentModelIndex* self, QPersistentModelIndex* other);
QTLIBC_API bool QPersistentModelIndex_OperatorNotEqual(const QPersistentModelIndex* self, QPersistentModelIndex* other);
QTLIBC_API void QPersistentModelIndex_OperatorAssign(QPersistentModelIndex* self, QPersistentModelIndex* other);
QTLIBC_API void QPersistentModelIndex_Swap(QPersistentModelIndex* self, QPersistentModelIndex* other);
QTLIBC_API bool QPersistentModelIndex_OperatorEqualWithOther(const QPersistentModelIndex* self, QModelIndex* other);
QTLIBC_API bool QPersistentModelIndex_OperatorNotEqualWithOther(const QPersistentModelIndex* self, QModelIndex* other);
QTLIBC_API void QPersistentModelIndex_OperatorAssignWithOther(QPersistentModelIndex* self, QModelIndex* other);
QTLIBC_API QModelIndex* QPersistentModelIndex_ToQModelIndex(const QPersistentModelIndex* self);
QTLIBC_API int QPersistentModelIndex_Row(const QPersistentModelIndex* self);
QTLIBC_API int QPersistentModelIndex_Column(const QPersistentModelIndex* self);
QTLIBC_API void* QPersistentModelIndex_InternalPointer(const QPersistentModelIndex* self);
QTLIBC_API const void* QPersistentModelIndex_ConstInternalPointer(const QPersistentModelIndex* self);
QTLIBC_API uintptr_t QPersistentModelIndex_InternalId(const QPersistentModelIndex* self);
QTLIBC_API QModelIndex* QPersistentModelIndex_Parent(const QPersistentModelIndex* self);
QTLIBC_API QModelIndex* QPersistentModelIndex_Sibling(const QPersistentModelIndex* self, int row, int column);
QTLIBC_API QVariant* QPersistentModelIndex_Data(const QPersistentModelIndex* self);
QTLIBC_API void QPersistentModelIndex_MultiData(const QPersistentModelIndex* self, QModelRoleDataSpan* roleDataSpan);
QTLIBC_API int QPersistentModelIndex_Flags(const QPersistentModelIndex* self);
QTLIBC_API QAbstractItemModel* QPersistentModelIndex_Model(const QPersistentModelIndex* self);
QTLIBC_API bool QPersistentModelIndex_IsValid(const QPersistentModelIndex* self);
QTLIBC_API QVariant* QPersistentModelIndex_Data1(const QPersistentModelIndex* self, int role);
QTLIBC_API void QPersistentModelIndex_Delete(QPersistentModelIndex* self);

QTLIBC_API QAbstractItemModel* QAbstractItemModel_new();
QTLIBC_API QAbstractItemModel* QAbstractItemModel_new2(QObject* parent);
QTLIBC_API QMetaObject* QAbstractItemModel_MetaObject(const QAbstractItemModel* self);
QTLIBC_API void* QAbstractItemModel_Metacast(QAbstractItemModel* self, const char* param1);
QTLIBC_API int QAbstractItemModel_Metacall(QAbstractItemModel* self, int param1, int param2, void** param3);
QTLIBC_API void QAbstractItemModel_OnMetacall(QAbstractItemModel* self, intptr_t slot);
QTLIBC_API int QAbstractItemModel_QBaseMetacall(QAbstractItemModel* self, int param1, int param2, void** param3);
QTLIBC_API libqt_string QAbstractItemModel_Tr(const char* s);
QTLIBC_API bool QAbstractItemModel_HasIndex(const QAbstractItemModel* self, int row, int column);
QTLIBC_API QModelIndex* QAbstractItemModel_Index(const QAbstractItemModel* self, int row, int column, QModelIndex* parent);
QTLIBC_API void QAbstractItemModel_OnIndex(const QAbstractItemModel* self, intptr_t slot);
QTLIBC_API QModelIndex* QAbstractItemModel_QBaseIndex(const QAbstractItemModel* self, int row, int column, QModelIndex* parent);
QTLIBC_API QModelIndex* QAbstractItemModel_Parent(const QAbstractItemModel* self, QModelIndex* child);
QTLIBC_API void QAbstractItemModel_OnParent(const QAbstractItemModel* self, intptr_t slot);
QTLIBC_API QModelIndex* QAbstractItemModel_QBaseParent(const QAbstractItemModel* self, QModelIndex* child);
QTLIBC_API QModelIndex* QAbstractItemModel_Sibling(const QAbstractItemModel* self, int row, int column, QModelIndex* idx);
QTLIBC_API void QAbstractItemModel_OnSibling(const QAbstractItemModel* self, intptr_t slot);
QTLIBC_API QModelIndex* QAbstractItemModel_QBaseSibling(const QAbstractItemModel* self, int row, int column, QModelIndex* idx);
QTLIBC_API int QAbstractItemModel_RowCount(const QAbstractItemModel* self, QModelIndex* parent);
QTLIBC_API void QAbstractItemModel_OnRowCount(const QAbstractItemModel* self, intptr_t slot);
QTLIBC_API int QAbstractItemModel_QBaseRowCount(const QAbstractItemModel* self, QModelIndex* parent);
QTLIBC_API int QAbstractItemModel_ColumnCount(const QAbstractItemModel* self, QModelIndex* parent);
QTLIBC_API void QAbstractItemModel_OnColumnCount(const QAbstractItemModel* self, intptr_t slot);
QTLIBC_API int QAbstractItemModel_QBaseColumnCount(const QAbstractItemModel* self, QModelIndex* parent);
QTLIBC_API bool QAbstractItemModel_HasChildren(const QAbstractItemModel* self, QModelIndex* parent);
QTLIBC_API void QAbstractItemModel_OnHasChildren(const QAbstractItemModel* self, intptr_t slot);
QTLIBC_API bool QAbstractItemModel_QBaseHasChildren(const QAbstractItemModel* self, QModelIndex* parent);
QTLIBC_API QVariant* QAbstractItemModel_Data(const QAbstractItemModel* self, QModelIndex* index, int role);
QTLIBC_API void QAbstractItemModel_OnData(const QAbstractItemModel* self, intptr_t slot);
QTLIBC_API QVariant* QAbstractItemModel_QBaseData(const QAbstractItemModel* self, QModelIndex* index, int role);
QTLIBC_API bool QAbstractItemModel_SetData(QAbstractItemModel* self, QModelIndex* index, QVariant* value, int role);
QTLIBC_API void QAbstractItemModel_OnSetData(QAbstractItemModel* self, intptr_t slot);
QTLIBC_API bool QAbstractItemModel_QBaseSetData(QAbstractItemModel* self, QModelIndex* index, QVariant* value, int role);
QTLIBC_API QVariant* QAbstractItemModel_HeaderData(const QAbstractItemModel* self, int section, int orientation, int role);
QTLIBC_API void QAbstractItemModel_OnHeaderData(const QAbstractItemModel* self, intptr_t slot);
QTLIBC_API QVariant* QAbstractItemModel_QBaseHeaderData(const QAbstractItemModel* self, int section, int orientation, int role);
QTLIBC_API bool QAbstractItemModel_SetHeaderData(QAbstractItemModel* self, int section, int orientation, QVariant* value, int role);
QTLIBC_API void QAbstractItemModel_OnSetHeaderData(QAbstractItemModel* self, intptr_t slot);
QTLIBC_API bool QAbstractItemModel_QBaseSetHeaderData(QAbstractItemModel* self, int section, int orientation, QVariant* value, int role);
QTLIBC_API libqt_map /* of int to QVariant* */ QAbstractItemModel_ItemData(const QAbstractItemModel* self, QModelIndex* index);
QTLIBC_API void QAbstractItemModel_OnItemData(const QAbstractItemModel* self, intptr_t slot);
QTLIBC_API libqt_map /* of int to QVariant* */ QAbstractItemModel_QBaseItemData(const QAbstractItemModel* self, QModelIndex* index);
QTLIBC_API bool QAbstractItemModel_SetItemData(QAbstractItemModel* self, QModelIndex* index, libqt_map /* of int to QVariant* */ roles);
QTLIBC_API void QAbstractItemModel_OnSetItemData(QAbstractItemModel* self, intptr_t slot);
QTLIBC_API bool QAbstractItemModel_QBaseSetItemData(QAbstractItemModel* self, QModelIndex* index, libqt_map /* of int to QVariant* */ roles);
QTLIBC_API bool QAbstractItemModel_ClearItemData(QAbstractItemModel* self, QModelIndex* index);
QTLIBC_API void QAbstractItemModel_OnClearItemData(QAbstractItemModel* self, intptr_t slot);
QTLIBC_API bool QAbstractItemModel_QBaseClearItemData(QAbstractItemModel* self, QModelIndex* index);
QTLIBC_API libqt_list /* of libqt_string */ QAbstractItemModel_MimeTypes(const QAbstractItemModel* self);
QTLIBC_API void QAbstractItemModel_OnMimeTypes(const QAbstractItemModel* self, intptr_t slot);
QTLIBC_API libqt_list /* of libqt_string */ QAbstractItemModel_QBaseMimeTypes(const QAbstractItemModel* self);
QTLIBC_API QMimeData* QAbstractItemModel_MimeData(const QAbstractItemModel* self, libqt_list /* of QModelIndex* */ indexes);
QTLIBC_API void QAbstractItemModel_OnMimeData(const QAbstractItemModel* self, intptr_t slot);
QTLIBC_API QMimeData* QAbstractItemModel_QBaseMimeData(const QAbstractItemModel* self, libqt_list /* of QModelIndex* */ indexes);
QTLIBC_API bool QAbstractItemModel_CanDropMimeData(const QAbstractItemModel* self, QMimeData* data, int action, int row, int column, QModelIndex* parent);
QTLIBC_API void QAbstractItemModel_OnCanDropMimeData(const QAbstractItemModel* self, intptr_t slot);
QTLIBC_API bool QAbstractItemModel_QBaseCanDropMimeData(const QAbstractItemModel* self, QMimeData* data, int action, int row, int column, QModelIndex* parent);
QTLIBC_API bool QAbstractItemModel_DropMimeData(QAbstractItemModel* self, QMimeData* data, int action, int row, int column, QModelIndex* parent);
QTLIBC_API void QAbstractItemModel_OnDropMimeData(QAbstractItemModel* self, intptr_t slot);
QTLIBC_API bool QAbstractItemModel_QBaseDropMimeData(QAbstractItemModel* self, QMimeData* data, int action, int row, int column, QModelIndex* parent);
QTLIBC_API int QAbstractItemModel_SupportedDropActions(const QAbstractItemModel* self);
QTLIBC_API void QAbstractItemModel_OnSupportedDropActions(const QAbstractItemModel* self, intptr_t slot);
QTLIBC_API int QAbstractItemModel_QBaseSupportedDropActions(const QAbstractItemModel* self);
QTLIBC_API int QAbstractItemModel_SupportedDragActions(const QAbstractItemModel* self);
QTLIBC_API void QAbstractItemModel_OnSupportedDragActions(const QAbstractItemModel* self, intptr_t slot);
QTLIBC_API int QAbstractItemModel_QBaseSupportedDragActions(const QAbstractItemModel* self);
QTLIBC_API bool QAbstractItemModel_InsertRows(QAbstractItemModel* self, int row, int count, QModelIndex* parent);
QTLIBC_API void QAbstractItemModel_OnInsertRows(QAbstractItemModel* self, intptr_t slot);
QTLIBC_API bool QAbstractItemModel_QBaseInsertRows(QAbstractItemModel* self, int row, int count, QModelIndex* parent);
QTLIBC_API bool QAbstractItemModel_InsertColumns(QAbstractItemModel* self, int column, int count, QModelIndex* parent);
QTLIBC_API void QAbstractItemModel_OnInsertColumns(QAbstractItemModel* self, intptr_t slot);
QTLIBC_API bool QAbstractItemModel_QBaseInsertColumns(QAbstractItemModel* self, int column, int count, QModelIndex* parent);
QTLIBC_API bool QAbstractItemModel_RemoveRows(QAbstractItemModel* self, int row, int count, QModelIndex* parent);
QTLIBC_API void QAbstractItemModel_OnRemoveRows(QAbstractItemModel* self, intptr_t slot);
QTLIBC_API bool QAbstractItemModel_QBaseRemoveRows(QAbstractItemModel* self, int row, int count, QModelIndex* parent);
QTLIBC_API bool QAbstractItemModel_RemoveColumns(QAbstractItemModel* self, int column, int count, QModelIndex* parent);
QTLIBC_API void QAbstractItemModel_OnRemoveColumns(QAbstractItemModel* self, intptr_t slot);
QTLIBC_API bool QAbstractItemModel_QBaseRemoveColumns(QAbstractItemModel* self, int column, int count, QModelIndex* parent);
QTLIBC_API bool QAbstractItemModel_MoveRows(QAbstractItemModel* self, QModelIndex* sourceParent, int sourceRow, int count, QModelIndex* destinationParent, int destinationChild);
QTLIBC_API void QAbstractItemModel_OnMoveRows(QAbstractItemModel* self, intptr_t slot);
QTLIBC_API bool QAbstractItemModel_QBaseMoveRows(QAbstractItemModel* self, QModelIndex* sourceParent, int sourceRow, int count, QModelIndex* destinationParent, int destinationChild);
QTLIBC_API bool QAbstractItemModel_MoveColumns(QAbstractItemModel* self, QModelIndex* sourceParent, int sourceColumn, int count, QModelIndex* destinationParent, int destinationChild);
QTLIBC_API void QAbstractItemModel_OnMoveColumns(QAbstractItemModel* self, intptr_t slot);
QTLIBC_API bool QAbstractItemModel_QBaseMoveColumns(QAbstractItemModel* self, QModelIndex* sourceParent, int sourceColumn, int count, QModelIndex* destinationParent, int destinationChild);
QTLIBC_API bool QAbstractItemModel_InsertRow(QAbstractItemModel* self, int row);
QTLIBC_API bool QAbstractItemModel_InsertColumn(QAbstractItemModel* self, int column);
QTLIBC_API bool QAbstractItemModel_RemoveRow(QAbstractItemModel* self, int row);
QTLIBC_API bool QAbstractItemModel_RemoveColumn(QAbstractItemModel* self, int column);
QTLIBC_API bool QAbstractItemModel_MoveRow(QAbstractItemModel* self, QModelIndex* sourceParent, int sourceRow, QModelIndex* destinationParent, int destinationChild);
QTLIBC_API bool QAbstractItemModel_MoveColumn(QAbstractItemModel* self, QModelIndex* sourceParent, int sourceColumn, QModelIndex* destinationParent, int destinationChild);
QTLIBC_API void QAbstractItemModel_FetchMore(QAbstractItemModel* self, QModelIndex* parent);
QTLIBC_API void QAbstractItemModel_OnFetchMore(QAbstractItemModel* self, intptr_t slot);
QTLIBC_API void QAbstractItemModel_QBaseFetchMore(QAbstractItemModel* self, QModelIndex* parent);
QTLIBC_API bool QAbstractItemModel_CanFetchMore(const QAbstractItemModel* self, QModelIndex* parent);
QTLIBC_API void QAbstractItemModel_OnCanFetchMore(const QAbstractItemModel* self, intptr_t slot);
QTLIBC_API bool QAbstractItemModel_QBaseCanFetchMore(const QAbstractItemModel* self, QModelIndex* parent);
QTLIBC_API int QAbstractItemModel_Flags(const QAbstractItemModel* self, QModelIndex* index);
QTLIBC_API void QAbstractItemModel_OnFlags(const QAbstractItemModel* self, intptr_t slot);
QTLIBC_API int QAbstractItemModel_QBaseFlags(const QAbstractItemModel* self, QModelIndex* index);
QTLIBC_API void QAbstractItemModel_Sort(QAbstractItemModel* self, int column, int order);
QTLIBC_API void QAbstractItemModel_OnSort(QAbstractItemModel* self, intptr_t slot);
QTLIBC_API void QAbstractItemModel_QBaseSort(QAbstractItemModel* self, int column, int order);
QTLIBC_API QModelIndex* QAbstractItemModel_Buddy(const QAbstractItemModel* self, QModelIndex* index);
QTLIBC_API void QAbstractItemModel_OnBuddy(const QAbstractItemModel* self, intptr_t slot);
QTLIBC_API QModelIndex* QAbstractItemModel_QBaseBuddy(const QAbstractItemModel* self, QModelIndex* index);
QTLIBC_API libqt_list /* of QModelIndex* */ QAbstractItemModel_Match(const QAbstractItemModel* self, QModelIndex* start, int role, QVariant* value, int hits, int flags);
QTLIBC_API void QAbstractItemModel_OnMatch(const QAbstractItemModel* self, intptr_t slot);
QTLIBC_API libqt_list /* of QModelIndex* */ QAbstractItemModel_QBaseMatch(const QAbstractItemModel* self, QModelIndex* start, int role, QVariant* value, int hits, int flags);
QTLIBC_API QSize* QAbstractItemModel_Span(const QAbstractItemModel* self, QModelIndex* index);
QTLIBC_API void QAbstractItemModel_OnSpan(const QAbstractItemModel* self, intptr_t slot);
QTLIBC_API QSize* QAbstractItemModel_QBaseSpan(const QAbstractItemModel* self, QModelIndex* index);
QTLIBC_API libqt_map /* of int to libqt_string */ QAbstractItemModel_RoleNames(const QAbstractItemModel* self);
QTLIBC_API void QAbstractItemModel_OnRoleNames(const QAbstractItemModel* self, intptr_t slot);
QTLIBC_API libqt_map /* of int to libqt_string */ QAbstractItemModel_QBaseRoleNames(const QAbstractItemModel* self);
QTLIBC_API bool QAbstractItemModel_CheckIndex(const QAbstractItemModel* self, QModelIndex* index);
QTLIBC_API void QAbstractItemModel_MultiData(const QAbstractItemModel* self, QModelIndex* index, QModelRoleDataSpan* roleDataSpan);
QTLIBC_API void QAbstractItemModel_OnMultiData(const QAbstractItemModel* self, intptr_t slot);
QTLIBC_API void QAbstractItemModel_QBaseMultiData(const QAbstractItemModel* self, QModelIndex* index, QModelRoleDataSpan* roleDataSpan);
QTLIBC_API void QAbstractItemModel_DataChanged(QAbstractItemModel* self, QModelIndex* topLeft, QModelIndex* bottomRight);
void QAbstractItemModel_Connect_DataChanged(QAbstractItemModel* self, intptr_t slot);
QTLIBC_API void QAbstractItemModel_HeaderDataChanged(QAbstractItemModel* self, int orientation, int first, int last);
void QAbstractItemModel_Connect_HeaderDataChanged(QAbstractItemModel* self, intptr_t slot);
QTLIBC_API void QAbstractItemModel_LayoutChanged(QAbstractItemModel* self);
void QAbstractItemModel_Connect_LayoutChanged(QAbstractItemModel* self, intptr_t slot);
QTLIBC_API void QAbstractItemModel_LayoutAboutToBeChanged(QAbstractItemModel* self);
void QAbstractItemModel_Connect_LayoutAboutToBeChanged(QAbstractItemModel* self, intptr_t slot);
QTLIBC_API bool QAbstractItemModel_Submit(QAbstractItemModel* self);
QTLIBC_API void QAbstractItemModel_OnSubmit(QAbstractItemModel* self, intptr_t slot);
QTLIBC_API bool QAbstractItemModel_QBaseSubmit(QAbstractItemModel* self);
QTLIBC_API void QAbstractItemModel_Revert(QAbstractItemModel* self);
QTLIBC_API void QAbstractItemModel_OnRevert(QAbstractItemModel* self, intptr_t slot);
QTLIBC_API void QAbstractItemModel_QBaseRevert(QAbstractItemModel* self);
QTLIBC_API void QAbstractItemModel_ResetInternalData(QAbstractItemModel* self);
QTLIBC_API void QAbstractItemModel_OnResetInternalData(QAbstractItemModel* self, intptr_t slot);
QTLIBC_API void QAbstractItemModel_QBaseResetInternalData(QAbstractItemModel* self);
QTLIBC_API libqt_string QAbstractItemModel_Tr2(const char* s, const char* c);
QTLIBC_API libqt_string QAbstractItemModel_Tr3(const char* s, const char* c, int n);
QTLIBC_API bool QAbstractItemModel_HasIndex3(const QAbstractItemModel* self, int row, int column, QModelIndex* parent);
QTLIBC_API bool QAbstractItemModel_InsertRow2(QAbstractItemModel* self, int row, QModelIndex* parent);
QTLIBC_API bool QAbstractItemModel_InsertColumn2(QAbstractItemModel* self, int column, QModelIndex* parent);
QTLIBC_API bool QAbstractItemModel_RemoveRow2(QAbstractItemModel* self, int row, QModelIndex* parent);
QTLIBC_API bool QAbstractItemModel_RemoveColumn2(QAbstractItemModel* self, int column, QModelIndex* parent);
QTLIBC_API bool QAbstractItemModel_CheckIndex2(const QAbstractItemModel* self, QModelIndex* index, int options);
QTLIBC_API void QAbstractItemModel_DataChanged3(QAbstractItemModel* self, QModelIndex* topLeft, QModelIndex* bottomRight, libqt_list /* of int */ roles);
void QAbstractItemModel_Connect_DataChanged3(QAbstractItemModel* self, intptr_t slot);
QTLIBC_API void QAbstractItemModel_LayoutChanged1(QAbstractItemModel* self, libqt_list /* of QPersistentModelIndex* */ parents);
void QAbstractItemModel_Connect_LayoutChanged1(QAbstractItemModel* self, intptr_t slot);
QTLIBC_API void QAbstractItemModel_LayoutChanged2(QAbstractItemModel* self, libqt_list /* of QPersistentModelIndex* */ parents, int hint);
void QAbstractItemModel_Connect_LayoutChanged2(QAbstractItemModel* self, intptr_t slot);
QTLIBC_API void QAbstractItemModel_LayoutAboutToBeChanged1(QAbstractItemModel* self, libqt_list /* of QPersistentModelIndex* */ parents);
void QAbstractItemModel_Connect_LayoutAboutToBeChanged1(QAbstractItemModel* self, intptr_t slot);
QTLIBC_API void QAbstractItemModel_LayoutAboutToBeChanged2(QAbstractItemModel* self, libqt_list /* of QPersistentModelIndex* */ parents, int hint);
void QAbstractItemModel_Connect_LayoutAboutToBeChanged2(QAbstractItemModel* self, intptr_t slot);
QTLIBC_API bool QAbstractItemModel_Event(QAbstractItemModel* self, QEvent* event);
QTLIBC_API void QAbstractItemModel_OnEvent(QAbstractItemModel* self, intptr_t slot);
QTLIBC_API bool QAbstractItemModel_QBaseEvent(QAbstractItemModel* self, QEvent* event);
QTLIBC_API bool QAbstractItemModel_EventFilter(QAbstractItemModel* self, QObject* watched, QEvent* event);
QTLIBC_API void QAbstractItemModel_OnEventFilter(QAbstractItemModel* self, intptr_t slot);
QTLIBC_API bool QAbstractItemModel_QBaseEventFilter(QAbstractItemModel* self, QObject* watched, QEvent* event);
QTLIBC_API void QAbstractItemModel_TimerEvent(QAbstractItemModel* self, QTimerEvent* event);
QTLIBC_API void QAbstractItemModel_OnTimerEvent(QAbstractItemModel* self, intptr_t slot);
QTLIBC_API void QAbstractItemModel_QBaseTimerEvent(QAbstractItemModel* self, QTimerEvent* event);
QTLIBC_API void QAbstractItemModel_ChildEvent(QAbstractItemModel* self, QChildEvent* event);
QTLIBC_API void QAbstractItemModel_OnChildEvent(QAbstractItemModel* self, intptr_t slot);
QTLIBC_API void QAbstractItemModel_QBaseChildEvent(QAbstractItemModel* self, QChildEvent* event);
QTLIBC_API void QAbstractItemModel_CustomEvent(QAbstractItemModel* self, QEvent* event);
QTLIBC_API void QAbstractItemModel_OnCustomEvent(QAbstractItemModel* self, intptr_t slot);
QTLIBC_API void QAbstractItemModel_QBaseCustomEvent(QAbstractItemModel* self, QEvent* event);
QTLIBC_API void QAbstractItemModel_ConnectNotify(QAbstractItemModel* self, QMetaMethod* signal);
QTLIBC_API void QAbstractItemModel_OnConnectNotify(QAbstractItemModel* self, intptr_t slot);
QTLIBC_API void QAbstractItemModel_QBaseConnectNotify(QAbstractItemModel* self, QMetaMethod* signal);
QTLIBC_API void QAbstractItemModel_DisconnectNotify(QAbstractItemModel* self, QMetaMethod* signal);
QTLIBC_API void QAbstractItemModel_OnDisconnectNotify(QAbstractItemModel* self, intptr_t slot);
QTLIBC_API void QAbstractItemModel_QBaseDisconnectNotify(QAbstractItemModel* self, QMetaMethod* signal);
QTLIBC_API QModelIndex* QAbstractItemModel_CreateIndex(const QAbstractItemModel* self, int row, int column);
QTLIBC_API void QAbstractItemModel_OnCreateIndex(const QAbstractItemModel* self, intptr_t slot);
QTLIBC_API QModelIndex* QAbstractItemModel_QBaseCreateIndex(const QAbstractItemModel* self, int row, int column);
QTLIBC_API QModelIndex* QAbstractItemModel_CreateIndex2(const QAbstractItemModel* self, int row, int column, uintptr_t id);
QTLIBC_API void QAbstractItemModel_OnCreateIndex2(const QAbstractItemModel* self, intptr_t slot);
QTLIBC_API QModelIndex* QAbstractItemModel_QBaseCreateIndex2(const QAbstractItemModel* self, int row, int column, uintptr_t id);
QTLIBC_API void QAbstractItemModel_EncodeData(const QAbstractItemModel* self, libqt_list /* of QModelIndex* */ indexes, QDataStream* stream);
QTLIBC_API void QAbstractItemModel_OnEncodeData(const QAbstractItemModel* self, intptr_t slot);
QTLIBC_API void QAbstractItemModel_QBaseEncodeData(const QAbstractItemModel* self, libqt_list /* of QModelIndex* */ indexes, QDataStream* stream);
QTLIBC_API bool QAbstractItemModel_DecodeData(QAbstractItemModel* self, int row, int column, QModelIndex* parent, QDataStream* stream);
QTLIBC_API void QAbstractItemModel_OnDecodeData(QAbstractItemModel* self, intptr_t slot);
QTLIBC_API bool QAbstractItemModel_QBaseDecodeData(QAbstractItemModel* self, int row, int column, QModelIndex* parent, QDataStream* stream);
QTLIBC_API void QAbstractItemModel_BeginInsertRows(QAbstractItemModel* self, QModelIndex* parent, int first, int last);
QTLIBC_API void QAbstractItemModel_OnBeginInsertRows(QAbstractItemModel* self, intptr_t slot);
QTLIBC_API void QAbstractItemModel_QBaseBeginInsertRows(QAbstractItemModel* self, QModelIndex* parent, int first, int last);
QTLIBC_API void QAbstractItemModel_EndInsertRows(QAbstractItemModel* self);
QTLIBC_API void QAbstractItemModel_OnEndInsertRows(QAbstractItemModel* self, intptr_t slot);
QTLIBC_API void QAbstractItemModel_QBaseEndInsertRows(QAbstractItemModel* self);
QTLIBC_API void QAbstractItemModel_BeginRemoveRows(QAbstractItemModel* self, QModelIndex* parent, int first, int last);
QTLIBC_API void QAbstractItemModel_OnBeginRemoveRows(QAbstractItemModel* self, intptr_t slot);
QTLIBC_API void QAbstractItemModel_QBaseBeginRemoveRows(QAbstractItemModel* self, QModelIndex* parent, int first, int last);
QTLIBC_API void QAbstractItemModel_EndRemoveRows(QAbstractItemModel* self);
QTLIBC_API void QAbstractItemModel_OnEndRemoveRows(QAbstractItemModel* self, intptr_t slot);
QTLIBC_API void QAbstractItemModel_QBaseEndRemoveRows(QAbstractItemModel* self);
QTLIBC_API bool QAbstractItemModel_BeginMoveRows(QAbstractItemModel* self, QModelIndex* sourceParent, int sourceFirst, int sourceLast, QModelIndex* destinationParent, int destinationRow);
QTLIBC_API void QAbstractItemModel_OnBeginMoveRows(QAbstractItemModel* self, intptr_t slot);
QTLIBC_API bool QAbstractItemModel_QBaseBeginMoveRows(QAbstractItemModel* self, QModelIndex* sourceParent, int sourceFirst, int sourceLast, QModelIndex* destinationParent, int destinationRow);
QTLIBC_API void QAbstractItemModel_EndMoveRows(QAbstractItemModel* self);
QTLIBC_API void QAbstractItemModel_OnEndMoveRows(QAbstractItemModel* self, intptr_t slot);
QTLIBC_API void QAbstractItemModel_QBaseEndMoveRows(QAbstractItemModel* self);
QTLIBC_API void QAbstractItemModel_BeginInsertColumns(QAbstractItemModel* self, QModelIndex* parent, int first, int last);
QTLIBC_API void QAbstractItemModel_OnBeginInsertColumns(QAbstractItemModel* self, intptr_t slot);
QTLIBC_API void QAbstractItemModel_QBaseBeginInsertColumns(QAbstractItemModel* self, QModelIndex* parent, int first, int last);
QTLIBC_API void QAbstractItemModel_EndInsertColumns(QAbstractItemModel* self);
QTLIBC_API void QAbstractItemModel_OnEndInsertColumns(QAbstractItemModel* self, intptr_t slot);
QTLIBC_API void QAbstractItemModel_QBaseEndInsertColumns(QAbstractItemModel* self);
QTLIBC_API void QAbstractItemModel_BeginRemoveColumns(QAbstractItemModel* self, QModelIndex* parent, int first, int last);
QTLIBC_API void QAbstractItemModel_OnBeginRemoveColumns(QAbstractItemModel* self, intptr_t slot);
QTLIBC_API void QAbstractItemModel_QBaseBeginRemoveColumns(QAbstractItemModel* self, QModelIndex* parent, int first, int last);
QTLIBC_API void QAbstractItemModel_EndRemoveColumns(QAbstractItemModel* self);
QTLIBC_API void QAbstractItemModel_OnEndRemoveColumns(QAbstractItemModel* self, intptr_t slot);
QTLIBC_API void QAbstractItemModel_QBaseEndRemoveColumns(QAbstractItemModel* self);
QTLIBC_API bool QAbstractItemModel_BeginMoveColumns(QAbstractItemModel* self, QModelIndex* sourceParent, int sourceFirst, int sourceLast, QModelIndex* destinationParent, int destinationColumn);
QTLIBC_API void QAbstractItemModel_OnBeginMoveColumns(QAbstractItemModel* self, intptr_t slot);
QTLIBC_API bool QAbstractItemModel_QBaseBeginMoveColumns(QAbstractItemModel* self, QModelIndex* sourceParent, int sourceFirst, int sourceLast, QModelIndex* destinationParent, int destinationColumn);
QTLIBC_API void QAbstractItemModel_EndMoveColumns(QAbstractItemModel* self);
QTLIBC_API void QAbstractItemModel_OnEndMoveColumns(QAbstractItemModel* self, intptr_t slot);
QTLIBC_API void QAbstractItemModel_QBaseEndMoveColumns(QAbstractItemModel* self);
QTLIBC_API void QAbstractItemModel_BeginResetModel(QAbstractItemModel* self);
QTLIBC_API void QAbstractItemModel_OnBeginResetModel(QAbstractItemModel* self, intptr_t slot);
QTLIBC_API void QAbstractItemModel_QBaseBeginResetModel(QAbstractItemModel* self);
QTLIBC_API void QAbstractItemModel_EndResetModel(QAbstractItemModel* self);
QTLIBC_API void QAbstractItemModel_OnEndResetModel(QAbstractItemModel* self, intptr_t slot);
QTLIBC_API void QAbstractItemModel_QBaseEndResetModel(QAbstractItemModel* self);
QTLIBC_API void QAbstractItemModel_ChangePersistentIndex(QAbstractItemModel* self, QModelIndex* from, QModelIndex* to);
QTLIBC_API void QAbstractItemModel_OnChangePersistentIndex(QAbstractItemModel* self, intptr_t slot);
QTLIBC_API void QAbstractItemModel_QBaseChangePersistentIndex(QAbstractItemModel* self, QModelIndex* from, QModelIndex* to);
QTLIBC_API void QAbstractItemModel_ChangePersistentIndexList(QAbstractItemModel* self, libqt_list /* of QModelIndex* */ from, libqt_list /* of QModelIndex* */ to);
QTLIBC_API void QAbstractItemModel_OnChangePersistentIndexList(QAbstractItemModel* self, intptr_t slot);
QTLIBC_API void QAbstractItemModel_QBaseChangePersistentIndexList(QAbstractItemModel* self, libqt_list /* of QModelIndex* */ from, libqt_list /* of QModelIndex* */ to);
QTLIBC_API libqt_list /* of QModelIndex* */ QAbstractItemModel_PersistentIndexList(const QAbstractItemModel* self);
QTLIBC_API void QAbstractItemModel_OnPersistentIndexList(const QAbstractItemModel* self, intptr_t slot);
QTLIBC_API libqt_list /* of QModelIndex* */ QAbstractItemModel_QBasePersistentIndexList(const QAbstractItemModel* self);
QTLIBC_API QModelIndex* QAbstractItemModel_CreateIndex3(const QAbstractItemModel* self, int row, int column, const void* data);
QTLIBC_API void QAbstractItemModel_OnCreateIndex3(const QAbstractItemModel* self, intptr_t slot);
QTLIBC_API QModelIndex* QAbstractItemModel_QBaseCreateIndex3(const QAbstractItemModel* self, int row, int column, const void* data);
QTLIBC_API QObject* QAbstractItemModel_Sender(const QAbstractItemModel* self);
QTLIBC_API void QAbstractItemModel_OnSender(const QAbstractItemModel* self, intptr_t slot);
QTLIBC_API QObject* QAbstractItemModel_QBaseSender(const QAbstractItemModel* self);
QTLIBC_API int QAbstractItemModel_SenderSignalIndex(const QAbstractItemModel* self);
QTLIBC_API void QAbstractItemModel_OnSenderSignalIndex(const QAbstractItemModel* self, intptr_t slot);
QTLIBC_API int QAbstractItemModel_QBaseSenderSignalIndex(const QAbstractItemModel* self);
QTLIBC_API int QAbstractItemModel_Receivers(const QAbstractItemModel* self, const char* signal);
QTLIBC_API void QAbstractItemModel_OnReceivers(const QAbstractItemModel* self, intptr_t slot);
QTLIBC_API int QAbstractItemModel_QBaseReceivers(const QAbstractItemModel* self, const char* signal);
QTLIBC_API bool QAbstractItemModel_IsSignalConnected(const QAbstractItemModel* self, QMetaMethod* signal);
QTLIBC_API void QAbstractItemModel_OnIsSignalConnected(const QAbstractItemModel* self, intptr_t slot);
QTLIBC_API bool QAbstractItemModel_QBaseIsSignalConnected(const QAbstractItemModel* self, QMetaMethod* signal);
QTLIBC_API void QAbstractItemModel_Delete(QAbstractItemModel* self);

QTLIBC_API QAbstractTableModel* QAbstractTableModel_new();
QTLIBC_API QAbstractTableModel* QAbstractTableModel_new2(QObject* parent);
QTLIBC_API QMetaObject* QAbstractTableModel_MetaObject(const QAbstractTableModel* self);
QTLIBC_API void* QAbstractTableModel_Metacast(QAbstractTableModel* self, const char* param1);
QTLIBC_API int QAbstractTableModel_Metacall(QAbstractTableModel* self, int param1, int param2, void** param3);
QTLIBC_API void QAbstractTableModel_OnMetacall(QAbstractTableModel* self, intptr_t slot);
QTLIBC_API int QAbstractTableModel_QBaseMetacall(QAbstractTableModel* self, int param1, int param2, void** param3);
QTLIBC_API libqt_string QAbstractTableModel_Tr(const char* s);
QTLIBC_API QModelIndex* QAbstractTableModel_Index(const QAbstractTableModel* self, int row, int column, QModelIndex* parent);
QTLIBC_API void QAbstractTableModel_OnIndex(const QAbstractTableModel* self, intptr_t slot);
QTLIBC_API QModelIndex* QAbstractTableModel_QBaseIndex(const QAbstractTableModel* self, int row, int column, QModelIndex* parent);
QTLIBC_API QModelIndex* QAbstractTableModel_Sibling(const QAbstractTableModel* self, int row, int column, QModelIndex* idx);
QTLIBC_API void QAbstractTableModel_OnSibling(const QAbstractTableModel* self, intptr_t slot);
QTLIBC_API QModelIndex* QAbstractTableModel_QBaseSibling(const QAbstractTableModel* self, int row, int column, QModelIndex* idx);
QTLIBC_API bool QAbstractTableModel_DropMimeData(QAbstractTableModel* self, QMimeData* data, int action, int row, int column, QModelIndex* parent);
QTLIBC_API void QAbstractTableModel_OnDropMimeData(QAbstractTableModel* self, intptr_t slot);
QTLIBC_API bool QAbstractTableModel_QBaseDropMimeData(QAbstractTableModel* self, QMimeData* data, int action, int row, int column, QModelIndex* parent);
QTLIBC_API int QAbstractTableModel_Flags(const QAbstractTableModel* self, QModelIndex* index);
QTLIBC_API void QAbstractTableModel_OnFlags(const QAbstractTableModel* self, intptr_t slot);
QTLIBC_API int QAbstractTableModel_QBaseFlags(const QAbstractTableModel* self, QModelIndex* index);
QTLIBC_API libqt_string QAbstractTableModel_Tr2(const char* s, const char* c);
QTLIBC_API libqt_string QAbstractTableModel_Tr3(const char* s, const char* c, int n);
QTLIBC_API int QAbstractTableModel_RowCount(const QAbstractTableModel* self, QModelIndex* parent);
QTLIBC_API void QAbstractTableModel_OnRowCount(const QAbstractTableModel* self, intptr_t slot);
QTLIBC_API int QAbstractTableModel_QBaseRowCount(const QAbstractTableModel* self, QModelIndex* parent);
QTLIBC_API int QAbstractTableModel_ColumnCount(const QAbstractTableModel* self, QModelIndex* parent);
QTLIBC_API void QAbstractTableModel_OnColumnCount(const QAbstractTableModel* self, intptr_t slot);
QTLIBC_API int QAbstractTableModel_QBaseColumnCount(const QAbstractTableModel* self, QModelIndex* parent);
QTLIBC_API QVariant* QAbstractTableModel_Data(const QAbstractTableModel* self, QModelIndex* index, int role);
QTLIBC_API void QAbstractTableModel_OnData(const QAbstractTableModel* self, intptr_t slot);
QTLIBC_API QVariant* QAbstractTableModel_QBaseData(const QAbstractTableModel* self, QModelIndex* index, int role);
QTLIBC_API bool QAbstractTableModel_SetData(QAbstractTableModel* self, QModelIndex* index, QVariant* value, int role);
QTLIBC_API void QAbstractTableModel_OnSetData(QAbstractTableModel* self, intptr_t slot);
QTLIBC_API bool QAbstractTableModel_QBaseSetData(QAbstractTableModel* self, QModelIndex* index, QVariant* value, int role);
QTLIBC_API QVariant* QAbstractTableModel_HeaderData(const QAbstractTableModel* self, int section, int orientation, int role);
QTLIBC_API void QAbstractTableModel_OnHeaderData(const QAbstractTableModel* self, intptr_t slot);
QTLIBC_API QVariant* QAbstractTableModel_QBaseHeaderData(const QAbstractTableModel* self, int section, int orientation, int role);
QTLIBC_API bool QAbstractTableModel_SetHeaderData(QAbstractTableModel* self, int section, int orientation, QVariant* value, int role);
QTLIBC_API void QAbstractTableModel_OnSetHeaderData(QAbstractTableModel* self, intptr_t slot);
QTLIBC_API bool QAbstractTableModel_QBaseSetHeaderData(QAbstractTableModel* self, int section, int orientation, QVariant* value, int role);
QTLIBC_API libqt_map /* of int to QVariant* */ QAbstractTableModel_ItemData(const QAbstractTableModel* self, QModelIndex* index);
QTLIBC_API void QAbstractTableModel_OnItemData(const QAbstractTableModel* self, intptr_t slot);
QTLIBC_API libqt_map /* of int to QVariant* */ QAbstractTableModel_QBaseItemData(const QAbstractTableModel* self, QModelIndex* index);
QTLIBC_API bool QAbstractTableModel_SetItemData(QAbstractTableModel* self, QModelIndex* index, libqt_map /* of int to QVariant* */ roles);
QTLIBC_API void QAbstractTableModel_OnSetItemData(QAbstractTableModel* self, intptr_t slot);
QTLIBC_API bool QAbstractTableModel_QBaseSetItemData(QAbstractTableModel* self, QModelIndex* index, libqt_map /* of int to QVariant* */ roles);
QTLIBC_API bool QAbstractTableModel_ClearItemData(QAbstractTableModel* self, QModelIndex* index);
QTLIBC_API void QAbstractTableModel_OnClearItemData(QAbstractTableModel* self, intptr_t slot);
QTLIBC_API bool QAbstractTableModel_QBaseClearItemData(QAbstractTableModel* self, QModelIndex* index);
QTLIBC_API libqt_list /* of libqt_string */ QAbstractTableModel_MimeTypes(const QAbstractTableModel* self);
QTLIBC_API void QAbstractTableModel_OnMimeTypes(const QAbstractTableModel* self, intptr_t slot);
QTLIBC_API libqt_list /* of libqt_string */ QAbstractTableModel_QBaseMimeTypes(const QAbstractTableModel* self);
QTLIBC_API QMimeData* QAbstractTableModel_MimeData(const QAbstractTableModel* self, libqt_list /* of QModelIndex* */ indexes);
QTLIBC_API void QAbstractTableModel_OnMimeData(const QAbstractTableModel* self, intptr_t slot);
QTLIBC_API QMimeData* QAbstractTableModel_QBaseMimeData(const QAbstractTableModel* self, libqt_list /* of QModelIndex* */ indexes);
QTLIBC_API bool QAbstractTableModel_CanDropMimeData(const QAbstractTableModel* self, QMimeData* data, int action, int row, int column, QModelIndex* parent);
QTLIBC_API void QAbstractTableModel_OnCanDropMimeData(const QAbstractTableModel* self, intptr_t slot);
QTLIBC_API bool QAbstractTableModel_QBaseCanDropMimeData(const QAbstractTableModel* self, QMimeData* data, int action, int row, int column, QModelIndex* parent);
QTLIBC_API int QAbstractTableModel_SupportedDropActions(const QAbstractTableModel* self);
QTLIBC_API void QAbstractTableModel_OnSupportedDropActions(const QAbstractTableModel* self, intptr_t slot);
QTLIBC_API int QAbstractTableModel_QBaseSupportedDropActions(const QAbstractTableModel* self);
QTLIBC_API int QAbstractTableModel_SupportedDragActions(const QAbstractTableModel* self);
QTLIBC_API void QAbstractTableModel_OnSupportedDragActions(const QAbstractTableModel* self, intptr_t slot);
QTLIBC_API int QAbstractTableModel_QBaseSupportedDragActions(const QAbstractTableModel* self);
QTLIBC_API bool QAbstractTableModel_InsertRows(QAbstractTableModel* self, int row, int count, QModelIndex* parent);
QTLIBC_API void QAbstractTableModel_OnInsertRows(QAbstractTableModel* self, intptr_t slot);
QTLIBC_API bool QAbstractTableModel_QBaseInsertRows(QAbstractTableModel* self, int row, int count, QModelIndex* parent);
QTLIBC_API bool QAbstractTableModel_InsertColumns(QAbstractTableModel* self, int column, int count, QModelIndex* parent);
QTLIBC_API void QAbstractTableModel_OnInsertColumns(QAbstractTableModel* self, intptr_t slot);
QTLIBC_API bool QAbstractTableModel_QBaseInsertColumns(QAbstractTableModel* self, int column, int count, QModelIndex* parent);
QTLIBC_API bool QAbstractTableModel_RemoveRows(QAbstractTableModel* self, int row, int count, QModelIndex* parent);
QTLIBC_API void QAbstractTableModel_OnRemoveRows(QAbstractTableModel* self, intptr_t slot);
QTLIBC_API bool QAbstractTableModel_QBaseRemoveRows(QAbstractTableModel* self, int row, int count, QModelIndex* parent);
QTLIBC_API bool QAbstractTableModel_RemoveColumns(QAbstractTableModel* self, int column, int count, QModelIndex* parent);
QTLIBC_API void QAbstractTableModel_OnRemoveColumns(QAbstractTableModel* self, intptr_t slot);
QTLIBC_API bool QAbstractTableModel_QBaseRemoveColumns(QAbstractTableModel* self, int column, int count, QModelIndex* parent);
QTLIBC_API bool QAbstractTableModel_MoveRows(QAbstractTableModel* self, QModelIndex* sourceParent, int sourceRow, int count, QModelIndex* destinationParent, int destinationChild);
QTLIBC_API void QAbstractTableModel_OnMoveRows(QAbstractTableModel* self, intptr_t slot);
QTLIBC_API bool QAbstractTableModel_QBaseMoveRows(QAbstractTableModel* self, QModelIndex* sourceParent, int sourceRow, int count, QModelIndex* destinationParent, int destinationChild);
QTLIBC_API bool QAbstractTableModel_MoveColumns(QAbstractTableModel* self, QModelIndex* sourceParent, int sourceColumn, int count, QModelIndex* destinationParent, int destinationChild);
QTLIBC_API void QAbstractTableModel_OnMoveColumns(QAbstractTableModel* self, intptr_t slot);
QTLIBC_API bool QAbstractTableModel_QBaseMoveColumns(QAbstractTableModel* self, QModelIndex* sourceParent, int sourceColumn, int count, QModelIndex* destinationParent, int destinationChild);
QTLIBC_API void QAbstractTableModel_FetchMore(QAbstractTableModel* self, QModelIndex* parent);
QTLIBC_API void QAbstractTableModel_OnFetchMore(QAbstractTableModel* self, intptr_t slot);
QTLIBC_API void QAbstractTableModel_QBaseFetchMore(QAbstractTableModel* self, QModelIndex* parent);
QTLIBC_API bool QAbstractTableModel_CanFetchMore(const QAbstractTableModel* self, QModelIndex* parent);
QTLIBC_API void QAbstractTableModel_OnCanFetchMore(const QAbstractTableModel* self, intptr_t slot);
QTLIBC_API bool QAbstractTableModel_QBaseCanFetchMore(const QAbstractTableModel* self, QModelIndex* parent);
QTLIBC_API void QAbstractTableModel_Sort(QAbstractTableModel* self, int column, int order);
QTLIBC_API void QAbstractTableModel_OnSort(QAbstractTableModel* self, intptr_t slot);
QTLIBC_API void QAbstractTableModel_QBaseSort(QAbstractTableModel* self, int column, int order);
QTLIBC_API QModelIndex* QAbstractTableModel_Buddy(const QAbstractTableModel* self, QModelIndex* index);
QTLIBC_API void QAbstractTableModel_OnBuddy(const QAbstractTableModel* self, intptr_t slot);
QTLIBC_API QModelIndex* QAbstractTableModel_QBaseBuddy(const QAbstractTableModel* self, QModelIndex* index);
QTLIBC_API libqt_list /* of QModelIndex* */ QAbstractTableModel_Match(const QAbstractTableModel* self, QModelIndex* start, int role, QVariant* value, int hits, int flags);
QTLIBC_API void QAbstractTableModel_OnMatch(const QAbstractTableModel* self, intptr_t slot);
QTLIBC_API libqt_list /* of QModelIndex* */ QAbstractTableModel_QBaseMatch(const QAbstractTableModel* self, QModelIndex* start, int role, QVariant* value, int hits, int flags);
QTLIBC_API QSize* QAbstractTableModel_Span(const QAbstractTableModel* self, QModelIndex* index);
QTLIBC_API void QAbstractTableModel_OnSpan(const QAbstractTableModel* self, intptr_t slot);
QTLIBC_API QSize* QAbstractTableModel_QBaseSpan(const QAbstractTableModel* self, QModelIndex* index);
QTLIBC_API libqt_map /* of int to libqt_string */ QAbstractTableModel_RoleNames(const QAbstractTableModel* self);
QTLIBC_API void QAbstractTableModel_OnRoleNames(const QAbstractTableModel* self, intptr_t slot);
QTLIBC_API libqt_map /* of int to libqt_string */ QAbstractTableModel_QBaseRoleNames(const QAbstractTableModel* self);
QTLIBC_API void QAbstractTableModel_MultiData(const QAbstractTableModel* self, QModelIndex* index, QModelRoleDataSpan* roleDataSpan);
QTLIBC_API void QAbstractTableModel_OnMultiData(const QAbstractTableModel* self, intptr_t slot);
QTLIBC_API void QAbstractTableModel_QBaseMultiData(const QAbstractTableModel* self, QModelIndex* index, QModelRoleDataSpan* roleDataSpan);
QTLIBC_API bool QAbstractTableModel_Submit(QAbstractTableModel* self);
QTLIBC_API void QAbstractTableModel_OnSubmit(QAbstractTableModel* self, intptr_t slot);
QTLIBC_API bool QAbstractTableModel_QBaseSubmit(QAbstractTableModel* self);
QTLIBC_API void QAbstractTableModel_Revert(QAbstractTableModel* self);
QTLIBC_API void QAbstractTableModel_OnRevert(QAbstractTableModel* self, intptr_t slot);
QTLIBC_API void QAbstractTableModel_QBaseRevert(QAbstractTableModel* self);
QTLIBC_API void QAbstractTableModel_ResetInternalData(QAbstractTableModel* self);
QTLIBC_API void QAbstractTableModel_OnResetInternalData(QAbstractTableModel* self, intptr_t slot);
QTLIBC_API void QAbstractTableModel_QBaseResetInternalData(QAbstractTableModel* self);
QTLIBC_API bool QAbstractTableModel_Event(QAbstractTableModel* self, QEvent* event);
QTLIBC_API void QAbstractTableModel_OnEvent(QAbstractTableModel* self, intptr_t slot);
QTLIBC_API bool QAbstractTableModel_QBaseEvent(QAbstractTableModel* self, QEvent* event);
QTLIBC_API bool QAbstractTableModel_EventFilter(QAbstractTableModel* self, QObject* watched, QEvent* event);
QTLIBC_API void QAbstractTableModel_OnEventFilter(QAbstractTableModel* self, intptr_t slot);
QTLIBC_API bool QAbstractTableModel_QBaseEventFilter(QAbstractTableModel* self, QObject* watched, QEvent* event);
QTLIBC_API void QAbstractTableModel_TimerEvent(QAbstractTableModel* self, QTimerEvent* event);
QTLIBC_API void QAbstractTableModel_OnTimerEvent(QAbstractTableModel* self, intptr_t slot);
QTLIBC_API void QAbstractTableModel_QBaseTimerEvent(QAbstractTableModel* self, QTimerEvent* event);
QTLIBC_API void QAbstractTableModel_ChildEvent(QAbstractTableModel* self, QChildEvent* event);
QTLIBC_API void QAbstractTableModel_OnChildEvent(QAbstractTableModel* self, intptr_t slot);
QTLIBC_API void QAbstractTableModel_QBaseChildEvent(QAbstractTableModel* self, QChildEvent* event);
QTLIBC_API void QAbstractTableModel_CustomEvent(QAbstractTableModel* self, QEvent* event);
QTLIBC_API void QAbstractTableModel_OnCustomEvent(QAbstractTableModel* self, intptr_t slot);
QTLIBC_API void QAbstractTableModel_QBaseCustomEvent(QAbstractTableModel* self, QEvent* event);
QTLIBC_API void QAbstractTableModel_ConnectNotify(QAbstractTableModel* self, QMetaMethod* signal);
QTLIBC_API void QAbstractTableModel_OnConnectNotify(QAbstractTableModel* self, intptr_t slot);
QTLIBC_API void QAbstractTableModel_QBaseConnectNotify(QAbstractTableModel* self, QMetaMethod* signal);
QTLIBC_API void QAbstractTableModel_DisconnectNotify(QAbstractTableModel* self, QMetaMethod* signal);
QTLIBC_API void QAbstractTableModel_OnDisconnectNotify(QAbstractTableModel* self, intptr_t slot);
QTLIBC_API void QAbstractTableModel_QBaseDisconnectNotify(QAbstractTableModel* self, QMetaMethod* signal);
QTLIBC_API QModelIndex* QAbstractTableModel_CreateIndex(const QAbstractTableModel* self, int row, int column);
QTLIBC_API void QAbstractTableModel_OnCreateIndex(const QAbstractTableModel* self, intptr_t slot);
QTLIBC_API QModelIndex* QAbstractTableModel_QBaseCreateIndex(const QAbstractTableModel* self, int row, int column);
QTLIBC_API void QAbstractTableModel_EncodeData(const QAbstractTableModel* self, libqt_list /* of QModelIndex* */ indexes, QDataStream* stream);
QTLIBC_API void QAbstractTableModel_OnEncodeData(const QAbstractTableModel* self, intptr_t slot);
QTLIBC_API void QAbstractTableModel_QBaseEncodeData(const QAbstractTableModel* self, libqt_list /* of QModelIndex* */ indexes, QDataStream* stream);
QTLIBC_API bool QAbstractTableModel_DecodeData(QAbstractTableModel* self, int row, int column, QModelIndex* parent, QDataStream* stream);
QTLIBC_API void QAbstractTableModel_OnDecodeData(QAbstractTableModel* self, intptr_t slot);
QTLIBC_API bool QAbstractTableModel_QBaseDecodeData(QAbstractTableModel* self, int row, int column, QModelIndex* parent, QDataStream* stream);
QTLIBC_API void QAbstractTableModel_BeginInsertRows(QAbstractTableModel* self, QModelIndex* parent, int first, int last);
QTLIBC_API void QAbstractTableModel_OnBeginInsertRows(QAbstractTableModel* self, intptr_t slot);
QTLIBC_API void QAbstractTableModel_QBaseBeginInsertRows(QAbstractTableModel* self, QModelIndex* parent, int first, int last);
QTLIBC_API void QAbstractTableModel_EndInsertRows(QAbstractTableModel* self);
QTLIBC_API void QAbstractTableModel_OnEndInsertRows(QAbstractTableModel* self, intptr_t slot);
QTLIBC_API void QAbstractTableModel_QBaseEndInsertRows(QAbstractTableModel* self);
QTLIBC_API void QAbstractTableModel_BeginRemoveRows(QAbstractTableModel* self, QModelIndex* parent, int first, int last);
QTLIBC_API void QAbstractTableModel_OnBeginRemoveRows(QAbstractTableModel* self, intptr_t slot);
QTLIBC_API void QAbstractTableModel_QBaseBeginRemoveRows(QAbstractTableModel* self, QModelIndex* parent, int first, int last);
QTLIBC_API void QAbstractTableModel_EndRemoveRows(QAbstractTableModel* self);
QTLIBC_API void QAbstractTableModel_OnEndRemoveRows(QAbstractTableModel* self, intptr_t slot);
QTLIBC_API void QAbstractTableModel_QBaseEndRemoveRows(QAbstractTableModel* self);
QTLIBC_API bool QAbstractTableModel_BeginMoveRows(QAbstractTableModel* self, QModelIndex* sourceParent, int sourceFirst, int sourceLast, QModelIndex* destinationParent, int destinationRow);
QTLIBC_API void QAbstractTableModel_OnBeginMoveRows(QAbstractTableModel* self, intptr_t slot);
QTLIBC_API bool QAbstractTableModel_QBaseBeginMoveRows(QAbstractTableModel* self, QModelIndex* sourceParent, int sourceFirst, int sourceLast, QModelIndex* destinationParent, int destinationRow);
QTLIBC_API void QAbstractTableModel_EndMoveRows(QAbstractTableModel* self);
QTLIBC_API void QAbstractTableModel_OnEndMoveRows(QAbstractTableModel* self, intptr_t slot);
QTLIBC_API void QAbstractTableModel_QBaseEndMoveRows(QAbstractTableModel* self);
QTLIBC_API void QAbstractTableModel_BeginInsertColumns(QAbstractTableModel* self, QModelIndex* parent, int first, int last);
QTLIBC_API void QAbstractTableModel_OnBeginInsertColumns(QAbstractTableModel* self, intptr_t slot);
QTLIBC_API void QAbstractTableModel_QBaseBeginInsertColumns(QAbstractTableModel* self, QModelIndex* parent, int first, int last);
QTLIBC_API void QAbstractTableModel_EndInsertColumns(QAbstractTableModel* self);
QTLIBC_API void QAbstractTableModel_OnEndInsertColumns(QAbstractTableModel* self, intptr_t slot);
QTLIBC_API void QAbstractTableModel_QBaseEndInsertColumns(QAbstractTableModel* self);
QTLIBC_API void QAbstractTableModel_BeginRemoveColumns(QAbstractTableModel* self, QModelIndex* parent, int first, int last);
QTLIBC_API void QAbstractTableModel_OnBeginRemoveColumns(QAbstractTableModel* self, intptr_t slot);
QTLIBC_API void QAbstractTableModel_QBaseBeginRemoveColumns(QAbstractTableModel* self, QModelIndex* parent, int first, int last);
QTLIBC_API void QAbstractTableModel_EndRemoveColumns(QAbstractTableModel* self);
QTLIBC_API void QAbstractTableModel_OnEndRemoveColumns(QAbstractTableModel* self, intptr_t slot);
QTLIBC_API void QAbstractTableModel_QBaseEndRemoveColumns(QAbstractTableModel* self);
QTLIBC_API bool QAbstractTableModel_BeginMoveColumns(QAbstractTableModel* self, QModelIndex* sourceParent, int sourceFirst, int sourceLast, QModelIndex* destinationParent, int destinationColumn);
QTLIBC_API void QAbstractTableModel_OnBeginMoveColumns(QAbstractTableModel* self, intptr_t slot);
QTLIBC_API bool QAbstractTableModel_QBaseBeginMoveColumns(QAbstractTableModel* self, QModelIndex* sourceParent, int sourceFirst, int sourceLast, QModelIndex* destinationParent, int destinationColumn);
QTLIBC_API void QAbstractTableModel_EndMoveColumns(QAbstractTableModel* self);
QTLIBC_API void QAbstractTableModel_OnEndMoveColumns(QAbstractTableModel* self, intptr_t slot);
QTLIBC_API void QAbstractTableModel_QBaseEndMoveColumns(QAbstractTableModel* self);
QTLIBC_API void QAbstractTableModel_BeginResetModel(QAbstractTableModel* self);
QTLIBC_API void QAbstractTableModel_OnBeginResetModel(QAbstractTableModel* self, intptr_t slot);
QTLIBC_API void QAbstractTableModel_QBaseBeginResetModel(QAbstractTableModel* self);
QTLIBC_API void QAbstractTableModel_EndResetModel(QAbstractTableModel* self);
QTLIBC_API void QAbstractTableModel_OnEndResetModel(QAbstractTableModel* self, intptr_t slot);
QTLIBC_API void QAbstractTableModel_QBaseEndResetModel(QAbstractTableModel* self);
QTLIBC_API void QAbstractTableModel_ChangePersistentIndex(QAbstractTableModel* self, QModelIndex* from, QModelIndex* to);
QTLIBC_API void QAbstractTableModel_OnChangePersistentIndex(QAbstractTableModel* self, intptr_t slot);
QTLIBC_API void QAbstractTableModel_QBaseChangePersistentIndex(QAbstractTableModel* self, QModelIndex* from, QModelIndex* to);
QTLIBC_API void QAbstractTableModel_ChangePersistentIndexList(QAbstractTableModel* self, libqt_list /* of QModelIndex* */ from, libqt_list /* of QModelIndex* */ to);
QTLIBC_API void QAbstractTableModel_OnChangePersistentIndexList(QAbstractTableModel* self, intptr_t slot);
QTLIBC_API void QAbstractTableModel_QBaseChangePersistentIndexList(QAbstractTableModel* self, libqt_list /* of QModelIndex* */ from, libqt_list /* of QModelIndex* */ to);
QTLIBC_API libqt_list /* of QModelIndex* */ QAbstractTableModel_PersistentIndexList(const QAbstractTableModel* self);
QTLIBC_API void QAbstractTableModel_OnPersistentIndexList(const QAbstractTableModel* self, intptr_t slot);
QTLIBC_API libqt_list /* of QModelIndex* */ QAbstractTableModel_QBasePersistentIndexList(const QAbstractTableModel* self);
QTLIBC_API QObject* QAbstractTableModel_Sender(const QAbstractTableModel* self);
QTLIBC_API void QAbstractTableModel_OnSender(const QAbstractTableModel* self, intptr_t slot);
QTLIBC_API QObject* QAbstractTableModel_QBaseSender(const QAbstractTableModel* self);
QTLIBC_API int QAbstractTableModel_SenderSignalIndex(const QAbstractTableModel* self);
QTLIBC_API void QAbstractTableModel_OnSenderSignalIndex(const QAbstractTableModel* self, intptr_t slot);
QTLIBC_API int QAbstractTableModel_QBaseSenderSignalIndex(const QAbstractTableModel* self);
QTLIBC_API int QAbstractTableModel_Receivers(const QAbstractTableModel* self, const char* signal);
QTLIBC_API void QAbstractTableModel_OnReceivers(const QAbstractTableModel* self, intptr_t slot);
QTLIBC_API int QAbstractTableModel_QBaseReceivers(const QAbstractTableModel* self, const char* signal);
QTLIBC_API bool QAbstractTableModel_IsSignalConnected(const QAbstractTableModel* self, QMetaMethod* signal);
QTLIBC_API void QAbstractTableModel_OnIsSignalConnected(const QAbstractTableModel* self, intptr_t slot);
QTLIBC_API bool QAbstractTableModel_QBaseIsSignalConnected(const QAbstractTableModel* self, QMetaMethod* signal);
QTLIBC_API void QAbstractTableModel_Delete(QAbstractTableModel* self);

QTLIBC_API QAbstractListModel* QAbstractListModel_new();
QTLIBC_API QAbstractListModel* QAbstractListModel_new2(QObject* parent);
QTLIBC_API QMetaObject* QAbstractListModel_MetaObject(const QAbstractListModel* self);
QTLIBC_API void* QAbstractListModel_Metacast(QAbstractListModel* self, const char* param1);
QTLIBC_API int QAbstractListModel_Metacall(QAbstractListModel* self, int param1, int param2, void** param3);
QTLIBC_API void QAbstractListModel_OnMetacall(QAbstractListModel* self, intptr_t slot);
QTLIBC_API int QAbstractListModel_QBaseMetacall(QAbstractListModel* self, int param1, int param2, void** param3);
QTLIBC_API libqt_string QAbstractListModel_Tr(const char* s);
QTLIBC_API QModelIndex* QAbstractListModel_Index(const QAbstractListModel* self, int row, int column, QModelIndex* parent);
QTLIBC_API void QAbstractListModel_OnIndex(const QAbstractListModel* self, intptr_t slot);
QTLIBC_API QModelIndex* QAbstractListModel_QBaseIndex(const QAbstractListModel* self, int row, int column, QModelIndex* parent);
QTLIBC_API QModelIndex* QAbstractListModel_Sibling(const QAbstractListModel* self, int row, int column, QModelIndex* idx);
QTLIBC_API void QAbstractListModel_OnSibling(const QAbstractListModel* self, intptr_t slot);
QTLIBC_API QModelIndex* QAbstractListModel_QBaseSibling(const QAbstractListModel* self, int row, int column, QModelIndex* idx);
QTLIBC_API bool QAbstractListModel_DropMimeData(QAbstractListModel* self, QMimeData* data, int action, int row, int column, QModelIndex* parent);
QTLIBC_API void QAbstractListModel_OnDropMimeData(QAbstractListModel* self, intptr_t slot);
QTLIBC_API bool QAbstractListModel_QBaseDropMimeData(QAbstractListModel* self, QMimeData* data, int action, int row, int column, QModelIndex* parent);
QTLIBC_API int QAbstractListModel_Flags(const QAbstractListModel* self, QModelIndex* index);
QTLIBC_API void QAbstractListModel_OnFlags(const QAbstractListModel* self, intptr_t slot);
QTLIBC_API int QAbstractListModel_QBaseFlags(const QAbstractListModel* self, QModelIndex* index);
QTLIBC_API libqt_string QAbstractListModel_Tr2(const char* s, const char* c);
QTLIBC_API libqt_string QAbstractListModel_Tr3(const char* s, const char* c, int n);
QTLIBC_API bool QAbstractListModel_Event(QAbstractListModel* self, QEvent* event);
QTLIBC_API void QAbstractListModel_OnEvent(QAbstractListModel* self, intptr_t slot);
QTLIBC_API bool QAbstractListModel_QBaseEvent(QAbstractListModel* self, QEvent* event);
QTLIBC_API bool QAbstractListModel_EventFilter(QAbstractListModel* self, QObject* watched, QEvent* event);
QTLIBC_API void QAbstractListModel_OnEventFilter(QAbstractListModel* self, intptr_t slot);
QTLIBC_API bool QAbstractListModel_QBaseEventFilter(QAbstractListModel* self, QObject* watched, QEvent* event);
QTLIBC_API void QAbstractListModel_TimerEvent(QAbstractListModel* self, QTimerEvent* event);
QTLIBC_API void QAbstractListModel_OnTimerEvent(QAbstractListModel* self, intptr_t slot);
QTLIBC_API void QAbstractListModel_QBaseTimerEvent(QAbstractListModel* self, QTimerEvent* event);
QTLIBC_API void QAbstractListModel_ChildEvent(QAbstractListModel* self, QChildEvent* event);
QTLIBC_API void QAbstractListModel_OnChildEvent(QAbstractListModel* self, intptr_t slot);
QTLIBC_API void QAbstractListModel_QBaseChildEvent(QAbstractListModel* self, QChildEvent* event);
QTLIBC_API void QAbstractListModel_CustomEvent(QAbstractListModel* self, QEvent* event);
QTLIBC_API void QAbstractListModel_OnCustomEvent(QAbstractListModel* self, intptr_t slot);
QTLIBC_API void QAbstractListModel_QBaseCustomEvent(QAbstractListModel* self, QEvent* event);
QTLIBC_API void QAbstractListModel_ConnectNotify(QAbstractListModel* self, QMetaMethod* signal);
QTLIBC_API void QAbstractListModel_OnConnectNotify(QAbstractListModel* self, intptr_t slot);
QTLIBC_API void QAbstractListModel_QBaseConnectNotify(QAbstractListModel* self, QMetaMethod* signal);
QTLIBC_API void QAbstractListModel_DisconnectNotify(QAbstractListModel* self, QMetaMethod* signal);
QTLIBC_API void QAbstractListModel_OnDisconnectNotify(QAbstractListModel* self, intptr_t slot);
QTLIBC_API void QAbstractListModel_QBaseDisconnectNotify(QAbstractListModel* self, QMetaMethod* signal);
QTLIBC_API int QAbstractListModel_RowCount(const QAbstractListModel* self, QModelIndex* parent);
QTLIBC_API void QAbstractListModel_OnRowCount(const QAbstractListModel* self, intptr_t slot);
QTLIBC_API int QAbstractListModel_QBaseRowCount(const QAbstractListModel* self, QModelIndex* parent);
QTLIBC_API QVariant* QAbstractListModel_Data(const QAbstractListModel* self, QModelIndex* index, int role);
QTLIBC_API void QAbstractListModel_OnData(const QAbstractListModel* self, intptr_t slot);
QTLIBC_API QVariant* QAbstractListModel_QBaseData(const QAbstractListModel* self, QModelIndex* index, int role);
QTLIBC_API bool QAbstractListModel_SetData(QAbstractListModel* self, QModelIndex* index, QVariant* value, int role);
QTLIBC_API void QAbstractListModel_OnSetData(QAbstractListModel* self, intptr_t slot);
QTLIBC_API bool QAbstractListModel_QBaseSetData(QAbstractListModel* self, QModelIndex* index, QVariant* value, int role);
QTLIBC_API QVariant* QAbstractListModel_HeaderData(const QAbstractListModel* self, int section, int orientation, int role);
QTLIBC_API void QAbstractListModel_OnHeaderData(const QAbstractListModel* self, intptr_t slot);
QTLIBC_API QVariant* QAbstractListModel_QBaseHeaderData(const QAbstractListModel* self, int section, int orientation, int role);
QTLIBC_API bool QAbstractListModel_SetHeaderData(QAbstractListModel* self, int section, int orientation, QVariant* value, int role);
QTLIBC_API void QAbstractListModel_OnSetHeaderData(QAbstractListModel* self, intptr_t slot);
QTLIBC_API bool QAbstractListModel_QBaseSetHeaderData(QAbstractListModel* self, int section, int orientation, QVariant* value, int role);
QTLIBC_API libqt_map /* of int to QVariant* */ QAbstractListModel_ItemData(const QAbstractListModel* self, QModelIndex* index);
QTLIBC_API void QAbstractListModel_OnItemData(const QAbstractListModel* self, intptr_t slot);
QTLIBC_API libqt_map /* of int to QVariant* */ QAbstractListModel_QBaseItemData(const QAbstractListModel* self, QModelIndex* index);
QTLIBC_API bool QAbstractListModel_SetItemData(QAbstractListModel* self, QModelIndex* index, libqt_map /* of int to QVariant* */ roles);
QTLIBC_API void QAbstractListModel_OnSetItemData(QAbstractListModel* self, intptr_t slot);
QTLIBC_API bool QAbstractListModel_QBaseSetItemData(QAbstractListModel* self, QModelIndex* index, libqt_map /* of int to QVariant* */ roles);
QTLIBC_API bool QAbstractListModel_ClearItemData(QAbstractListModel* self, QModelIndex* index);
QTLIBC_API void QAbstractListModel_OnClearItemData(QAbstractListModel* self, intptr_t slot);
QTLIBC_API bool QAbstractListModel_QBaseClearItemData(QAbstractListModel* self, QModelIndex* index);
QTLIBC_API libqt_list /* of libqt_string */ QAbstractListModel_MimeTypes(const QAbstractListModel* self);
QTLIBC_API void QAbstractListModel_OnMimeTypes(const QAbstractListModel* self, intptr_t slot);
QTLIBC_API libqt_list /* of libqt_string */ QAbstractListModel_QBaseMimeTypes(const QAbstractListModel* self);
QTLIBC_API QMimeData* QAbstractListModel_MimeData(const QAbstractListModel* self, libqt_list /* of QModelIndex* */ indexes);
QTLIBC_API void QAbstractListModel_OnMimeData(const QAbstractListModel* self, intptr_t slot);
QTLIBC_API QMimeData* QAbstractListModel_QBaseMimeData(const QAbstractListModel* self, libqt_list /* of QModelIndex* */ indexes);
QTLIBC_API bool QAbstractListModel_CanDropMimeData(const QAbstractListModel* self, QMimeData* data, int action, int row, int column, QModelIndex* parent);
QTLIBC_API void QAbstractListModel_OnCanDropMimeData(const QAbstractListModel* self, intptr_t slot);
QTLIBC_API bool QAbstractListModel_QBaseCanDropMimeData(const QAbstractListModel* self, QMimeData* data, int action, int row, int column, QModelIndex* parent);
QTLIBC_API int QAbstractListModel_SupportedDropActions(const QAbstractListModel* self);
QTLIBC_API void QAbstractListModel_OnSupportedDropActions(const QAbstractListModel* self, intptr_t slot);
QTLIBC_API int QAbstractListModel_QBaseSupportedDropActions(const QAbstractListModel* self);
QTLIBC_API int QAbstractListModel_SupportedDragActions(const QAbstractListModel* self);
QTLIBC_API void QAbstractListModel_OnSupportedDragActions(const QAbstractListModel* self, intptr_t slot);
QTLIBC_API int QAbstractListModel_QBaseSupportedDragActions(const QAbstractListModel* self);
QTLIBC_API bool QAbstractListModel_InsertRows(QAbstractListModel* self, int row, int count, QModelIndex* parent);
QTLIBC_API void QAbstractListModel_OnInsertRows(QAbstractListModel* self, intptr_t slot);
QTLIBC_API bool QAbstractListModel_QBaseInsertRows(QAbstractListModel* self, int row, int count, QModelIndex* parent);
QTLIBC_API bool QAbstractListModel_InsertColumns(QAbstractListModel* self, int column, int count, QModelIndex* parent);
QTLIBC_API void QAbstractListModel_OnInsertColumns(QAbstractListModel* self, intptr_t slot);
QTLIBC_API bool QAbstractListModel_QBaseInsertColumns(QAbstractListModel* self, int column, int count, QModelIndex* parent);
QTLIBC_API bool QAbstractListModel_RemoveRows(QAbstractListModel* self, int row, int count, QModelIndex* parent);
QTLIBC_API void QAbstractListModel_OnRemoveRows(QAbstractListModel* self, intptr_t slot);
QTLIBC_API bool QAbstractListModel_QBaseRemoveRows(QAbstractListModel* self, int row, int count, QModelIndex* parent);
QTLIBC_API bool QAbstractListModel_RemoveColumns(QAbstractListModel* self, int column, int count, QModelIndex* parent);
QTLIBC_API void QAbstractListModel_OnRemoveColumns(QAbstractListModel* self, intptr_t slot);
QTLIBC_API bool QAbstractListModel_QBaseRemoveColumns(QAbstractListModel* self, int column, int count, QModelIndex* parent);
QTLIBC_API bool QAbstractListModel_MoveRows(QAbstractListModel* self, QModelIndex* sourceParent, int sourceRow, int count, QModelIndex* destinationParent, int destinationChild);
QTLIBC_API void QAbstractListModel_OnMoveRows(QAbstractListModel* self, intptr_t slot);
QTLIBC_API bool QAbstractListModel_QBaseMoveRows(QAbstractListModel* self, QModelIndex* sourceParent, int sourceRow, int count, QModelIndex* destinationParent, int destinationChild);
QTLIBC_API bool QAbstractListModel_MoveColumns(QAbstractListModel* self, QModelIndex* sourceParent, int sourceColumn, int count, QModelIndex* destinationParent, int destinationChild);
QTLIBC_API void QAbstractListModel_OnMoveColumns(QAbstractListModel* self, intptr_t slot);
QTLIBC_API bool QAbstractListModel_QBaseMoveColumns(QAbstractListModel* self, QModelIndex* sourceParent, int sourceColumn, int count, QModelIndex* destinationParent, int destinationChild);
QTLIBC_API void QAbstractListModel_FetchMore(QAbstractListModel* self, QModelIndex* parent);
QTLIBC_API void QAbstractListModel_OnFetchMore(QAbstractListModel* self, intptr_t slot);
QTLIBC_API void QAbstractListModel_QBaseFetchMore(QAbstractListModel* self, QModelIndex* parent);
QTLIBC_API bool QAbstractListModel_CanFetchMore(const QAbstractListModel* self, QModelIndex* parent);
QTLIBC_API void QAbstractListModel_OnCanFetchMore(const QAbstractListModel* self, intptr_t slot);
QTLIBC_API bool QAbstractListModel_QBaseCanFetchMore(const QAbstractListModel* self, QModelIndex* parent);
QTLIBC_API void QAbstractListModel_Sort(QAbstractListModel* self, int column, int order);
QTLIBC_API void QAbstractListModel_OnSort(QAbstractListModel* self, intptr_t slot);
QTLIBC_API void QAbstractListModel_QBaseSort(QAbstractListModel* self, int column, int order);
QTLIBC_API QModelIndex* QAbstractListModel_Buddy(const QAbstractListModel* self, QModelIndex* index);
QTLIBC_API void QAbstractListModel_OnBuddy(const QAbstractListModel* self, intptr_t slot);
QTLIBC_API QModelIndex* QAbstractListModel_QBaseBuddy(const QAbstractListModel* self, QModelIndex* index);
QTLIBC_API libqt_list /* of QModelIndex* */ QAbstractListModel_Match(const QAbstractListModel* self, QModelIndex* start, int role, QVariant* value, int hits, int flags);
QTLIBC_API void QAbstractListModel_OnMatch(const QAbstractListModel* self, intptr_t slot);
QTLIBC_API libqt_list /* of QModelIndex* */ QAbstractListModel_QBaseMatch(const QAbstractListModel* self, QModelIndex* start, int role, QVariant* value, int hits, int flags);
QTLIBC_API QSize* QAbstractListModel_Span(const QAbstractListModel* self, QModelIndex* index);
QTLIBC_API void QAbstractListModel_OnSpan(const QAbstractListModel* self, intptr_t slot);
QTLIBC_API QSize* QAbstractListModel_QBaseSpan(const QAbstractListModel* self, QModelIndex* index);
QTLIBC_API libqt_map /* of int to libqt_string */ QAbstractListModel_RoleNames(const QAbstractListModel* self);
QTLIBC_API void QAbstractListModel_OnRoleNames(const QAbstractListModel* self, intptr_t slot);
QTLIBC_API libqt_map /* of int to libqt_string */ QAbstractListModel_QBaseRoleNames(const QAbstractListModel* self);
QTLIBC_API void QAbstractListModel_MultiData(const QAbstractListModel* self, QModelIndex* index, QModelRoleDataSpan* roleDataSpan);
QTLIBC_API void QAbstractListModel_OnMultiData(const QAbstractListModel* self, intptr_t slot);
QTLIBC_API void QAbstractListModel_QBaseMultiData(const QAbstractListModel* self, QModelIndex* index, QModelRoleDataSpan* roleDataSpan);
QTLIBC_API bool QAbstractListModel_Submit(QAbstractListModel* self);
QTLIBC_API void QAbstractListModel_OnSubmit(QAbstractListModel* self, intptr_t slot);
QTLIBC_API bool QAbstractListModel_QBaseSubmit(QAbstractListModel* self);
QTLIBC_API void QAbstractListModel_Revert(QAbstractListModel* self);
QTLIBC_API void QAbstractListModel_OnRevert(QAbstractListModel* self, intptr_t slot);
QTLIBC_API void QAbstractListModel_QBaseRevert(QAbstractListModel* self);
QTLIBC_API void QAbstractListModel_ResetInternalData(QAbstractListModel* self);
QTLIBC_API void QAbstractListModel_OnResetInternalData(QAbstractListModel* self, intptr_t slot);
QTLIBC_API void QAbstractListModel_QBaseResetInternalData(QAbstractListModel* self);
QTLIBC_API QModelIndex* QAbstractListModel_CreateIndex(const QAbstractListModel* self, int row, int column);
QTLIBC_API void QAbstractListModel_OnCreateIndex(const QAbstractListModel* self, intptr_t slot);
QTLIBC_API QModelIndex* QAbstractListModel_QBaseCreateIndex(const QAbstractListModel* self, int row, int column);
QTLIBC_API void QAbstractListModel_EncodeData(const QAbstractListModel* self, libqt_list /* of QModelIndex* */ indexes, QDataStream* stream);
QTLIBC_API void QAbstractListModel_OnEncodeData(const QAbstractListModel* self, intptr_t slot);
QTLIBC_API void QAbstractListModel_QBaseEncodeData(const QAbstractListModel* self, libqt_list /* of QModelIndex* */ indexes, QDataStream* stream);
QTLIBC_API bool QAbstractListModel_DecodeData(QAbstractListModel* self, int row, int column, QModelIndex* parent, QDataStream* stream);
QTLIBC_API void QAbstractListModel_OnDecodeData(QAbstractListModel* self, intptr_t slot);
QTLIBC_API bool QAbstractListModel_QBaseDecodeData(QAbstractListModel* self, int row, int column, QModelIndex* parent, QDataStream* stream);
QTLIBC_API void QAbstractListModel_BeginInsertRows(QAbstractListModel* self, QModelIndex* parent, int first, int last);
QTLIBC_API void QAbstractListModel_OnBeginInsertRows(QAbstractListModel* self, intptr_t slot);
QTLIBC_API void QAbstractListModel_QBaseBeginInsertRows(QAbstractListModel* self, QModelIndex* parent, int first, int last);
QTLIBC_API void QAbstractListModel_EndInsertRows(QAbstractListModel* self);
QTLIBC_API void QAbstractListModel_OnEndInsertRows(QAbstractListModel* self, intptr_t slot);
QTLIBC_API void QAbstractListModel_QBaseEndInsertRows(QAbstractListModel* self);
QTLIBC_API void QAbstractListModel_BeginRemoveRows(QAbstractListModel* self, QModelIndex* parent, int first, int last);
QTLIBC_API void QAbstractListModel_OnBeginRemoveRows(QAbstractListModel* self, intptr_t slot);
QTLIBC_API void QAbstractListModel_QBaseBeginRemoveRows(QAbstractListModel* self, QModelIndex* parent, int first, int last);
QTLIBC_API void QAbstractListModel_EndRemoveRows(QAbstractListModel* self);
QTLIBC_API void QAbstractListModel_OnEndRemoveRows(QAbstractListModel* self, intptr_t slot);
QTLIBC_API void QAbstractListModel_QBaseEndRemoveRows(QAbstractListModel* self);
QTLIBC_API bool QAbstractListModel_BeginMoveRows(QAbstractListModel* self, QModelIndex* sourceParent, int sourceFirst, int sourceLast, QModelIndex* destinationParent, int destinationRow);
QTLIBC_API void QAbstractListModel_OnBeginMoveRows(QAbstractListModel* self, intptr_t slot);
QTLIBC_API bool QAbstractListModel_QBaseBeginMoveRows(QAbstractListModel* self, QModelIndex* sourceParent, int sourceFirst, int sourceLast, QModelIndex* destinationParent, int destinationRow);
QTLIBC_API void QAbstractListModel_EndMoveRows(QAbstractListModel* self);
QTLIBC_API void QAbstractListModel_OnEndMoveRows(QAbstractListModel* self, intptr_t slot);
QTLIBC_API void QAbstractListModel_QBaseEndMoveRows(QAbstractListModel* self);
QTLIBC_API void QAbstractListModel_BeginInsertColumns(QAbstractListModel* self, QModelIndex* parent, int first, int last);
QTLIBC_API void QAbstractListModel_OnBeginInsertColumns(QAbstractListModel* self, intptr_t slot);
QTLIBC_API void QAbstractListModel_QBaseBeginInsertColumns(QAbstractListModel* self, QModelIndex* parent, int first, int last);
QTLIBC_API void QAbstractListModel_EndInsertColumns(QAbstractListModel* self);
QTLIBC_API void QAbstractListModel_OnEndInsertColumns(QAbstractListModel* self, intptr_t slot);
QTLIBC_API void QAbstractListModel_QBaseEndInsertColumns(QAbstractListModel* self);
QTLIBC_API void QAbstractListModel_BeginRemoveColumns(QAbstractListModel* self, QModelIndex* parent, int first, int last);
QTLIBC_API void QAbstractListModel_OnBeginRemoveColumns(QAbstractListModel* self, intptr_t slot);
QTLIBC_API void QAbstractListModel_QBaseBeginRemoveColumns(QAbstractListModel* self, QModelIndex* parent, int first, int last);
QTLIBC_API void QAbstractListModel_EndRemoveColumns(QAbstractListModel* self);
QTLIBC_API void QAbstractListModel_OnEndRemoveColumns(QAbstractListModel* self, intptr_t slot);
QTLIBC_API void QAbstractListModel_QBaseEndRemoveColumns(QAbstractListModel* self);
QTLIBC_API bool QAbstractListModel_BeginMoveColumns(QAbstractListModel* self, QModelIndex* sourceParent, int sourceFirst, int sourceLast, QModelIndex* destinationParent, int destinationColumn);
QTLIBC_API void QAbstractListModel_OnBeginMoveColumns(QAbstractListModel* self, intptr_t slot);
QTLIBC_API bool QAbstractListModel_QBaseBeginMoveColumns(QAbstractListModel* self, QModelIndex* sourceParent, int sourceFirst, int sourceLast, QModelIndex* destinationParent, int destinationColumn);
QTLIBC_API void QAbstractListModel_EndMoveColumns(QAbstractListModel* self);
QTLIBC_API void QAbstractListModel_OnEndMoveColumns(QAbstractListModel* self, intptr_t slot);
QTLIBC_API void QAbstractListModel_QBaseEndMoveColumns(QAbstractListModel* self);
QTLIBC_API void QAbstractListModel_BeginResetModel(QAbstractListModel* self);
QTLIBC_API void QAbstractListModel_OnBeginResetModel(QAbstractListModel* self, intptr_t slot);
QTLIBC_API void QAbstractListModel_QBaseBeginResetModel(QAbstractListModel* self);
QTLIBC_API void QAbstractListModel_EndResetModel(QAbstractListModel* self);
QTLIBC_API void QAbstractListModel_OnEndResetModel(QAbstractListModel* self, intptr_t slot);
QTLIBC_API void QAbstractListModel_QBaseEndResetModel(QAbstractListModel* self);
QTLIBC_API void QAbstractListModel_ChangePersistentIndex(QAbstractListModel* self, QModelIndex* from, QModelIndex* to);
QTLIBC_API void QAbstractListModel_OnChangePersistentIndex(QAbstractListModel* self, intptr_t slot);
QTLIBC_API void QAbstractListModel_QBaseChangePersistentIndex(QAbstractListModel* self, QModelIndex* from, QModelIndex* to);
QTLIBC_API void QAbstractListModel_ChangePersistentIndexList(QAbstractListModel* self, libqt_list /* of QModelIndex* */ from, libqt_list /* of QModelIndex* */ to);
QTLIBC_API void QAbstractListModel_OnChangePersistentIndexList(QAbstractListModel* self, intptr_t slot);
QTLIBC_API void QAbstractListModel_QBaseChangePersistentIndexList(QAbstractListModel* self, libqt_list /* of QModelIndex* */ from, libqt_list /* of QModelIndex* */ to);
QTLIBC_API libqt_list /* of QModelIndex* */ QAbstractListModel_PersistentIndexList(const QAbstractListModel* self);
QTLIBC_API void QAbstractListModel_OnPersistentIndexList(const QAbstractListModel* self, intptr_t slot);
QTLIBC_API libqt_list /* of QModelIndex* */ QAbstractListModel_QBasePersistentIndexList(const QAbstractListModel* self);
QTLIBC_API QObject* QAbstractListModel_Sender(const QAbstractListModel* self);
QTLIBC_API void QAbstractListModel_OnSender(const QAbstractListModel* self, intptr_t slot);
QTLIBC_API QObject* QAbstractListModel_QBaseSender(const QAbstractListModel* self);
QTLIBC_API int QAbstractListModel_SenderSignalIndex(const QAbstractListModel* self);
QTLIBC_API void QAbstractListModel_OnSenderSignalIndex(const QAbstractListModel* self, intptr_t slot);
QTLIBC_API int QAbstractListModel_QBaseSenderSignalIndex(const QAbstractListModel* self);
QTLIBC_API int QAbstractListModel_Receivers(const QAbstractListModel* self, const char* signal);
QTLIBC_API void QAbstractListModel_OnReceivers(const QAbstractListModel* self, intptr_t slot);
QTLIBC_API int QAbstractListModel_QBaseReceivers(const QAbstractListModel* self, const char* signal);
QTLIBC_API bool QAbstractListModel_IsSignalConnected(const QAbstractListModel* self, QMetaMethod* signal);
QTLIBC_API void QAbstractListModel_OnIsSignalConnected(const QAbstractListModel* self, intptr_t slot);
QTLIBC_API bool QAbstractListModel_QBaseIsSignalConnected(const QAbstractListModel* self, QMetaMethod* signal);
QTLIBC_API void QAbstractListModel_Delete(QAbstractListModel* self);

#ifdef __cplusplus
} /* extern C */
#endif

#endif
